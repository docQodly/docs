"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([["8108"],{559:function(e,n,t){t.r(n),t.d(n,{metadata:()=>s,contentTitle:()=>a,default:()=>u,assets:()=>d,toc:()=>l,frontMatter:()=>r});var s=JSON.parse('{"id":"notes/1.2.0","title":"1.2.0","description":"05/01/2025","source":"@site/docs/notes/1.2.0.md","sourceDirName":"notes","slug":"/notes/1.2.0","permalink":"/docs/next/notes/1.2.0","draft":false,"unlisted":false,"editUrl":"https://github.com/qodly/docs/issues/new?title=Comment%20on%20notes%2F1.2.0.md%20(current)&body=Share%20any%20feedback%20about%20this%20page%20%E2%80%94%20report%20issues%2C%20suggest%20improvements%2C%20or%20tell%20us%20what%E2%80%99s%20helpful.%0A%0AIf%20it%E2%80%99s%20an%20issue%3A%0A-%20What%E2%80%99s%20the%20issue%3F%20(e.g.%2C%20typo%2C%20incorrect%20information%2C%20unclear%20explanation)%0A-%20Where%20is%20it%3F%20(e.g.%2C%20section%20name%2C%20specific%20paragraph%2C%20or%20line)%0A%0AThank%20you%20for%20helping%20us%20improve!%20%F0%9F%9A%80%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20","tags":[],"version":"current","frontMatter":{"id":"1.2.0","title":"1.2.0"},"sidebar":"GetStarted","previous":{"title":"Refunds","permalink":"/docs/next/get-started/refunds"},"next":{"title":"1.1.0","permalink":"/docs/next/notes/1.1.0"}}'),i=t("85893"),o=t("50065");t("53877");let r={id:"1.2.0",title:"1.2.0"},a=void 0,d={},l=[{value:"05/01/2025",id:"05012025",level:4},{value:"Qodly Studio",id:"qodly-studio",level:2},{value:"Qodly Server",id:"qodly-server",level:2}];function c(e){let n={a:"a",code:"code",h2:"h2",h4:"h4",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h4,{id:"05012025",children:"05/01/2025"}),"\n","\n",(0,i.jsx)(n.h2,{id:"qodly-studio",children:"Qodly Studio"}),"\n",(0,i.jsx)("h3",{children:"What's new"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"../qodlyLookerStudio/qodlyLookerStudioConnector",children:"Qodly Looker Studio Connector"}),": Added integration between Qodly applications and Google Looker Studio, enabling users to create interactive dashboards, track real-time business metrics, and generate custom reports using Qodly data."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/next/studio/pageLoaders/states/conditionalState#saved-condition-integration",children:"Saved Condition Go To Button"}),": When a saved condition is integrated into a state, a ",(0,i.jsx)(n.strong,{children:"Go to"})," button now appears next to its name. Clicking it opens the full saved condition in edit mode\u2014so you can quickly review or update it without leaving the schema view."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/next/studio/pageLoaders/components/textinput#intervals-for-date-input",children:"Interval Range Validation for Text Input"}),": For text inputs using the ",(0,i.jsxs)(n.strong,{children:["interval type ",(0,i.jsx)(n.code,{children:"Range"})]}),", if the ",(0,i.jsx)(n.strong,{children:"start date is later than the end date"}),", an error message will be shown and the dates will be temporarily disabled until corrected."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/next/studio/pageLoaders/components/matrix#properties-customization",children:"Matrix Selection Behavior Options"}),": You can now control how the ",(0,i.jsx)(n.strong,{children:"Matrix"})," behaves after a data update (like reloading or filtering)."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/next/studio/debugging#debugger-sidebar",children:"Debugger Sidebar"}),": A new sidebar in the code editor lets you monitor, group, enable/disable, delete, and jump to breakpoints across your entire app. It also shows a ",(0,i.jsx)(n.a,{href:"/docs/next/studio/debugging#variables-panel",children:"Variables panel"})," during debug sessions, so you can view local variables, current line variables, and method arguments\u2014all in one place."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/next/studio/localization",children:"Localization (i18n)"}),": Launched built-in Localization support, allowing you to create multilingual applications visually\u2014without coding. You can define supported locales, manage translation keys and literals, preview translations directly in the Studio, and allow users to switch languages at runtime using the ",(0,i.jsx)(n.a,{href:"/docs/next/studio/pageLoaders/qodlySources#qodlysource-userlanguage",children:"UserLanguage"})," shared source."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/next/studio/pageLoaders/qodlySources#built-in-shared-qodly-namespace",children:"Built-in Shared Qodly Namespace"}),": Introduced a built-in Qodly namespace available across all application pages. It provides ready-to-use qodlysources for shared data handling, including a ",(0,i.jsx)(n.a,{href:"/docs/next/studio/pageLoaders/qodlySources#qodlysource-location",children:"Location shared qodlysource"})," that simplifies working with URL segments, query parameters, and anchors. As well as, a ",(0,i.jsx)(n.a,{href:"/docs/next/studio/pageLoaders/qodlySources#qodlysource-userlanguage",children:"UserLanguage shared qodlysource"})," that allows runtime management of user-selected languages and lists supported locales dynamically."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/next/studio/rendering#connection-status-handling",children:"Connection Status Handling in Renderer"}),": The Renderer now displays connection status messages when the network is lost or restored during rendering. A red banner appears when disconnected, and a green banner confirms when the connection is restored."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)("h3",{children:" Improvements "}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsxs)(n.strong,{children:["Renamed properties in the ",(0,i.jsx)(n.a,{href:"/docs/next/studio/pageLoaders/components/textinput#params-object-properties",children:"intervals datasource"})]})," of the text input component for consistency:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"toDay"})," is now ",(0,i.jsx)(n.code,{children:"today"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"startingfrom"})," is now ",(0,i.jsx)(n.code,{children:"startingFrom"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"untilto"})," is now ",(0,i.jsx)(n.code,{children:"until"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Include Option and Interval Card Toggle"}),": Added visual controls to improve interval management. The ",(0,i.jsx)(n.a,{href:"/docs/next/studio/pageLoaders/components/textinput#include-checkbox-within-the-card",children:"Include checkbox"})," lets users include or exclude specific date ranges, while the ",(0,i.jsx)(n.a,{href:"/docs/next/studio/pageLoaders/components/textinput#card-toggle-top-right",children:"card toggle"})," allows enabling or disabling intervals without losing their configuration."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/next/studio/httpHandlers",children:"HTTP Handlers UI Redesign"}),": Updated the UI to provide a clearer and more intuitive layout, making it easier to configure and manage request handlers."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/next/studio/roles/permissionsOverview#clean-non-existing-resources",children:"Roles and Privileges UI \u2013 Button Label Update"}),": In the Roles and Privileges interface, the ",(0,i.jsx)(n.strong,{children:"Clear"})," button was renamed to ",(0,i.jsx)(n.strong,{children:"Clean"})," for clarity. This button appears when a resource (like an attribute) is no longer available, and lets users remove outdated permissions."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/next/studio/pageLoaders/qodlySources#editing-a-qodly-source",children:"Initial Value Editing in Qodly Source"}),": For qodlysources with editable properties, initial values now include a ",(0,i.jsx)(n.strong,{children:"Maximize"})," button for fields of type ",(0,i.jsx)(n.code,{children:"object"})," or ",(0,i.jsx)(n.code,{children:"array"}),". Clicking the maximize icon opens a popup editor, which can also be expanded to fill the contextual panel, making it easier to edit complex or long values."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/next/studio/pageLoaders/components/textinput#embedded-input",children:"Date Picker Navigation in Text Input"}),": Users can now navigate to the next/previous month and next/previous year directly within the date picker for a smoother selection experience."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"qodly-server",children:"Qodly Server"}),"\n",(0,i.jsx)("h3",{children:" What's New "}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{}),"\n"]}),"\n",(0,i.jsx)("h3",{children:" Improvements "}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{}),"\n"]})]})}function u(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},53877:function(e,n,t){t(85893),t(67294)},50065:function(e,n,t){t.d(n,{Z:function(){return a},a:function(){return r}});var s=t(67294);let i={},o=s.createContext(i);function r(e){let n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);
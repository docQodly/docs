"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([[2966],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>h});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=c(a),u=r,h=m["".concat(s,".").concat(u)]||m[u]||d[u]||i;return a?n.createElement(h,l(l({ref:t},p),{},{components:a})):n.createElement(h,l({ref:t},p))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[m]="string"==typeof e?e:r,l[1]=o;for(var c=2;c<i;c++)l[c]=a[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},2068:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var n=a(7462),r=(a(7294),a(3905));const i={id:"lang-identifiers",title:"Identifiers"},l=void 0,o={unversionedId:"concepts/lang-identifiers",id:"concepts/lang-identifiers",title:"Identifiers",description:"This section describes the conventions and rules for naming various elements in the QodlyScript language (variables, object properties, classes, etc.).",source:"@site/docs/concepts/lang-identifiers.md",sourceDirName:"concepts",slug:"/concepts/lang-identifiers",permalink:"/docs/concepts/lang-identifiers",draft:!1,editUrl:"https://github.com/docQodly/docs/edit/main/docs/concepts/lang-identifiers.md",tags:[],version:"current",frontMatter:{id:"lang-identifiers",title:"Identifiers"}},s={},c=[{value:"Arrays",id:"arrays",level:2},{value:"Classes",id:"classes",level:2},{value:"Functions",id:"functions",level:2},{value:"Object properties",id:"object-properties",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Methods",id:"methods",level:2},{value:"Tables and Fields",id:"tables-and-fields",level:2},{value:"Variables",id:"variables",level:2},{value:"Other names",id:"other-names",level:2}],p={toc:c};function m(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This section describes the conventions and rules for naming various elements in the QodlyScript language (variables, object properties, classes, etc.)."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"If non-Roman characters are used in the names of the identifiers, their maximum length may be smaller.")),(0,r.kt)("h2",{id:"arrays"},"Arrays"),(0,r.kt)("p",null,"Array names follow the same rules as ",(0,r.kt)("a",{parentName:"p",href:"#variables"},"variables"),"."),(0,r.kt)("h2",{id:"classes"},"Classes"),(0,r.kt)("p",null,"The name of a class can contain up to 31 characters."),(0,r.kt)("p",null,"A class name must be compliant with standard ",(0,r.kt)("a",{parentName:"p",href:"#object-properties"},"property naming rules")," for dot notation."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Giving the same name to a user class and a ",(0,r.kt)("a",{parentName:"p",href:"#dataclass"},"dataclass")," is not recommended, in order to prevent any conflict.")),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("p",null,"Function names must be compliant with standard ",(0,r.kt)("a",{parentName:"p",href:"#object-properties"},"property naming rules")," for dot notation."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},'Starting the function name with an underscore character ("_") will exclude the function from the autocompletion features in the code editor.')),(0,r.kt)("h2",{id:"object-properties"},"Object properties"),(0,r.kt)("p",null,"The name of an object property (also called object ",(0,r.kt)("em",{parentName:"p"},"attribute"),") can contain up to 255 characters."),(0,r.kt)("p",null,"Object properties can reference scalar values, ORDA elements, class functions, other objects, etc. Whatever their nature, object property names must follow the following rules ",(0,r.kt)("strong",{parentName:"p"},"if you want to use the dot notation"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'A property name must begin with a letter, an underscore, or a dollar "$".'),(0,r.kt)("li",{parentName:"ul"},'Thereafter, the name can include any letter, digit, the underscore character ("_"), or the dollar character ("$").'),(0,r.kt)("li",{parentName:"ul"},"Property names are case sensitive.")),(0,r.kt)("p",null,"Examples:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-4d"},'myObject.myAttribute="10"\nvalue=$clientObj.data.address.city\n')),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"If you use ",(0,r.kt)("strong",{parentName:"p"},"string notation")," within square brackets, property names can contain any characters (ex: ",(0,r.kt)("inlineCode",{parentName:"p"},'myObject["1. First property"]'),").")),(0,r.kt)("p",null,"See also ",(0,r.kt)("a",{parentName:"p",href:"https://www.ecma-international.org/ecma-262/5.1/#sec-7.6"},"ECMA Script standard"),"."),(0,r.kt)("h2",{id:"parameters"},"Parameters"),(0,r.kt)("p",null,"Parameter names follow the same rules as ",(0,r.kt)("a",{parentName:"p",href:"#variables"},"variable names"),"."),(0,r.kt)("p",null,"Examples:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-4d"},"Function getArea(width : Integer, height : Integer)-> area : Integer\n\n#Declare (i : Integer , param : Date) -> myResult : Object\n")),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("p",null,"The name of a method contains up to 31 characters."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A method name must begin with a letter, a digit, or an underscore"),(0,r.kt)("li",{parentName:"ul"},'Thereafter, the name can include any letter or digit, the underscore character ("_"), or the space character.'),(0,r.kt)("li",{parentName:"ul"},"Do not use reserved names, i.e. QodlyScript command names (",(0,r.kt)("inlineCode",{parentName:"li"},"Date"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Time"),", etc), keywords (",(0,r.kt)("inlineCode",{parentName:"li"},"if"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"for"),", etc.), or constant names (",(0,r.kt)("inlineCode",{parentName:"li"},"Euro"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Black"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Friday"),", etc.)."),(0,r.kt)("li",{parentName:"ul"},"Method names are case insensitive.")),(0,r.kt)("p",null,"It is a good programming technique to adopt the same naming convention as the one used by Qodly for built-in methods. Use uppercase characters for naming your methods; however if a method returns a value, capitalize the first character of its name. By doing so, when you reopen a project for maintenance after a few months, you will already know if a method returns a result by simply looking at its name in the Explorer."),(0,r.kt)("p",null,"Examples:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-4d"},"if(new client)\nDELETE DUPLICATED VALUES\nFormula(increase_salaries)\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"When you call a method, you just type its name. However, some QodlyScript built-in commands, such as ",(0,r.kt)("inlineCode",{parentName:"p"},"ON EVENT CALL"),", expect the name of a method as a string when a method parameter is passed. For example:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-4d"},' //This collection function accepts a method name\nstrings2=strings1.orderByMethod("sortCollection",sk strict)\n'))),(0,r.kt)("h2",{id:"tables-and-fields"},"Tables and Fields"),(0,r.kt)("p",null,"You designate a table by placing its name between brackets: ","[","...]. You designate a field by first specifying the table to which it belongs (the field name immediately follows the table name)."),(0,r.kt)("p",null,"A table name and field name can contain up to 31 characters."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'A table or field name must begin with a letter, an underscore, or a dollar ("$")'),(0,r.kt)("li",{parentName:"ul"},'Thereafter, the name can include alphabetic characters, numeric characters, the space character, and the underscore character ("_").'),(0,r.kt)("li",{parentName:"ul"},"Do not use reserved names, i.e. 4D command names (",(0,r.kt)("inlineCode",{parentName:"li"},"Date"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Time"),", etc), keywords (",(0,r.kt)("inlineCode",{parentName:"li"},"If"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"For"),", etc.), or constant names (",(0,r.kt)("inlineCode",{parentName:"li"},"Euro"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Black"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Friday"),", etc.)."),(0,r.kt)("li",{parentName:"ul"},"Additional rules must be respected when the database must be handled via SQL: only the characters _0123456789abcdefghijklmnopqrstuvwxyz are accepted, and the name must not include any SQL keywords (command, attribute, etc.).")),(0,r.kt)("p",null,"Examples:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-4d"},'FORM SET INPUT([Clients];"Entry")\nADD RECORD([Letters])\n[Orders]Total:=Sum([Line]Amount)\nQUERY([Clients];[Clients]Name="Smith")\n[Letters]Text:=Capitalize text([Letters]Text)\n\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Giving the same name to a table and a ",(0,r.kt)("a",{parentName:"p",href:"#classes"},"class")," is not recommended, in order to prevent any conflict.")),(0,r.kt)("h2",{id:"variables"},"Variables"),(0,r.kt)("p",null,"The name of a variable can be up to 31 characters."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'A variable name must begin with a letter, an underscore, or a dollar ("$") for ',(0,r.kt)("a",{parentName:"li",href:"parameters.md"},"parameters")," and ",(0,r.kt)("a",{parentName:"li",href:"variables.md#local-variables"},"local variables"),", or ",(0,r.kt)("inlineCode",{parentName:"li"},"<>")," for ",(0,r.kt)("a",{parentName:"li",href:"variables.md#interprocess-variables"},"interprocess variables"),"."),(0,r.kt)("li",{parentName:"ul"},"A digit as first character is allowed but not recommended, and is not supported by the ",(0,r.kt)("a",{parentName:"li",href:"variables.md#using-the-var-keyword"},(0,r.kt)("inlineCode",{parentName:"a"},"var")," declaration syntax"),"."),(0,r.kt)("li",{parentName:"ul"},'Thereafter, the name can include any letter or digit, and the underscore character ("_").'),(0,r.kt)("li",{parentName:"ul"},"Space character is allowed but not recommended, and is not supported by the ",(0,r.kt)("a",{parentName:"li",href:"variables.md#using-the-var-keyword"},(0,r.kt)("inlineCode",{parentName:"a"},"var")," declaration syntax"),"."),(0,r.kt)("li",{parentName:"ul"},"Do not use reserved names, i.e. 4D command names (",(0,r.kt)("inlineCode",{parentName:"li"},"Date"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Time"),", etc), keywords (",(0,r.kt)("inlineCode",{parentName:"li"},"If"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"For"),", etc.), or constant names (",(0,r.kt)("inlineCode",{parentName:"li"},"Euro"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Black"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Friday"),", etc.)."),(0,r.kt)("li",{parentName:"ul"},"Variable names are case insensitive.")),(0,r.kt)("p",null,"Examples:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-4d"},'For($vlRecord;1;100) //local variable\n$vsMyString:="Hello there" //local variable\nvar $vName; $vJob : Text //local variales \nIf(bValidate=1) //process variable\n<>vlProcessID:=Current process() //interprocess variable\n')),(0,r.kt)("h2",{id:"other-names"},"Other names"),(0,r.kt)("p",null,"In the 4D language, several elements have their names handled as strings: ",(0,r.kt)("strong",{parentName:"p"},"forms"),", ",(0,r.kt)("strong",{parentName:"p"},"form objects"),", ",(0,r.kt)("strong",{parentName:"p"},"named selections"),", ",(0,r.kt)("strong",{parentName:"p"},"processes"),", ",(0,r.kt)("strong",{parentName:"p"},"sets"),", ",(0,r.kt)("strong",{parentName:"p"},"menu bars"),", etc."),(0,r.kt)("p",null,"Such string names can contain up to 255 characters, not including the ",(0,r.kt)("inlineCode",{parentName:"p"},"$")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"<>")," characters (if any)."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"String names can contain any characters."),(0,r.kt)("li",{parentName:"ul"},"String names are case insensitive.")),(0,r.kt)("p",null,"Examples:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-4d"},'DIALOG([Storage];"Note box"+String($vlStage))\nOBJECT SET FONT(*;"Binfo";"Times")\nUSE NAMED SELECTION([Customers];"Closed")//Process Named Selection\nUSE NAMED SELECTION([Customers];"<>ByZipcode") //Interprocess Named Selection\n //Starting the global process "Add Customers"\n$vlProcessID:=New process("P_ADD_CUSTOMERS";48*1024;"Add Customers")\n //Starting the local process "$Follow Mouse Moves"\n$vlProcessID:=New process("P_MOUSE_SNIFFER";16*1024;"$Follow Mouse Moves")\nCREATE SET([Customers];"Customer Orders")//Process set\nUSE SET("<>Deleted Records") //Interprocess set\nIf(Records in set("$Selection"+String($i))>0) //Client set\n\n')))}m.isMDXComponent=!0}}]);
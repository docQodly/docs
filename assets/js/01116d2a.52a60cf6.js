"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([[5252],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),u=s(n),g=r,d=u["".concat(p,".").concat(g)]||u[g]||c[g]||o;return n?a.createElement(d,l(l({ref:t},m),{},{components:n})):a.createElement(d,l({ref:t},m))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=g;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[u]="string"==typeof e?e:r,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},38832:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const o={id:"matchRegex",title:"matchRegex"},l=void 0,i={unversionedId:"language/commands/matchRegex",id:"language/commands/matchRegex",title:"matchRegex",description:"matchRegex ( pattern string ) string , aString integer {, \\} ) string , aString integer , posfound* integer {, \\} ) : boolean",source:"@site/docs/language/commands/matchRegex.md",sourceDirName:"language/commands",slug:"/language/commands/matchRegex",permalink:"/docs/language/commands/matchRegex",draft:!1,editUrl:"https://github.com/docQodly/docs/edit/main/docs/language/commands/matchRegex.md",tags:[],version:"current",frontMatter:{id:"matchRegex",title:"matchRegex"},sidebar:"Develop",previous:{title:"mailConvertToMIME",permalink:"/docs/language/commands/mailConvertToMIME"},next:{title:"methodCalledOnError",permalink:"/docs/language/commands/methodCalledOnError"}},p={},s=[{value:"Description",id:"description",level:4},{value:"Example 1",id:"example-1",level:4},{value:"Example 2",id:"example-2",level:4},{value:"Error management",id:"error-management",level:4}],m={toc:s};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"matchRegex")," ( ",(0,r.kt)("em",{parentName:"p"},"pattern")," : string , ",(0,r.kt)("em",{parentName:"p"},"aString")," : string ) : boolean ",(0,r.kt)("br",null),(0,r.kt)("strong",{parentName:"p"},"matchRegex")," ( ",(0,r.kt)("em",{parentName:"p"},"pattern")," : string , ",(0,r.kt)("em",{parentName:"p"},"aString")," : string , ",(0,r.kt)("em",{parentName:"p"},"start")," : integer {, ","*","} ) : boolean ",(0,r.kt)("br",null),(0,r.kt)("strong",{parentName:"p"},"matchRegex")," ( ",(0,r.kt)("em",{parentName:"p"},"pattern")," : string , ",(0,r.kt)("em",{parentName:"p"},"aString")," : string , ",(0,r.kt)("em",{parentName:"p"},"start")," : integer , ",(0,r.kt)("em",{parentName:"p"},"pos_found")," : integer , ",(0,r.kt)("em",{parentName:"p"},"length_found")," : integer {, ","*","} ) : boolean"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"pattern"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Regular expression (complete equality when using two parameters only)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"aString"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"String in which search will be done")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"start"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Position in aString where search will start")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"pos_found"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"Position of occurrence")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"length_found"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"Length of occurrence")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"*"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"If passed: only searches at position indicated")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Result"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"True = search has found an occurrence; Otherwise, False")))),(0,r.kt)("h4",{id:"description"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"matchRegex")," command searches for the regular expression ",(0,r.kt)("em",{parentName:"p"},"pattern")," in ",(0,r.kt)("em",{parentName:"p"},"aString"),'. It checks the conformity of a character string with respect to a set of synthesized rules by means of a meta-language called "regular expression" or "rational expression". The ',(0,r.kt)("em",{parentName:"p"},"regex")," abbreviation is commonly used to indicate these types of notations."),(0,r.kt)("p",null,"Pass the regular expression to search for in ",(0,r.kt)("em",{parentName:"p"},"pattern"),". This consists of a set of characters used for describing a character string, using special characters."),(0,r.kt)("p",null,"Pass the string where you want to search for the regular expression in ",(0,r.kt)("em",{parentName:"p"},"aString"),"."),(0,r.kt)("p",null,"In ",(0,r.kt)("em",{parentName:"p"},"start"),", pass the position at which to start the search in ",(0,r.kt)("em",{parentName:"p"},"aString"),"."),(0,r.kt)("p",null,"In ",(0,r.kt)("em",{parentName:"p"},"pos_found")," and ",(0,r.kt)("em",{parentName:"p"},"length_found")," variables, the command returns the position and length of the first occurrence found."),(0,r.kt)("p",null,"The optional ",(0,r.kt)("inlineCode",{parentName:"p"},"*")," parameter indicates, when it is passed, that the search must be carried out at the position specified by ",(0,r.kt)("em",{parentName:"p"},"start")," without searching any further in the case of failure."),(0,r.kt)("p",null,"The command returns ",(0,r.kt)("strong",{parentName:"p"},"true")," if the search has found an occurrence."),(0,r.kt)("p",null,"For more information about regex, refer to the dedicated ",(0,r.kt)("a",{parentName:"p",href:"http://en.wikipedia.org/wiki/Regular_expression"},"Wikipedia page"),"."),(0,r.kt)("p",null,"For more information about the syntax of the regular expression passed in the ",(0,r.kt)("em",{parentName:"p"},"pattern")," parameter, refer to ",(0,r.kt)("a",{parentName:"p",href:"https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expressions"},"this page"),"."),(0,r.kt)("h4",{id:"example-1"},"Example 1"),(0,r.kt)("p",null,"Search in text by position. You want to find all tags in a text:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"},' declare (myText : string) -> result : collection\n var start : integer\n var vfound : boolean\n start = 1\n result = newCollection\n repeat\n    vfound = matchRegex("<.*>",myText,start,pos_found,length_found)\n    if(vfound)\n       result.push(substring(myText,pos_found,length_found))\n       start = pos_found+length_found\n    end\n until(not(vfound))\n\n')),(0,r.kt)("h4",{id:"example-2"},"Example 2"),(0,r.kt)("p",null,"Search limiting the comparison of the pattern to the position indicated:\nAdd a star to the end of one of the two previous syntaxes."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"},' var pos_found, length_found : integer\n var vfound : string\n\n vfound = matchRegex("a.b","---a-b---",1,pos_found,length_found)\n  // returns true\n vfound = matchRegex("a.b","---a-b---",1,pos_found,length_found,*)\n  // returns false\n vfound = matchRegex("a.b","---a-b---",4,pos_found,length_found,*)\n  // returns true\n\n')),(0,r.kt)("h4",{id:"error-management"},"Error management"),(0,r.kt)("p",null,"In the event of an error, the command generates an error that you can intercept via a method installed by the ",(0,r.kt)("inlineCode",{parentName:"p"},"onErrCall")," command."))}u.isMDXComponent=!0}}]);
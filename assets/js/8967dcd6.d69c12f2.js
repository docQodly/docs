"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([[6008],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>h});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),s=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=s(e.components);return r.createElement(i.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),c=s(n),u=a,h=c["".concat(i,".").concat(u)]||c[u]||d[u]||o;return n?r.createElement(h,l(l({ref:t},m),{},{components:n})):r.createElement(h,l({ref:t},m))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=u;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p[c]="string"==typeof e?e:a,l[1]=p;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},98230:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const o={id:"testSemaphore",title:"testSemaphore"},l=void 0,p={unversionedId:"language/commands/testSemaphore",id:"language/commands/testSemaphore",title:"testSemaphore",description:"testSemaphore ( semaphore boolean",source:"@site/docs/language/commands/testSemaphore.md",sourceDirName:"language/commands",slug:"/language/commands/testSemaphore",permalink:"/docs/language/commands/testSemaphore",draft:!1,editUrl:"https://github.com/docQodly/docs/edit/main/docs/language/commands/testSemaphore.md",tags:[],version:"current",frontMatter:{id:"testSemaphore",title:"testSemaphore"},sidebar:"Develop",previous:{title:"tan",permalink:"/docs/language/commands/tan"},next:{title:"throw",permalink:"/docs/language/commands/throw"}},i={},s=[{value:"Description",id:"description",level:4},{value:"See also",id:"see-also",level:4}],m={toc:s};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"testSemaphore")," ( ",(0,a.kt)("em",{parentName:"p"},"semaphore")," : string ) : boolean"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:"center"}),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"semaphore"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:"center"},"->"),(0,a.kt)("td",{parentName:"tr",align:null},"Semaphore to test")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Result"),(0,a.kt)("td",{parentName:"tr",align:null},"boolean"),(0,a.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,a.kt)("td",{parentName:"tr",align:null},"false: semaphore does not exist, true: semaphore exists")))),(0,a.kt)("h4",{id:"description"},"Description"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"testSemaphore")," command tests for the existence of ",(0,a.kt)("em",{parentName:"p"},"semaphore"),"."),(0,a.kt)("p",null,"The difference between the ",(0,a.kt)("inlineCode",{parentName:"p"},"semaphore")," and the ",(0,a.kt)("inlineCode",{parentName:"p"},"testSemaphore")," functions is that ",(0,a.kt)("inlineCode",{parentName:"p"},"testSemaphore")," does not create the semaphore if it does not exist. If the semaphore exists, the command returns ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),". Otherwise, it returns ",(0,a.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,a.kt)("h4",{id:"see-also"},"See also"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/language/commands/clearSemaphore"},(0,a.kt)("inlineCode",{parentName:"a"},"clearSemaphore")),(0,a.kt)("br",null),"\n",(0,a.kt)("a",{parentName:"p",href:"/docs/language/commands/semaphore"},(0,a.kt)("inlineCode",{parentName:"a"},"semaphore")),(0,a.kt)("br",null),"\n",(0,a.kt)("a",{parentName:"p",href:"/docs/language/SignalClass"},(0,a.kt)("inlineCode",{parentName:"a"},"Signal")," class")))}c.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([["19913"],{62215:function(e,t,n){n.r(t),n.d(t,{metadata:()=>i,contentTitle:()=>l,default:()=>u,assets:()=>o,toc:()=>c,frontMatter:()=>a});var i=JSON.parse('{"id":"api/$compute","title":"$compute","description":"Functionality","source":"@site/versioned_docs/version-1.1.0/api/$compute.md","sourceDirName":"api","slug":"/api/$compute","permalink":"/docs/api/$compute","draft":false,"unlisted":false,"editUrl":"https://github.com/qodly/docs/issues/new?title=Comment%20on%20api%2F%24compute.md%20(1.1.0)&body=Share%20any%20feedback%20about%20this%20page%20%E2%80%94%20report%20issues%2C%20suggest%20improvements%2C%20or%20tell%20us%20what%E2%80%99s%20helpful.%0A%0AIf%20it%E2%80%99s%20an%20issue%3A%0A-%20What%E2%80%99s%20the%20issue%3F%20(e.g.%2C%20typo%2C%20incorrect%20information%2C%20unclear%20explanation)%0A-%20Where%20is%20it%3F%20(e.g.%2C%20section%20name%2C%20specific%20paragraph%2C%20or%20line)%0A%0AThank%20you%20for%20helping%20us%20improve!%20%F0%9F%9A%80%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20","tags":[],"version":"1.1.0","frontMatter":{"id":"$compute","title":"$compute"},"sidebar":"Integrations","previous":{"title":"$clean","permalink":"/docs/api/$clean"},"next":{"title":"$distinct","permalink":"/docs/api/$distinct"}}'),r=n("85893"),s=n("50065");let a={id:"$compute",title:"$compute"},l=void 0,o={},c=[{value:"Functionality",id:"functionality",level:2},{value:"Definition",id:"definition",level:3},{value:"Keywords",id:"keywords",level:3},{value:"Syntax",id:"syntax",level:3},{value:"Detailed Behavior",id:"detailed-behavior",level:2},{value:"Using <code>$compute=$all</code>",id:"using-computeall",level:3},{value:"Using Specific Keywords",id:"using-specific-keywords",level:3},{value:"Object Attributes",id:"object-attributes",level:3},{value:"Combining with Other Parameters",id:"combining-with-other-parameters",level:2},{value:"Use Cases",id:"use-cases",level:2},{value:"Get All Computations for a Numerical Attribute",id:"get-all-computations-for-a-numerical-attribute",level:3},{value:"Get All Computations for a String Attribute",id:"get-all-computations-for-a-string-attribute",level:3},{value:"Get All Computations for a Date Attribute",id:"get-all-computations-for-a-date-attribute",level:3},{value:"Get Sum of a Numerical Attribute",id:"get-sum-of-a-numerical-attribute",level:3},{value:"Get Count of a Numerical Attribute",id:"get-count-of-a-numerical-attribute",level:3},{value:"Best Practices",id:"best-practices",level:2}];function d(e){let t={admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"functionality",children:"Functionality"}),"\n",(0,r.jsx)(t.h3,{id:"definition",children:"Definition"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"$compute"})," endpoint allows you to perform calculations on attributes within a dataclass. This can be done on simple attributes or on properties of object attributes. The calculations are specified using various keywords."]}),"\n",(0,r.jsx)(t.admonition,{type:"tip",children:(0,r.jsx)(t.p,{children:"This is useful for obtaining statistical information such as sum, average, count, minimum, and maximum values for numerical attributes, and count, minimum, and maximum values for string attributes."})}),"\n",(0,r.jsx)(t.h3,{id:"keywords",children:"Keywords"}),"\n",(0,r.jsxs)(t.p,{children:["The following keywords can be used with ",(0,r.jsx)(t.code,{children:"$compute"})," to perform different calculations:"]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Keyword"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"$all"}),(0,r.jsx)(t.td,{children:"A JSON object that defines all the functions for the attribute (average, count, min, max, and sum for numerical attributes, and count, min, and max for string attributes)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"average"}),(0,r.jsx)(t.td,{children:"Get the average of a numerical attribute"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"count"}),(0,r.jsx)(t.td,{children:"Get the total number of entries in the collection or dataclass (must specify an attribute)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"min"}),(0,r.jsx)(t.td,{children:"Get the minimum value of a numerical attribute or the lowest value of a string attribute"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"max"}),(0,r.jsx)(t.td,{children:"Get the maximum value of a numerical attribute or the highest value of a string attribute"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"sum"}),(0,r.jsx)(t.td,{children:"Get the sum of a numerical attribute"})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"syntax",children:"Syntax"}),"\n",(0,r.jsx)(t.p,{children:"To perform a calculation on an attribute, you use the following format:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"GET /rest/{{dataClass}}/{{attribute}}?$compute={{keyword}}\n"})}),"\n",(0,r.jsx)(t.p,{children:"If you want to perform a calculation on an object attribute, specify one of its properties:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"GET /rest/{{dataClass}}/{{objectAttribute}}.{{property}}?$compute={{keyword}}\n"})}),"\n",(0,r.jsx)(t.h2,{id:"detailed-behavior",children:"Detailed Behavior"}),"\n",(0,r.jsxs)(t.h3,{id:"using-computeall",children:["Using ",(0,r.jsx)(t.code,{children:"$compute=$all"})]}),"\n",(0,r.jsxs)(t.p,{children:["When using ",(0,r.jsx)(t.code,{children:"$compute=$all"}),", the response includes all possible calculations for the attribute:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"For numerical attributes: count, sum, average, min, max"}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"For string attributes: count, min, max"}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"For date attributes:"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"using-specific-keywords",children:"Using Specific Keywords"}),"\n",(0,r.jsxs)(t.p,{children:["You can specify a particular calculation by replacing ",(0,r.jsx)(t.code,{children:"$all"})," with one of the specific keywords (",(0,r.jsx)(t.code,{children:"average"}),", ",(0,r.jsx)(t.code,{children:"count"}),", ",(0,r.jsx)(t.code,{children:"min"}),", ",(0,r.jsx)(t.code,{children:"max"}),", ",(0,r.jsx)(t.code,{children:"sum"}),"). The response will then include only the result of the specified calculation."]}),"\n",(0,r.jsx)(t.h3,{id:"object-attributes",children:"Object Attributes"}),"\n",(0,r.jsx)(t.p,{children:"If you need to perform calculations on a property of an object attribute, you must specify the property in the request URL. The calculation will be performed on the specified property."}),"\n",(0,r.jsx)(t.h2,{id:"combining-with-other-parameters",children:"Combining with Other Parameters"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"$compute"})," parameter can be combined with other parameters:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"$filter"}),": Narrow down the data set before computing values."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"$orderby"}),": Sort the data before computing values."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"$top/$limit"})," and ",(0,r.jsx)(t.strong,{children:"$skip"}),": Limit the number of records and skip a certain number of records."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"$expand"}),": Include related data in the computation."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"$attributes"}),": Specify which attributes to include in the response with computed values."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"$method=entityset"}),": Create an entity set based on computed results and save it in the server's cache."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,r.jsx)(t.h3,{id:"get-all-computations-for-a-numerical-attribute",children:"Get All Computations for a Numerical Attribute"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Request:"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"GET /rest/Payments?$attributes=Amount&$compute=$all\n"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Response:"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'{\n    "Amount": {\n        "count": 20,\n        "sum": 12,\n        "average": 0.6,\n        "min": -128,\n        "max": 124\n    }\n}\n'})}),"\n",(0,r.jsx)(t.h3,{id:"get-all-computations-for-a-string-attribute",children:"Get All Computations for a String Attribute"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Request:"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"GET /rest/Users?$attributes=Name&$compute=$all\n"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Response:"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'{\n    "Name": {\n        "count": 11,\n        "min": "Harry",\n        "max": "user8"\n    }\n}\n'})}),"\n",(0,r.jsx)(t.h3,{id:"get-all-computations-for-a-date-attribute",children:"Get All Computations for a Date Attribute"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Request:"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"GET /rest/Payments?$attributes=PaymentDate&$compute=$all\n"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Response:"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'{\n    "PaymentDate": {\n        "count": 20,\n        "min": "2024-01-01T00:00:00.000Z",\n        "max": "2024-01-29T00:00:00.000Z"\n    }\n}\n'})}),"\n",(0,r.jsx)(t.h3,{id:"get-sum-of-a-numerical-attribute",children:"Get Sum of a Numerical Attribute"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Request:"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"GET /rest/Payments?$attributes=Amount&$compute=sum\n"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Response:"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:"12\n"})}),"\n",(0,r.jsx)(t.h3,{id:"get-count-of-a-numerical-attribute",children:"Get Count of a Numerical Attribute"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Request:"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"GET /rest/Payments?$attributes=Amount&$compute=count\n"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Response:"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:"20\n"})}),"\n",(0,r.jsx)(t.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Specify Only Necessary Calculations:"})," Limit the calculations to those necessary for your application to optimize performance and reduce payload size."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Combine with Other Query Parameters:"})," Use other query parameters (",(0,r.jsx)(t.code,{children:"$filter"}),", ",(0,r.jsx)(t.code,{children:"$orderby"}),") to refine your data retrieval and calculations."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Handle Errors Gracefully:"})," Implement proper error handling to manage cases where the calculations cannot be performed or data cannot be retrieved."]}),"\n"]}),"\n"]})]})}function u(e={}){let{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},50065:function(e,t,n){n.d(t,{Z:function(){return l},a:function(){return a}});var i=n(67294);let r={},s=i.createContext(r);function a(e){let t=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);
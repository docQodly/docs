"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([["49517"],{32823:function(e,n,t){t.r(n),t.d(n,{metadata:()=>s,contentTitle:()=>o,default:()=>a,assets:()=>d,toc:()=>l,frontMatter:()=>c});var s=JSON.parse('{"id":"language/TCPConnectionClass","title":"TCPConnection","description":"The TCPConnection class allows you to manage Transmission Control Protocol (TCP) client connections to a server, enabling you to send and receive data, and handle connection lifecycle events using callbacks.","source":"@site/versioned_docs/version-1.1.0/language/TCPConnectionClass.md","sourceDirName":"language","slug":"/language/TCPConnectionClass","permalink":"/docs/language/TCPConnectionClass","draft":false,"unlisted":false,"editUrl":"https://github.com/qodly/docs/issues/new?title=Comment%20on%20language%2FTCPConnectionClass.md%20(1.1.0)&body=Share%20any%20feedback%20about%20this%20page%20%E2%80%94%20report%20issues%2C%20suggest%20improvements%2C%20or%20tell%20us%20what%E2%80%99s%20helpful.%0A%0AIf%20it%E2%80%99s%20an%20issue%3A%0A-%20What%E2%80%99s%20the%20issue%3F%20(e.g.%2C%20typo%2C%20incorrect%20information%2C%20unclear%20explanation)%0A-%20Where%20is%20it%3F%20(e.g.%2C%20section%20name%2C%20specific%20paragraph%2C%20or%20line)%0A%0AThank%20you%20for%20helping%20us%20improve!%20%F0%9F%9A%80%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20","tags":[],"version":"1.1.0","frontMatter":{"id":"TCPConnectionClass","title":"TCPConnection"},"sidebar":"Develop","previous":{"title":"SystemWorker","permalink":"/docs/language/SystemWorkerClass"},"next":{"title":"TCPEvent","permalink":"/docs/language/TCPEventClass"}}'),i=t("85893"),r=t("50065");let c={id:"TCPConnectionClass",title:"TCPConnection"},o=void 0,d={},l=[{value:"Example",id:"example",level:3},{value:"Usage example",id:"usage-example",level:4},{value:"TCPConnection Object",id:"tcpconnection-object",level:3},{value:"4D.TCPConnection.new()",id:"4dtcpconnectionnew",level:2},{value:"Description",id:"description",level:4},{value:"<code>options</code> parameter",id:"options-parameter",level:4},{value:"Callback functions",id:"callback-functions",level:4},{value:"TCPEvent object",id:"tcpevent-object",level:4},{value:".closed",id:"closed",level:2},{value:"Description",id:"description-1",level:4},{value:".errors",id:"errors",level:2},{value:"Description",id:"description-2",level:4},{value:".noDelay",id:"nodelay",level:2},{value:"Description",id:"description-3",level:4},{value:".send()",id:"send",level:2},{value:"Description",id:"description-4",level:4},{value:".shutdown()",id:"shutdown",level:2},{value:"Description",id:"description-5",level:4},{value:".wait()",id:"wait",level:2},{value:"Description",id:"description-6",level:4}];function h(e){let n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"TCPConnection"})," class allows you to manage Transmission Control Protocol (TCP) client connections to a server, enabling you to send and receive data, and handle connection lifecycle events using callbacks."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"TCPConnection"})," class is available from the ",(0,i.jsx)(n.code,{children:"4D"})," class store. You can create a TCP connection using the ",(0,i.jsx)(n.a,{href:"#4dtcpconnectionnew",children:"4D.TCPConnection.new()"})," function, which returns a ",(0,i.jsx)(n.a,{href:"#tcpconnection-object",children:"TCPConnection object"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Thanks to the standard Qodly server object ",(0,i.jsx)(n.em,{children:"refcounting"}),", a TCPConnection is automatically released when it is no longer referenced. Consequently, the associated resources are properly cleaned up without requiring explicit closure."]}),"\n",(0,i.jsxs)(n.p,{children:['TCPConnection objects are released when no more references to them exist in memory. This typically occurs, for example, at the end of a function execution. If you want to "force" the closure of a connection at any moment, ',(0,i.jsxs)(n.a,{href:"/docs/language/basics/lang-object#resources",children:[(0,i.jsx)(n.strong,{children:"nullify"})," its references by setting them to ",(0,i.jsx)(n.strong,{children:"Null"})]}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.p,{children:"This example defines a class that handles the connection lifecycle and events, showcasing how to work asynchronously:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-qs",children:'// Class definition: cs.MyAsyncTCPConnection\n\nconstructor(url : string, port : integer)\n    this.connection = null\n    this.url = url\n    this.port = port\n\n// Connect to one of the servers launched inside workers\nfunction connect()\n    this.connection := 4D.TCPConnection.new(this.url, this.port, this)\n\n// Disconnect from the server\nfunction disconnect()\n    this.connection.shutdown()\n    this.connection = null\n\n// Send data to the server\nfunction getInfo()\n    var blob : blob\n    blob = convertFromString("Information", "UTF-8")\n    this.connection.send(blob)\n\n// Callback called when the connection is successfully established\nfunction onConnection(connection : 4D.TCPConnection , event : 4D.TCPEvent)\n    var info : string = "Connection established"\n\n// Callback called when the connection is properly closed\nfunction onShutdown(connection : 4D.TCPConnection, event : 4D.TCPEvent)\n    var info : string = "Connection closed"\n\n// Callback called when receiving data from the server\nfunction onData(connection : 4D.TCPConnection, event : 4D.TCPEvent)\n    var info : string = convertToString(event.data, "UTF-8")\n\n	//Warning: There\'s no guarantee you\'ll receive all the data you need in a single network packet.\n	\n// Callback called when the connection is closed unexpectedly\nfunction onError(connection : 4D.TCPConnection , event : 4D.TCPEvent)\n    var info : string = "Connection error"\n\n// Callback called after onShutdown/onError just before the TCPConnection object is released\nfunction onTerminate(connection : 4D.TCPConnection , event : 4D.TCPEvent)\n    var info : string = "Connection terminated"\n\n'})}),"\n",(0,i.jsx)(n.h4,{id:"usage-example",children:"Usage example"}),"\n",(0,i.jsx)(n.p,{children:"Create a method named AsyncTCP, to initialize and manage the TCP connection:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-qs",children:'var myObject : cs.MyAsyncTCPConnection\nmyObject = cs.MyAsyncTCPConnection.new("myURL", 10000)\nmyObject.connect()\nmyObject.getInfo()\nmyObject.disconnect()\n\n'})}),"\n",(0,i.jsx)(n.p,{children:"Call the AsyncTCP method in a worker:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-qs",children:'callWorker("new process", "Async_TCP")\n\n'})}),"\n",(0,i.jsx)(n.h3,{id:"tcpconnection-object",children:"TCPConnection Object"}),"\n",(0,i.jsx)(n.p,{children:"A TCPConnection object is a non-sharable object."}),"\n",(0,i.jsx)(n.p,{children:"TCPConnection objects provide the following properties and functions:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsx)(n.tr,{children:(0,i.jsx)(n.th,{})})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsx)(n.tr,{children:(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.a,{href:"#closed"}),(0,i.jsx)("br",{})]})}),(0,i.jsx)(n.tr,{children:(0,i.jsxs)(n.td,{children:[(0,i.jsxs)(n.a,{href:"#errors",children:[(0,i.jsx)(n.strong,{children:"errors"})," : collection"]}),(0,i.jsx)("br",{}),"a collection of error objects associated with the connection"]})}),(0,i.jsx)(n.tr,{children:(0,i.jsxs)(n.td,{children:[(0,i.jsxs)(n.a,{href:"#noDelay",children:[(0,i.jsx)(n.strong,{children:"noDelay"})," : boolean"]}),(0,i.jsx)("br",{}),"whether Nagle's algorithm is disabled (",(0,i.jsx)(n.code,{children:"true"}),") or enabled (",(0,i.jsx)(n.code,{children:"false"}),")"]})}),(0,i.jsx)(n.tr,{children:(0,i.jsxs)(n.td,{children:[(0,i.jsxs)(n.a,{href:"#send",children:[(0,i.jsx)(n.strong,{children:".send"}),"( ",(0,i.jsx)(n.em,{children:"data"})," : blob )"]}),(0,i.jsx)("br",{}),"sends data to the server"]})}),(0,i.jsx)(n.tr,{children:(0,i.jsxs)(n.td,{children:[(0,i.jsxs)(n.a,{href:"#shutdown",children:[(0,i.jsx)(n.strong,{children:".shutdown"}),"()"]}),(0,i.jsx)("br",{}),"closes the ",(0,i.jsx)(n.em,{children:"write"})," channel of the connection (client to server stream)"]})}),(0,i.jsx)(n.tr,{children:(0,i.jsxs)(n.td,{children:[(0,i.jsxs)(n.a,{href:"#wait",children:[(0,i.jsx)(n.strong,{children:".wait"}),"()",(0,i.jsx)("br",{}),(0,i.jsx)(n.strong,{children:".wait"}),"( ",(0,i.jsx)(n.em,{children:"timeout"})," : Real )"]}),(0,i.jsx)("br",{}),"waits until  the TCP connection is closed or the specified ",(0,i.jsx)(n.code,{children:"timeout"})," is reached"]})})]})]}),"\n",(0,i.jsx)(n.h2,{id:"4dtcpconnectionnew",children:"4D.TCPConnection.new()"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"4D.TCPConnection.new"}),"( ",(0,i.jsx)(n.em,{children:"serverAddress"})," : string , ",(0,i.jsx)(n.em,{children:"serverPort"})," : integer , ",(0,i.jsx)(n.em,{children:"options"})," : object  ) : 4D.TCPConnection"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"serverAddress"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"\u2192"}),(0,i.jsx)(n.td,{children:"Domain name or IP address of the server"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"serverPort"}),(0,i.jsx)(n.td,{children:"integer"}),(0,i.jsx)(n.td,{children:"\u2192"}),(0,i.jsx)(n.td,{children:"Port number of the server"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"options"}),(0,i.jsx)(n.td,{children:"object"}),(0,i.jsx)(n.td,{children:"\u2192"}),(0,i.jsxs)(n.td,{children:["Configuration ",(0,i.jsx)(n.a,{href:"#options-parameter",children:"options"})," for the connection"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Result"}),(0,i.jsx)(n.td,{children:"TCPConnection"}),(0,i.jsx)(n.td,{children:"\u2190"}),(0,i.jsx)(n.td,{children:"New TCPConnection object"})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"4D.TCPConnection.new()"})," function creates a new TCP connection to the specified ",(0,i.jsx)(n.em,{children:"serverAddress"})," and ",(0,i.jsx)(n.em,{children:"serverPort"}),", using the defined ",(0,i.jsx)(n.em,{children:"options"}),", and returns a ",(0,i.jsx)(n.code,{children:"4D.HTTPRequest"})," object."]}),"\n",(0,i.jsxs)(n.h4,{id:"options-parameter",children:[(0,i.jsx)(n.code,{children:"options"})," parameter"]}),"\n",(0,i.jsxs)(n.p,{children:["In the ",(0,i.jsx)(n.em,{children:"options"})," parameter, pass an object that can contain the following properties:"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Property"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Default"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"onConnection"}),(0,i.jsx)(n.td,{children:"formula"}),(0,i.jsx)(n.td,{children:"Callback triggered when the connection is established."}),(0,i.jsx)(n.td,{children:"undefined"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"onData"}),(0,i.jsx)(n.td,{children:"formula"}),(0,i.jsx)(n.td,{children:"Callback triggered when data is received"}),(0,i.jsx)(n.td,{children:"undefined"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"onShutdown"}),(0,i.jsx)(n.td,{children:"formula"}),(0,i.jsx)(n.td,{children:"Callback triggered when the connection is properly closed"}),(0,i.jsx)(n.td,{children:"undefined"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"onError"}),(0,i.jsx)(n.td,{children:"formula"}),(0,i.jsx)(n.td,{children:"Callback triggered in case of an error"}),(0,i.jsx)(n.td,{children:"undefined"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"onTerminate"}),(0,i.jsx)(n.td,{children:"formula"}),(0,i.jsx)(n.td,{children:"Callback triggered just before the TCPConnection is released"}),(0,i.jsx)(n.td,{children:"undefined"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"noDelay"}),(0,i.jsx)(n.td,{children:"Boolean"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"Read-only"})," Disables Nagle's algorithm if ",(0,i.jsx)(n.code,{children:"true"})]}),(0,i.jsx)(n.td,{children:"False"})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"callback-functions",children:"Callback functions"}),"\n",(0,i.jsx)(n.p,{children:"All callback functions receive two parameters:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"connection"}),(0,i.jsx)(n.td,{children:(0,i.jsxs)(n.a,{href:"#tcpconnection-object",children:[(0,i.jsx)(n.code,{children:"TCPConnection"})," object"]})}),(0,i.jsx)(n.td,{children:"The current TCP connection instance."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"event"}),(0,i.jsx)(n.td,{children:(0,i.jsxs)(n.a,{href:"#tcpevent-object",children:[(0,i.jsx)(n.code,{children:"TCPEvent"})," object"]})}),(0,i.jsx)(n.td,{children:"Contains information about the event."})]})]})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Sequence of Callback Calls:"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"onConnection"})," is triggered when the connection is established."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"onData"})," is triggered each time data is received."]}),"\n",(0,i.jsxs)(n.li,{children:["Either ",(0,i.jsx)(n.code,{children:"onShutdown"})," or ",(0,i.jsx)(n.code,{children:"onError"})," is triggered:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"onShutdown"})," is triggered when the connection is properly closed."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"onError"})," is triggered if an error occurs."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"onTerminate"})," is always triggered just before the TCPConnection is released (connection is closed or an error occured)."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"tcpevent-object",children:"TCPEvent object"}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.a,{href:"/docs/language/TCPEventClass",children:(0,i.jsx)(n.code,{children:"TCPEvent"})})," object is returned when a ",(0,i.jsx)(n.a,{href:"#callback-functions",children:"callback function"})," is called."]}),"\n",(0,i.jsx)(n.h2,{id:"closed",children:".closed"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"closed"})," : boolean"]}),"\n",(0,i.jsx)(n.h4,{id:"description-1",children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:".closed"})," property contains whether the connection is closed. Returns ",(0,i.jsx)(n.code,{children:"true"})," if the connection is closed, either due to an error, a call to ",(0,i.jsx)(n.code,{children:"shutdown()"}),", or closure by the server."]}),"\n",(0,i.jsx)(n.h2,{id:"errors",children:".errors"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"errors"})," : collection"]}),"\n",(0,i.jsx)(n.h4,{id:"description-2",children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:".errors"})," property contains a collection of error objects associated with the connection. Each error object includes the error code, a description, and the signature of the component that caused the error."]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Property"}),(0,i.jsx)(n.th,{}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"errors"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"collection"}),(0,i.jsx)(n.td,{children:"4D error stack in case of error"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"[].errCode"}),(0,i.jsx)(n.td,{children:"integer"}),(0,i.jsx)(n.td,{children:"4D error code"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"[].message"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"Description of the 4D error"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"[].componentSignature"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"Signature of the internal component which returned the error"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"nodelay",children:".noDelay"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"noDelay"})," : boolean"]}),"\n",(0,i.jsx)(n.h4,{id:"description-3",children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:".noDelay"})," property contains whether Nagle's algorithm is disabled (",(0,i.jsx)(n.code,{children:"true"}),") or enabled (",(0,i.jsx)(n.code,{children:"false"}),"). This property is ",(0,i.jsx)(n.strong,{children:"read-only"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"send",children:".send()"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:".send"}),"( ",(0,i.jsx)(n.em,{children:"data"})," : blob )"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"data"}),(0,i.jsx)(n.td,{children:"blob"}),(0,i.jsx)(n.td,{children:"\u2192"}),(0,i.jsx)(n.td,{children:"Data to be sent"})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"description-4",children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"send()"})," function sends data to the server. If the connection is not established yet, the data is sent once the connection is established."]}),"\n",(0,i.jsx)(n.h2,{id:"shutdown",children:".shutdown()"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:".shutdown"}),"()"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{style:{textAlign:"center"}}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{style:{textAlign:"center"}}),(0,i.jsx)(n.td,{children:"Does not require any parameters"})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"description-5",children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"shutdown()"})," function closes the ",(0,i.jsx)(n.em,{children:"write"})," channel of the connection (client to server stream) while keeping the ",(0,i.jsx)(n.em,{children:"read"})," channel (server to client stream) open, allowing you to continue receiving data until the connection is fully closed by the server or an error occurs."]}),"\n",(0,i.jsx)(n.h2,{id:"wait",children:".wait()"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:".wait"}),"()",(0,i.jsx)("br",{}),(0,i.jsx)(n.strong,{children:".wait"}),"( ",(0,i.jsx)(n.em,{children:"timeout"})," : Real )"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{style:{textAlign:"center"}}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"timeout"}),(0,i.jsx)(n.td,{children:"Real"}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"\u2192"}),(0,i.jsx)(n.td,{children:"Maximum wait time in seconds"})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"description-6",children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"wait()"})," function waits until  the TCP connection is closed or the specified ",(0,i.jsx)(n.code,{children:"timeout"})," is reached"]}),"\n",(0,i.jsxs)(n.admonition,{type:"note",children:[(0,i.jsx)(n.mdxAdmonitionTitle,{}),(0,i.jsxs)(n.p,{children:["During the ",(0,i.jsx)(n.code,{children:".wait()"})," execution, callback functions are executed, whether they originate from other instances of the same class, or instances of any classes supporting the same callback mechanism (",(0,i.jsx)(n.code,{children:"HTTPRequest"}),", ",(0,i.jsx)(n.code,{children:"TCPConnection"}),", ",(0,i.jsx)(n.code,{children:"SystemWorker"}),"). You can exit from a ",(0,i.jsx)(n.code,{children:".wait()"})," by calling ",(0,i.jsx)(n.a,{href:"#shutdown",children:(0,i.jsx)(n.code,{children:"shutdown()"})})," or ",(0,i.jsx)(n.code,{children:"terminate()"})," (depending on the API) from a callback."]})]})]})}function a(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},50065:function(e,n,t){t.d(n,{Z:function(){return o},a:function(){return c}});var s=t(67294);let i={},r=s.createContext(i);function c(e){let n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);
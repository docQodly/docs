"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([[2893],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(n),u=o,h=p["".concat(s,".").concat(u)]||p[u]||m[u]||i;return n?a.createElement(h,r(r({ref:t},d),{},{components:n})):a.createElement(h,r({ref:t},d))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:o,r[1]=l;for(var c=2;c<i;c++)r[c]=n[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},52203:(e,t,n)=>{n.d(t,{ZP:()=>i});var a=n(67294),o=n(86010);const i={List:function(e){let{children:t,align:n="start",justifyContent:i="start"}=e;return a.createElement("div",{className:(0,o.Z)("flex flex-col lg:flex-row flex-wrap",{"items-start":"start"===n,"items-center":"center"===n,"items-end":"end"===n},{"justify-start":"start"===i,"justify-center":"center"===i,"justify-end":"end"===i,"justify-between":"between"===i,"justify-around":"around"===i,"justify-evenly":"evenly"===i})},t)},Item:function(e){let{children:t,width:n}=e;const i=(e=>{const t="undefined"!=typeof window&&window.matchMedia(e),[n,o]=(0,a.useState)(t.matches);return(0,a.useEffect)((()=>(t.onchange=e=>o(e.matches),()=>t.onchange=null))),n})("(max-width: 1024px)");return a.createElement("div",{className:(0,o.Z)({"flex-1":!n}),style:i?{}:{width:n}},t)}}},37485:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var a=n(87462),o=(n(67294),n(3905)),i=n(52203);const r={id:"matrix",title:"Matrix"},l=void 0,s={unversionedId:"studio/pageLoaders/components/matrix",id:"studio/pageLoaders/components/matrix",title:"Matrix",description:"The Matrix component is a UI element designed to display a dynamic array of Stylebox components.",source:"@site/docs/studio/pageLoaders/components/matrix.md",sourceDirName:"studio/pageLoaders/components",slug:"/studio/pageLoaders/components/matrix",permalink:"/docs/studio/pageLoaders/components/matrix",draft:!1,editUrl:"https://github.com/docQodly/docs/edit/main/docs/studio/pageLoaders/components/matrix.md",tags:[],version:"current",frontMatter:{id:"matrix",title:"Matrix"},sidebar:"Develop",previous:{title:"Page Loader",permalink:"/docs/studio/pageLoaders/components/pageLoader"},next:{title:"Data Table",permalink:"/docs/studio/pageLoaders/components/datatable"}},c={},d=[{value:"Use Cases",id:"use-cases",level:2},{value:"Properties Customization",id:"properties-customization",level:2},{value:"Data Integration",id:"data-integration",level:2},{value:"Data Binding",id:"data-binding",level:3},{value:"Data Display",id:"data-display",level:3},{value:"Dynamic Attribute Display",id:"dynamic-attribute-display",level:3},{value:"Server-Side Interaction",id:"server-side-interaction",level:3},{value:"Showcase",id:"showcase",level:2},{value:"Triggers and Events",id:"triggers-and-events",level:2}],p={toc:d};function m(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"Matrix")," component is a UI element designed to display a dynamic array of Stylebox components. "),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Categorized under iterative components, the ",(0,o.kt)("strong",{parentName:"p"},"Matrix")," component is specialized in showcasing dynamic arrays of ",(0,o.kt)("strong",{parentName:"p"},"Stylebox")," components based on the component's designated qodlysource.")),(0,o.kt)("p",null,"Upon being placed on the canvas, the Matrix component includes a single Stylebox component, and this Stylebox is duplicated for each iteration of data."),(0,o.kt)("h2",{id:"use-cases"},"Use Cases"),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"Matrix")," component finds application in various scenarios where data needs to be displayed iteratively and can be customized. Common use cases include:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Product Gallery"),": Create an interactive product gallery where each Stylebox represents a product with its image, name, and price. ")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"News Feed"),": Design a dynamic news feed by using the Matrix component to iterate over news articles. Each Stylebox can display the headline and a brief excerpt.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"User Profile Showcase"),": Build a user profile showcase where the Matrix iterates over user profiles, displaying profile images and usernames."))),(0,o.kt)("h2",{id:"properties-customization"},"Properties Customization"),(0,o.kt)("p",null,"Enhance the ",(0,o.kt)("strong",{parentName:"p"},"Matrix")," component to align with your application's requirements using the following customization options:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Orientation"),": Developers can choose between horizontal and vertical orientations for the Matrix. This choice affects the arrangement of Stylebox components and the presence of scrollbars."),(0,o.kt)(i.ZP.List,{align:"center",justifyContent:"between"},(0,o.kt)(i.ZP.Item,{width:"60%"},(0,o.kt)("ul",null,(0,o.kt)("li",null,(0,o.kt)("strong",null,"Vertical Orientation (Default)"),": By default, the Matrix component is oriented vertically. This means that Stylebox components are stacked from top to bottom. If the content surpasses the defined height, a vertical scrollbar will automatically be shown, facilitating vertical scrolling to access all the content."),(0,o.kt)("li",null,(0,o.kt)("strong",null,"Horizontal Orientation"),": When the Matrix component is configured with a horizontal orientation, Stylebox components are arranged from left to right. If the content exceeds the available width, a horizontal scrollbar will automatically appear, enabling users to scroll through the content horizontally."))),(0,o.kt)(i.ZP.Item,{width:"35%"},(0,o.kt)("img",{src:n(71174).Z,style:{borderRadius:"6px"}}))))),(0,o.kt)("h2",{id:"data-integration"},"Data Integration"),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"Matrix")," component is data-bound, meaning it relies on an external qodlysource to populate its options. This allows the component to display and interact with data."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"The qodlysource for the ",(0,o.kt)("strong",{parentName:"p"},"Matrix")," component can take the form of either an ",(0,o.kt)("inlineCode",{parentName:"p"},"ORDA entity selection")," or an ",(0,o.kt)("inlineCode",{parentName:"p"},"array"),".")),(0,o.kt)("h3",{id:"data-binding"},"Data Binding"),(0,o.kt)("p",null,"To associate data with the ",(0,o.kt)("strong",{parentName:"p"},"Matrix")," component, follow these steps:"),(0,o.kt)(i.ZP.List,{align:"center",justifyContent:"between"},(0,o.kt)(i.ZP.Item,{width:"60%"},(0,o.kt)("ol",null,(0,o.kt)("li",{value:"1"},(0,o.kt)("strong",null,"Navigate to the Properties Panel"),": Access the Data Access category located within the Properties panel for the Matrix component."),(0,o.kt)("br",null),(0,o.kt)("li",{value:"\xe9"},(0,o.kt)("strong",null,"Define the Qodly Source"),": Specify the appropriate qodlysource that contains the data you want to display within the Matrix. For instance, you can select an entity selection from a relevant dataclass, such as ",(0,o.kt)("code",null,"roomSelection"),"."))),(0,o.kt)(i.ZP.Item,{width:"35%"},(0,o.kt)("img",{src:n(85569).Z,style:{borderRadius:"6px"}}))),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Alternatively, you can establish the connection by dragging and dropping the qodlysource onto the Matrix component.")),(0,o.kt)("h3",{id:"data-display"},"Data Display"),(0,o.kt)("p",null,"To display data iterated over a Qodly Source, you can follow these additional steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Access the Matrix"),": Within the Matrix component, locate the embedded Stylebox.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Add a Component"),": Add a Text component or other relevant components within the Stylebox."),(0,o.kt)("img",{src:n(84674).Z,style:{borderRadius:"6px",borderStyle:"solid"}})),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Configure the Component"),": Click on the component you've added to enter its editing mode. The process of configuring components varies based on their type:"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Toggle Qodly Source"),": Prepare to connect the component to the qodlysource in the next step by using the ",(0,o.kt)("inlineCode",{parentName:"p"},"Toggle Qodly Source")," button.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Properties Panel"),": In the next step, you'll configure them through the ",(0,o.kt)("inlineCode",{parentName:"p"},"Data Access")," category in the Properties panel. ")))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Choose the Iterator"),": Choose the iterator corresponding to the iterated data (e.g., ",(0,o.kt)("code",null,"$This"),") to represent the current data item."))),(0,o.kt)("ol",{start:5},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Choose the Attribute"),": Once you've selected the iterator, choose the specific attribute that you want to display within the component. This could include related entity selections. For example, use an embedded Matrix within the same Matrix to present various choices like room options (with/without breakfast)."),(0,o.kt)("img",{src:n(89757).Z,style:{borderRadius:"6px",width:"70%",borderStyle:"solid"}}))),(0,o.kt)("h3",{id:"dynamic-attribute-display"},"Dynamic Attribute Display"),(0,o.kt)(i.ZP.List,{align:"center",justifyContent:"between"},(0,o.kt)(i.ZP.Item,{width:"65%"},"The ",(0,o.kt)("code",null,"Matrix")," component can link its currently selected entity to a qodlysource in the ",(0,o.kt)("code",null,"Selected Element")," field. This feature allows the component to automatically display the attributes of the selected element whenever a new entity is chosen."),(0,o.kt)(i.ZP.Item,{width:"30%"},(0,o.kt)("img",{src:n(21451).Z,style:{borderRadius:"6px"}}))),(0,o.kt)(i.ZP.List,{align:"center",justifyContent:"between"},(0,o.kt)(i.ZP.Item,{width:"60%"},"These attributes can be showcased in other configured components, such as a ",(0,o.kt)("code",null,"Text")," component, to display the corresponding attribute values."),(0,o.kt)(i.ZP.Item,{width:"25%"},(0,o.kt)("img",{src:n(88855).Z,style:{borderRadius:"6px",width:"100%"}}))),(0,o.kt)("h3",{id:"server-side-interaction"},"Server-Side Interaction"),(0,o.kt)("p",null,"You can associate functions with embedded components in the ",(0,o.kt)("strong",{parentName:"p"},"Matrix")," component using ",(0,o.kt)("inlineCode",{parentName:"p"},"$This"),". This capability enables the execution of functions from the entity class of the qodlysource that is providing data and being iterated upon in response to event triggers, such as button clicks."),(0,o.kt)("p",null,"To implement this functionality, follow these steps:"),(0,o.kt)(i.ZP.List,{align:"center",justifyContent:"between"},(0,o.kt)(i.ZP.Item,{width:"40%"},(0,o.kt)("ol",{start:"1"},(0,o.kt)("li",null,"Integrate the Matrix component into the interface.")," ",(0,o.kt)("br",null),(0,o.kt)("br",null),(0,o.kt)("li",null,"Select a Qodly Source like ",(0,o.kt)("code",null,"Rooms")," for the Matrix.")," ",(0,o.kt)("br",null),(0,o.kt)("br",null),(0,o.kt)("li",null,"Embed a component (e.g., a button) within the Matrix for each iterated data.")," ",(0,o.kt)("br",null),(0,o.kt)("br",null),(0,o.kt)("li",null,"Bind the desired function, like ",(0,o.kt)("code",null,"selectRoomOption"),", to the component's event, such as a button click, using ",(0,o.kt)("code",null,"$This"),".")," ",(0,o.kt)("br",null),(0,o.kt)("br",null),(0,o.kt)("li",null,"In the code editor, within the function, you can directly retrieve the data of the currently selected element without the need to pass the selected element qodlysource as a parameter to the function."))),(0,o.kt)(i.ZP.Item,{width:"56%"},(0,o.kt)("img",{src:n(99279).Z,style:{borderRadius:"6px"}}),(0,o.kt)("img",{src:n(77573).Z,style:{borderRadius:"6px",width:"100%"}}))),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"The same principle applies to Related Entity Interaction when you have embedded Matrices within the primary Matrix to manage each iterated data. You can link the intended function to the embedded Matrix's component event using ",(0,o.kt)("inlineCode",{parentName:"p"},"$This"),".")),(0,o.kt)("h2",{id:"showcase"},"Showcase"),(0,o.kt)("p",null,"Here's a glimpse of how the ",(0,o.kt)("strong",{parentName:"p"},"Matrix")," component will look and behave in action:"),(0,o.kt)("img",{src:n(23715).Z,style:{borderRadius:"6px"}}),(0,o.kt)("h2",{id:"triggers-and-events"},"Triggers and Events"),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"Matrix")," component can respond to various events, enabling dynamic user experiences. Events that can trigger actions within the component include:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Event"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"On Click"),(0,o.kt)("td",{parentName:"tr",align:null},"Calls for an action when the user clicks on the component.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"On Keyup"),(0,o.kt)("td",{parentName:"tr",align:null},"Calls for an action when a keyboard key is released while the component is in focus")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"On KeyDown"),(0,o.kt)("td",{parentName:"tr",align:null},"Calls for an action when a keyboard key is pressed down while the component is in focus.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"On MouseEnter"),(0,o.kt)("td",{parentName:"tr",align:null},"Calls for an action when the user's mouse cursor enters the area of the component.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"On MouseLeave"),(0,o.kt)("td",{parentName:"tr",align:null},"Calls for an action when the user's mouse cursor exits the area of the component.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"On Select"),(0,o.kt)("td",{parentName:"tr",align:null},"Calls for an action when an item within the component is selected.")))))}m.isMDXComponent=!0},77573:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/currrentElem-fc7190ecaa58b06aec19fbf240a61533.png"},21451:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/dynamicAttributeDisplay_SelectedElement-edd1b4ec9f1daa412cb229e1d4ac8a9b.png"},88855:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/dynamicAttributeDisplay_attributeValue-bd6a2b2189a3b960896388f3b7c1718d.png"},85569:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/matrix_DataBinding-83dacad2757ded667652a93990938dae.png"},84674:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/matrix_DataDisplay-7c58d6db5c5f8c3bd97419bd5b4bedea.png"},89757:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/matrix_DataDisplay_embeddedMatrix-8a7efae24ff4bd92e83753dccb47d606.png"},23715:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/matrix_Preview-b9178cba3322eff7c33d7c2abac45679.gif"},99279:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/matrix_ServerSideInteraction_RelatedEntity-b7cd0ed5272f7ab0cb2e2eb993e491db.png"},71174:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/matrix_orientations-5e47c984787fe6daa9f789d27ba68fa2.png"}}]);
"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([[9814],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),c=p(n),u=a,d=c["".concat(s,".").concat(u)]||c[u]||g[u]||i;return n?r.createElement(d,l(l({ref:t},m),{},{components:n})):r.createElement(d,l({ref:t},m))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:a,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},97639:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const i={id:"insertString",title:"insertString"},l=void 0,o={unversionedId:"language/commands/insertString",id:"language/commands/insertString",title:"insertString",description:"insertString ( source string , where string",source:"@site/docs/language/commands/insertString.md",sourceDirName:"language/commands",slug:"/language/commands/insertString",permalink:"/docs/language/commands/insertString",draft:!1,editUrl:"https://github.com/docQodly/docs/edit/main/docs/language/commands/insertString.md",tags:[],version:"current",frontMatter:{id:"insertString",title:"insertString"},sidebar:"Develop",previous:{title:"highestProcessNumber",permalink:"/docs/language/commands/highestProcessNumber"},next:{title:"instanceOf",permalink:"/docs/language/commands/instanceOf"}},s={},p=[{value:"Description",id:"description",level:4},{value:"Example",id:"example",level:4},{value:"See also",id:"see-also",level:4}],m={toc:p};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"insertString")," ( ",(0,a.kt)("em",{parentName:"p"},"source")," : string , ",(0,a.kt)("em",{parentName:"p"},"what")," : string , ",(0,a.kt)("em",{parentName:"p"},"where")," : integer ) : string"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:"center"}),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"source"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:"center"},"->"),(0,a.kt)("td",{parentName:"tr",align:null},"String in which to insert the other string")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"what"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:"center"},"->"),(0,a.kt)("td",{parentName:"tr",align:null},"String to insert")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"where"),(0,a.kt)("td",{parentName:"tr",align:null},"integer"),(0,a.kt)("td",{parentName:"tr",align:"center"},"->"),(0,a.kt)("td",{parentName:"tr",align:null},"Where to insert")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Result"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,a.kt)("td",{parentName:"tr",align:null},"Resulting string")))),(0,a.kt)("h4",{id:"description"},"Description"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"insertString")," command inserts a string into ",(0,a.kt)("em",{parentName:"p"},"source")," and returns the resulting string. The command inserts the string ",(0,a.kt)("em",{parentName:"p"},"what")," before the character at position ",(0,a.kt)("em",{parentName:"p"},"where"),"."),(0,a.kt)("p",null,"If ",(0,a.kt)("em",{parentName:"p"},"what"),' is an empty string (""), ',(0,a.kt)("inlineCode",{parentName:"p"},"insertString")," returns source unchanged."),(0,a.kt)("p",null,"If ",(0,a.kt)("em",{parentName:"p"},"where")," is greater than the length of ",(0,a.kt)("em",{parentName:"p"},"source"),", then ",(0,a.kt)("em",{parentName:"p"},"what")," is appended to ",(0,a.kt)("em",{parentName:"p"},"source"),". If ",(0,a.kt)("em",{parentName:"p"},"where")," is less than one (1), then ",(0,a.kt)("em",{parentName:"p"},"what")," is inserted before ",(0,a.kt)("em",{parentName:"p"},"source"),"."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"insertString")," is different from ",(0,a.kt)("a",{parentName:"p",href:"/docs/language/commands/changeString"},(0,a.kt)("inlineCode",{parentName:"a"},"changeString"))," in that it inserts characters instead of overwriting them."),(0,a.kt)("h4",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-qs"},' var vtResult : string\n vtResult = insertString("The tree"," green",4) // vtResult gets "The green  tree"\n vtResult = insertString("Shut","o",3) // vtResult gets "Shout"\n vtResult = insertString("Indention","ta",6) // vtResult gets "Indentation"\n\n')),(0,a.kt)("h4",{id:"see-also"},"See also"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/language/commands/changeString"},(0,a.kt)("inlineCode",{parentName:"a"},"changeString")),(0,a.kt)("br",null),"\n",(0,a.kt)("a",{parentName:"p",href:"/docs/language/commands/deleteString"},(0,a.kt)("inlineCode",{parentName:"a"},"deleteString")),(0,a.kt)("br",null),"\n",(0,a.kt)("a",{parentName:"p",href:"/docs/language/commands/replaceString"},(0,a.kt)("inlineCode",{parentName:"a"},"replaceString"))))}c.isMDXComponent=!0}}]);
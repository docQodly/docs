"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([[6055],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),s=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(r),h=n,m=d["".concat(p,".").concat(h)]||d[h]||u[h]||i;return r?a.createElement(m,o(o({ref:t},c),{},{components:r})):a.createElement(m,o({ref:t},c))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=h;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[d]="string"==typeof e?e:n,o[1]=l;for(var s=2;s<i;s++)o[s]=r[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}h.displayName="MDXCreateElement"},49526:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=r(87462),n=(r(67294),r(3905));const i={id:"ZipArchiveClass",title:"ZIPArchive"},o=void 0,l={unversionedId:"language/ZipArchiveClass",id:"language/ZipArchiveClass",title:"ZIPArchive",description:'A QodlyScript ZIP archive is a File or folder object containing one or more files or folders, which are compressed to be smaller than their original size. These archives are created with a ".zip" extension and can be used to save space or transfer files via mediums which may have size limitations (e.g., email or network).',source:"@site/docs/language/ZipArchiveClass.md",sourceDirName:"language",slug:"/language/ZipArchiveClass",permalink:"/docs/language/ZipArchiveClass",draft:!1,editUrl:"https://github.com/docQodly/docs/edit/main/docs/language/ZipArchiveClass.md",tags:[],version:"current",frontMatter:{id:"ZipArchiveClass",title:"ZIPArchive"},sidebar:"Develop",previous:{title:"WebServer",permalink:"/docs/language/WebServerClass"},next:{title:"ZIPFile",permalink:"/docs/language/ZipFileClass"}},p={},s=[{value:"Example",id:"example",level:3},{value:"Properties",id:"properties",level:3},{value:".root",id:"root",level:2},{value:"Description",id:"description",level:4}],c={toc:s};function d(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"A QodlyScript ZIP archive is a ",(0,n.kt)("inlineCode",{parentName:"p"},"File")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"folder"),' object containing one or more files or folders, which are compressed to be smaller than their original size. These archives are created with a ".zip" extension and can be used to save space or transfer files via mediums which may have size limitations (e.g., email or network).'),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"You create a ZIP archive with the ",(0,n.kt)("a",{parentName:"li",href:"#zipcreatearchive"},"zipCreateArchive")," command."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/language/ZipFileClass"},(0,n.kt)("inlineCode",{parentName:"a"},"ZIPFile"))," and ",(0,n.kt)("a",{parentName:"li",href:"/docs/language/ZipFolderClass"},(0,n.kt)("inlineCode",{parentName:"a"},"ZIPFolder"))," instances are available through the ",(0,n.kt)("a",{parentName:"li",href:"#root"},(0,n.kt)("inlineCode",{parentName:"a"},"root"))," property (",(0,n.kt)("inlineCode",{parentName:"li"},"ZIPFolder"),") of the object returned by ",(0,n.kt)("a",{parentName:"li",href:"#zipreadearchive"},"zipReadArchive")," command.")),(0,n.kt)("h3",{id:"example"},"Example"),(0,n.kt)("p",null,"To retrieve and view the contents of a ZIP file object:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-qs"},'var path, archive : 4D.File\nvar zipFile : 4D.ZipFile\nvar zipFolder : 4D.ZipFolder\nvar txt : string\n\npath = folder(fk desktop folder).file("MyDocs/Archive.zip")\narchive = zipReadArchive(path)\nzipFolder = archive.root // store the zip main folder\nzipFile = zipFolder.files()[0] //read the first zipped file\n\nIf(zipFile.extension = ".txt")\n txt = zipFile.getText()\nEnd if\n')),(0,n.kt)("h3",{id:"properties"},"Properties"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null}))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#root"},(0,n.kt)("strong",{parentName:"a"},".root")," : 4D.ZipFolder"),"\xa0",",","\xa0",",","\xa0",",","\xa0",",a virtual folder providing access to the contents of the ZIP archive")))),(0,n.kt)("h2",{id:"root"},".root"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},".root")," : 4D.ZipFolder"),(0,n.kt)("h4",{id:"description"},"Description"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},".root")," property contains a virtual folder providing access to the contents of the ZIP archive."),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"root")," folder and its contents can be manipulated with the ",(0,n.kt)("a",{parentName:"p",href:"/docs/language/ZipFileClass"},"ZipFile")," and ",(0,n.kt)("a",{parentName:"p",href:"/docs/language/ZipFolderClass"},"ZipFolder")," functions and properties."),(0,n.kt)("p",null,"This property is ",(0,n.kt)("strong",{parentName:"p"},"read-only"),"."))}d.isMDXComponent=!0}}]);
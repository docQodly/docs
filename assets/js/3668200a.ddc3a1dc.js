"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([[9743],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>g});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),p=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=p(a),k=r,g=d["".concat(i,".").concat(k)]||d[k]||m[k]||l;return a?n.createElement(g,s(s({ref:t},u),{},{components:a})):n.createElement(g,s({ref:t},u))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,s=new Array(l);s[0]=k;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o[d]="string"==typeof e?e:r,s[1]=o;for(var p=2;p<l;p++)s[p]=a[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},18016:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const l={id:"OutGoingMessageClass",title:"OutGoingMessage"},s=void 0,o={unversionedId:"language/OutGoingMessageClass",id:"language/OutGoingMessageClass",title:"OutGoingMessage",description:"The 4D.OutGoingMessage class allows you to build messages to be returned by your application functions in response to REST requests. If the response is of type 4D.OutGoingMessage, the REST server does not return an object but the object instance of the OutgoingMessage class.",source:"@site/docs/language/OutGoingMessageClass.md",sourceDirName:"language",slug:"/language/OutGoingMessageClass",permalink:"/docs/language/OutGoingMessageClass",draft:!1,editUrl:"https://github.com/docQodly/docs/edit/main/docs/language/OutGoingMessageClass.md",tags:[],version:"current",frontMatter:{id:"OutGoingMessageClass",title:"OutGoingMessage"}},i={},p=[{value:"Example",id:"example",level:3},{value:"OutGoingMessage Object",id:"outgoingmessage-object",level:3},{value:".body",id:"body",level:2},{value:"Description",id:"description",level:4},{value:".headers",id:"headers",level:2},{value:"Description",id:"description-1",level:4},{value:".setBody()",id:"setbody",level:2},{value:"Description",id:"description-2",level:4},{value:".setHeader()",id:"setheader",level:2},{value:"Description",id:"description-3",level:4},{value:".setStatus()",id:"setstatus",level:2},{value:"Description",id:"description-4",level:4},{value:".status",id:"status",level:2},{value:"Description",id:"description-5",level:4}],u={toc:p};function d(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"4D.OutGoingMessage")," class allows you to build messages to be returned by your application functions in response to ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/overview"},"REST requests"),". If the response is of type ",(0,r.kt)("inlineCode",{parentName:"p"},"4D.OutGoingMessage"),", the REST server does not return an object but the object instance of the ",(0,r.kt)("inlineCode",{parentName:"p"},"OutgoingMessage")," class."),(0,r.kt)("p",null,"Typically, this class can be used in functions declared with the ",(0,r.kt)("a",{parentName:"p",href:"/docs/orda/data-model#onhttpget-keyword"},(0,r.kt)("inlineCode",{parentName:"a"},"onHttpGet"))," keyword and designed to handle HTTP GET requests. Such requests are used, for example, to implement features such as download file, generate and download picture as well as receiving any content-type via a browser. "),(0,r.kt)("p",null,"An instance of this class is built on the Qodly server and can be sent to the browser by the ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/overview"},"REST Server")," only. This class allows to use other technologies than HTTP (e.g. mobile)."),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("p",null,"In this example, a ",(0,r.kt)("inlineCode",{parentName:"p"},"getFile()")," function is implemented in the ",(0,r.kt)("a",{parentName:"p",href:"/docs/orda/data-model#dataclass-class"},"Datastore class")," and ",(0,r.kt)("a",{parentName:"p",href:"/docs/orda/data-model#onhttpget-keyword"},"can be called")," by a REST request. The purpose is to return a ",(0,r.kt)("strong",{parentName:"p"},"testFile.pdf")," file as a response to the request:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"},'extends DataStoreImplementation\n\nexposed onHTTPGet function getFile() : 4D.OutgoingMessage\n    \n    var result = 4D.OutgoingMessage.new()\n    var vfile = file("/RESOURCES/testFile.pdf")\n    \n    result.setBody(vfile.getContent())  \n    result.setHeader("Content-Type", "application/pdf")\n    return result\n')),(0,r.kt)("h3",{id:"outgoingmessage-object"},"OutGoingMessage Object"),(0,r.kt)("p",null,"4D.OutGoingMessage objects provide the following properties and functions:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#body"},(0,r.kt)("strong",{parentName:"a"},"body")," : any"),(0,r.kt)("br",null),"the outgoing message body")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#headers"},(0,r.kt)("strong",{parentName:"a"},"headers")," : object"),(0,r.kt)("br",null),"the current headers of the outgoing message as key/value pairs")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#setbody"},(0,r.kt)("strong",{parentName:"a"},".setBody"),"( ",(0,r.kt)("em",{parentName:"a"},"body")," : any )"),(0,r.kt)("br",null),"sets the outgoing message ",(0,r.kt)("em",{parentName:"td"},"body"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#setheader"},(0,r.kt)("strong",{parentName:"a"},".setHeader"),"( ",(0,r.kt)("em",{parentName:"a"},"key")," : string , ",(0,r.kt)("em",{parentName:"a"},"value")," : string )"),(0,r.kt)("br",null),"sets the outgoing message header ",(0,r.kt)("em",{parentName:"td"},"key")," with the provided ",(0,r.kt)("em",{parentName:"td"},"value"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#setstatus"},(0,r.kt)("strong",{parentName:"a"},".setStatus"),"( ",(0,r.kt)("em",{parentName:"a"},"status")," : integer )"),(0,r.kt)("br",null),"sets the ",(0,r.kt)("inlineCode",{parentName:"td"},"status")," property with the given ",(0,r.kt)("em",{parentName:"td"},"status"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#status"},(0,r.kt)("strong",{parentName:"a"},"status")," : integer"),(0,r.kt)("br",null),"the current status of the outgoing message")))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"A 4D.OutGoingMessage object is a ",(0,r.kt)("a",{parentName:"p",href:"/docs/language/basics/lang-shared"},"non-sharable")," object.")),(0,r.kt)("h2",{id:"body"},".body"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"body")," : any"),(0,r.kt)("h4",{id:"description"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},".body")," property contains the outgoing message body. The following data types are supported in the ",(0,r.kt)("inlineCode",{parentName:"p"},".body")," property:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"text"),(0,r.kt)("li",{parentName:"ul"},"blob"),(0,r.kt)("li",{parentName:"ul"},"object"),(0,r.kt)("li",{parentName:"ul"},"image")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},".body")," property is read-write."),(0,r.kt)("p",null,"You can also set the ",(0,r.kt)("inlineCode",{parentName:"p"},".body")," property using the ",(0,r.kt)("a",{parentName:"p",href:"#setbody"},(0,r.kt)("inlineCode",{parentName:"a"},"setBody()"))," function, in which case the ",(0,r.kt)("inlineCode",{parentName:"p"},"content-type")," header is automatically set. "),(0,r.kt)("h2",{id:"headers"},".headers"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"headers")," : object"),(0,r.kt)("h4",{id:"description-1"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},".headers")," property contains the current headers of the outgoing message as key/value pairs. "),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},".headers")," property is read-only. To set a header, use the ",(0,r.kt)("a",{parentName:"p",href:"#setheader"},(0,r.kt)("inlineCode",{parentName:"a"},"setHeader()"))," function. "),(0,r.kt)("h2",{id:"setbody"},".setBody()"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},".setBody"),"( ",(0,r.kt)("em",{parentName:"p"},"body")," : any )"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"body"),(0,r.kt)("td",{parentName:"tr",align:null},"any"),(0,r.kt)("td",{parentName:"tr",align:null},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Body of the outgoing message")))),(0,r.kt)("h4",{id:"description-2"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},".setBody()")," function sets the outgoing message ",(0,r.kt)("em",{parentName:"p"},"body"),"."),(0,r.kt)("p",null," The following data types are supported in the ",(0,r.kt)("em",{parentName:"p"},"body"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"text"),(0,r.kt)("li",{parentName:"ul"},"blob"),(0,r.kt)("li",{parentName:"ul"},"object"),(0,r.kt)("li",{parentName:"ul"},"image")),(0,r.kt)("p",null,"When this function is used, the content-type header is automatically set depending on the ",(0,r.kt)("em",{parentName:"p"},"body")," type:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Content-Type:text/plain if the body is a text"),(0,r.kt)("li",{parentName:"ul"},"Content-Type:application/octet-stream if body is a blob"),(0,r.kt)("li",{parentName:"ul"},"Content-Type:application/json if body is an object"),(0,r.kt)("li",{parentName:"ul"},"Content-Type:image/jpeg, image/gif... if body is an image")),(0,r.kt)("p",null,"If ",(0,r.kt)("em",{parentName:"p"},"body")," is not of a supported value type, an error is returned."),(0,r.kt)("h2",{id:"setheader"},".setHeader()"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},".setHeader"),"( ",(0,r.kt)("em",{parentName:"p"},"key")," : string , ",(0,r.kt)("em",{parentName:"p"},"value")," : string )"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"key"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Header property to set")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"value"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Value of the header property")))),(0,r.kt)("h4",{id:"description-3"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},".setHeader()")," function sets the outgoing message header ",(0,r.kt)("em",{parentName:"p"},"key")," with the provided ",(0,r.kt)("em",{parentName:"p"},"value"),". If both parameters are not Text values, an error is raised."),(0,r.kt)("p",null,"When returning a 4D.OutGoingMessage object instance, 4D automatically sets some headers (e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"Set-Cookie")," with ",(0,r.kt)("inlineCode",{parentName:"p"},"WASID4D=...")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"4DSID__ProjectName_=...."),"). "),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"If you set a ",(0,r.kt)("em",{parentName:"p"},"value"),' for the "Content-Type" header ',(0,r.kt)("em",{parentName:"p"},"key"),", make sure you call this function after the call to ",(0,r.kt)("a",{parentName:"p",href:"#setbody"},(0,r.kt)("inlineCode",{parentName:"a"},"setBody()")),", because ",(0,r.kt)("inlineCode",{parentName:"p"},"setBody()")," automatically fills this header.  ")),(0,r.kt)("h2",{id:"setstatus"},".setStatus()"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},".setStatus"),"( ",(0,r.kt)("em",{parentName:"p"},"status")," : integer )"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"status"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Status to set")))),(0,r.kt)("h4",{id:"description-4"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},".setStatus()")," function sets the ",(0,r.kt)("inlineCode",{parentName:"p"},"status")," property with the given ",(0,r.kt)("em",{parentName:"p"},"status"),"."),(0,r.kt)("p",null,"If ",(0,r.kt)("em",{parentName:"p"},"status")," is not an integer value, an error is raised."),(0,r.kt)("p",null,"For a list of HTTP status codes, please refer the ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/List_of_HTTP_status_codes"},"HTTP status code list on Wikipedia"),".  "),(0,r.kt)("h2",{id:"status"},".status"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"status")," : integer"),(0,r.kt)("h4",{id:"description-5"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},".status")," property contains the current status of the outgoing message. This property can be set using the ",(0,r.kt)("a",{parentName:"p",href:"setstatus"},(0,r.kt)("inlineCode",{parentName:"a"},"setStatus()"))," function."))}d.isMDXComponent=!0}}]);
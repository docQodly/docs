"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([[4291],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var m=r.createContext({}),p=function(e){var t=r.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(m.Provider,{value:t},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,m=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),s=p(n),c=a,g=s["".concat(m,".").concat(c)]||s[c]||d[c]||l;return n?r.createElement(g,o(o({ref:t},u),{},{components:n})):r.createElement(g,o({ref:t},u))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=c;var i={};for(var m in t)hasOwnProperty.call(t,m)&&(i[m]=t[m]);i.originalType=e,i[s]="string"==typeof e?e:a,o[1]=i;for(var p=2;p<l;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},95525:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>o,default:()=>s,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const l={id:"mod",title:"mod"},o=void 0,i={unversionedId:"language/commands/mod",id:"language/commands/mod",title:"mod",description:"mod ( number1 integer) : number",source:"@site/docs/language/commands/mod.md",sourceDirName:"language/commands",slug:"/language/commands/mod",permalink:"/docs/language/commands/mod",draft:!1,editUrl:"https://github.com/docQodly/docs/edit/main/docs/language/commands/mod.md",tags:[],version:"current",frontMatter:{id:"mod",title:"mod"},sidebar:"Develop",previous:{title:"milliseconds",permalink:"/docs/language/commands/milliseconds"},next:{title:"monthOf",permalink:"/docs/language/commands/monthOf"}},m={},p=[{value:"Description",id:"description",level:4},{value:"Example",id:"example",level:4}],u={toc:p};function s(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"mod")," ( ",(0,a.kt)("em",{parentName:"p"},"number1")," : integer, ",(0,a.kt)("em",{parentName:"p"},"number2")," : integer) : number"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:"center"}),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"number1"),(0,a.kt)("td",{parentName:"tr",align:null},"integer"),(0,a.kt)("td",{parentName:"tr",align:"center"},"->"),(0,a.kt)("td",{parentName:"tr",align:null},"Number to divide")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"number2"),(0,a.kt)("td",{parentName:"tr",align:null},"integer"),(0,a.kt)("td",{parentName:"tr",align:"center"},"->"),(0,a.kt)("td",{parentName:"tr",align:null},"Number to divide by")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Result"),(0,a.kt)("td",{parentName:"tr",align:null},"number"),(0,a.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,a.kt)("td",{parentName:"tr",align:null},"Returns the remainder")))),(0,a.kt)("h4",{id:"description"},"Description"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"mod")," command returns the remainder of the integer division of ",(0,a.kt)("em",{parentName:"p"},"number1")," by ",(0,a.kt)("em",{parentName:"p"},"number2"),"."),(0,a.kt)("p",null,"Notes:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"mod")," accepts integer and number expressions. However, if ",(0,a.kt)("em",{parentName:"p"},"number1")," or ",(0,a.kt)("em",{parentName:"p"},"number2")," are real numbers, the numbers are first rounded and then ",(0,a.kt)("inlineCode",{parentName:"p"},"mod")," is calculated.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Be careful when using ",(0,a.kt)("inlineCode",{parentName:"p"},"mod")," with real numbers of a large size (above 2^31) since, in this case, its operation may reach the limits of the calculation capacities of standard processors."))),(0,a.kt)("p",null,"You can also use the % operator to calculate the remainder."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"The % operator returns valid results with integer expressions. To calculate the modulo of real values, you must use the ",(0,a.kt)("inlineCode",{parentName:"p"},"mod")," command.")),(0,a.kt)("h4",{id:"example"},"Example"),(0,a.kt)("p",null,"The following example illustrates how the ",(0,a.kt)("inlineCode",{parentName:"p"},"mod")," function works with different arguments. Each line assigns a number to the vlResult variable. The comments describe the results:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-qs"}," var vlResult : number\n vlResult = mod(3,2) // vlResult gets 1\n vlResult = mod(4,2) // vlResult gets 0\n vlResult = mod(3.5,2) // vlResult gets 0\n\n")))}s.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([["55422"],{75725:function(e,i,t){t.r(i),t.d(i,{metadata:()=>n,contentTitle:()=>o,default:()=>c,assets:()=>d,toc:()=>a,frontMatter:()=>l});var n=JSON.parse('{"id":"api/$top$limit","title":"$top/$limit","description":"Functionality","source":"@site/versioned_docs/version-1.1.0/api/$top$limit.md","sourceDirName":"api","slug":"/api/$top$limit","permalink":"/docs/api/$top$limit","draft":false,"unlisted":false,"editUrl":"https://github.com/qodly/docs/issues/new?title=Comment%20on%20api%2F%24top%24limit.md%20(1.1.0)&body=Share%20any%20feedback%20about%20this%20page%20%E2%80%94%20report%20issues%2C%20suggest%20improvements%2C%20or%20tell%20us%20what%E2%80%99s%20helpful.%0A%0AIf%20it%E2%80%99s%20an%20issue%3A%0A-%20What%E2%80%99s%20the%20issue%3F%20(e.g.%2C%20typo%2C%20incorrect%20information%2C%20unclear%20explanation)%0A-%20Where%20is%20it%3F%20(e.g.%2C%20section%20name%2C%20specific%20paragraph%2C%20or%20line)%0A%0AThank%20you%20for%20helping%20us%20improve!%20%F0%9F%9A%80%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20","tags":[],"version":"1.1.0","frontMatter":{"id":"$top$limit","title":"$top/$limit"},"sidebar":"Integrations","previous":{"title":"$timeout","permalink":"/docs/api/$timeout"},"next":{"title":"$version","permalink":"/docs/api/$version"}}'),s=t("85893"),r=t("50065");let l={id:"$top$limit",title:"$top/$limit"},o=void 0,d={},a=[{value:"Functionality",id:"functionality",level:2},{value:"Definition",id:"definition",level:3},{value:"Syntax",id:"syntax",level:3},{value:"Detailed Behavior",id:"detailed-behavior",level:2},{value:"Limiting the Number of Entities",id:"limiting-the-number-of-entities",level:3},{value:"Using $top/$limit with $skip",id:"using-toplimit-with-skip",level:3},{value:"Combining with Other Parameters",id:"combining-with-other-parameters",level:2},{value:"Use Cases",id:"use-cases",level:2},{value:"Retrieving a Limited Number of Entities",id:"retrieving-a-limited-number-of-entities",level:3},{value:"Paginating Through Results",id:"paginating-through-results",level:3},{value:"Limiting Filtered Results",id:"limiting-filtered-results",level:3},{value:"Best Practices",id:"best-practices",level:3}];function h(e){let i={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.h2,{id:"functionality",children:"Functionality"}),"\n",(0,s.jsx)(i.h3,{id:"definition",children:"Definition"}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"$top"})," and ",(0,s.jsx)(i.code,{children:"$limit"})," parameters allow you to define the maximum number of entities to return in a response. These parameters can be used interchangeably and are useful for controlling the size of the result set."]}),"\n",(0,s.jsx)(i.h3,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsx)(i.p,{children:"To limit the number of entities returned, use the following syntax:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:"GET /rest/{{dataClass}}?$top={{number}}\n"})}),"\n",(0,s.jsx)(i.p,{children:"or"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:"GET /rest/{{dataClass}}?$limit={{number}}\n"})}),"\n",(0,s.jsx)(i.h2,{id:"detailed-behavior",children:"Detailed Behavior"}),"\n",(0,s.jsx)(i.h3,{id:"limiting-the-number-of-entities",children:"Limiting the Number of Entities"}),"\n",(0,s.jsxs)(i.p,{children:["By default, the server returns up to 100 entities. You can specify a different limit by using ",(0,s.jsx)(i.code,{children:"$top"})," or ",(0,s.jsx)(i.code,{children:"$limit"})," to control the number of entities returned. For example, setting ",(0,s.jsx)(i.code,{children:"$top=50"})," will limit the response to 50 entities."]}),"\n",(0,s.jsx)(i.h3,{id:"using-toplimit-with-skip",children:"Using $top/$limit with $skip"}),"\n",(0,s.jsxs)(i.p,{children:["You can combine ",(0,s.jsx)(i.code,{children:"$top"})," or ",(0,s.jsx)(i.code,{children:"$limit"})," with ",(0,s.jsx)(i.code,{children:"$skip"})," to paginate through a large collection of entities. This combination allows you to navigate the result set by specifying the starting point and the number of entities to return."]}),"\n",(0,s.jsx)(i.h2,{id:"combining-with-other-parameters",children:"Combining with Other Parameters"}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"$top/$limit"})," parameter can be combined with other parameters to control the number of entities returned in a query efficiently:"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"$skip"}),": Use in conjunction with ",(0,s.jsx)(i.code,{children:"$top/$limit"})," to navigate through the dataset by specifying the starting point and the number of entities to return."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"$filter"}),": Narrow down the dataset before limiting the number of entities returned."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"$orderby"}),": Sort the dataset before applying the limit to ensure consistent results."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"$expand"}),": Include related data in the results while limiting the number of entities returned."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"$attributes"}),": Specify which attributes to include in the results after limiting the number of entities."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"$method=entityset"}),": Create an entity set and control the number of entities returned from the set."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"$savedfilter"}),": Apply a saved filter to the dataset before limiting the number of entities returned."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"$savedorderby"}),": Apply a saved sorting order to the dataset before limiting the number of entities returned."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"$compute"}),": Perform computations on a limited number of entities from the dataset."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"$lock"}),": Limit the number of entities when locking or unlocking entities to ensure the operation applies to a specific subset of the dataset."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"$distinct"}),": Limit the number of distinct values returned from a dataset."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,s.jsx)(i.h3,{id:"retrieving-a-limited-number-of-entities",children:"Retrieving a Limited Number of Entities"}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"Request:"})}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:"GET /rest/Employee?$top=50\n"})}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"Response:"})}),"\n",(0,s.jsx)(i.p,{children:"Returns the first 50 entities from the Employee dataclass."}),"\n",(0,s.jsx)(i.h3,{id:"paginating-through-results",children:"Paginating Through Results"}),"\n",(0,s.jsx)(i.p,{children:"Retrieve entities 51 to 60:"}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"Request:"})}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:"GET /rest/Employee?$skip=50&$top=10\n"})}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"Response:"})}),"\n",(0,s.jsx)(i.p,{children:"Returns entities 51 to 60 from the Employee dataclass."}),"\n",(0,s.jsx)(i.h3,{id:"limiting-filtered-results",children:"Limiting Filtered Results"}),"\n",(0,s.jsx)(i.p,{children:"Retrieve the top 5 employees with the highest salaries:"}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"Request:"})}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:'GET /rest/Employee?$filter="salary>0"&$orderby="salary DESC"&$top=5\n'})}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"Response:"})}),"\n",(0,s.jsx)(i.p,{children:"Returns the top 5 employees sorted by salary in descending order."}),"\n",(0,s.jsx)(i.h3,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Use Pagination:"})," When dealing with large datasets, use ",(0,s.jsx)(i.code,{children:"$skip"})," and ",(0,s.jsx)(i.code,{children:"$top"})," together to paginate results efficiently."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Specify Limits:"})," Always specify a reasonable limit to avoid performance issues and large payloads."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Combine with Filters:"})," Use ",(0,s.jsx)(i.code,{children:"$filter"})," along with ",(0,s.jsx)(i.code,{children:"$top"})," or ",(0,s.jsx)(i.code,{children:"$limit"})," to refine the result set and return only the necessary data."]}),"\n"]}),"\n"]})]})}function c(e={}){let{wrapper:i}={...(0,r.a)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},50065:function(e,i,t){t.d(i,{Z:function(){return o},a:function(){return l}});var n=t(67294);let s={},r=n.createContext(s);function l(e){let i=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),n.createElement(r.Provider,{value:i},e.children)}}}]);
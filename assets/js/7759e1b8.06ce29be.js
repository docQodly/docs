"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([[4833],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>c});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),m=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=m(e.components);return n.createElement(i.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),d=m(a),k=r,c=d["".concat(i,".").concat(k)]||d[k]||u[k]||l;return a?n.createElement(c,o(o({ref:t},s),{},{components:a})):n.createElement(c,o({ref:t},s))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=k;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p[d]="string"==typeof e?e:r,o[1]=p;for(var m=2;m<l;m++)o[m]=a[m];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},5957:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>p,toc:()=>m});var n=a(7462),r=(a(7294),a(3905));const l={id:"objects",title:"Object"},o=void 0,p={unversionedId:"language/objects",id:"language/objects",title:"Object",description:"The Object commands manage object type elements.",source:"@site/docs/language/objects.md",sourceDirName:"language",slug:"/language/objects",permalink:"/docs/language/objects",draft:!1,editUrl:"https://github.com/docQodly/docs/edit/main/docs/language/objects.md",tags:[],version:"current",frontMatter:{id:"objects",title:"Object"}},i={},m=[{value:"Commands",id:"commands",level:2},{value:"newSharedObject",id:"newsharedobject",level:2},{value:"Description",id:"description",level:4},{value:"Example 1",id:"example-1-1",level:4},{value:"Example 2",id:"example-2-1",level:4},{value:"Example 3",id:"example-3",level:4},{value:"objectIsDefined",id:"objectisdefined",level:2},{value:"Description",id:"description-2",level:4},{value:"Example 1",id:"example-1-2",level:4},{value:"Example 2",id:"example-2-2",level:4},{value:"See also",id:"see-also",level:4},{value:"objectKeys",id:"objectkeys",level:2},{value:"Description",id:"description-3",level:4},{value:"Example",id:"example",level:4},{value:"See also",id:"see-also-1",level:4},{value:"objectRemove",id:"objectremove",level:2},{value:"Description",id:"description-4",level:4},{value:"Example",id:"example-4",level:4},{value:"objectValues",id:"objectvalues",level:2},{value:"Description",id:"description-5",level:4},{value:"Example",id:"example-5",level:4},{value:"See also",id:"see-also-2",level:4},{value:"storage",id:"storage",level:2},{value:"Description",id:"description-6",level:4},{value:"Example 1",id:"example-1-3",level:4},{value:"Example 2",id:"example-2-3",level:4},{value:"Example 3",id:"example-3-1",level:4},{value:"cos",id:"cos",level:2},{value:"Description",id:"description-7",level:4},{value:"See also",id:"see-also-3",level:4},{value:"dec",id:"dec",level:2},{value:"Description",id:"description-8",level:4},{value:"Example",id:"example-6",level:4},{value:"See also",id:"see-also-4",level:4},{value:"exp",id:"exp",level:2},{value:"Description",id:"description-9",level:4},{value:"Example",id:"example-7",level:4},{value:"See also",id:"see-also-5",level:4},{value:"int",id:"int",level:2},{value:"Description",id:"description-10",level:4},{value:"Example",id:"example-8",level:4},{value:"See also",id:"see-also-6",level:4},{value:"log",id:"log",level:2},{value:"Description",id:"description-11",level:4},{value:"Example",id:"example-9",level:4},{value:"See also",id:"see-also-7",level:4},{value:"mod",id:"mod",level:2},{value:"Description",id:"description-12",level:4},{value:"Example",id:"example-10",level:4},{value:"round",id:"round",level:2},{value:"Description",id:"description-13",level:4},{value:"Example",id:"example-11",level:4},{value:"See also",id:"see-also-8",level:4},{value:"random",id:"random",level:2},{value:"Description",id:"description-14",level:4},{value:"Example",id:"example-12",level:4},{value:"setRealComparisonLevel",id:"setrealcomparisonlevel",level:2},{value:"Description",id:"description-15",level:4},{value:"sin",id:"sin",level:2},{value:"Description",id:"description-16",level:4},{value:"See also",id:"see-also-9",level:4},{value:"squareRoot",id:"squareroot",level:2},{value:"Description",id:"description-17",level:4},{value:"Example 1",id:"example-1-4",level:4},{value:"Example 2",id:"example-2-4",level:4},{value:"tan",id:"tan",level:2},{value:"Description",id:"description-18",level:4},{value:"See also",id:"see-also-10",level:4},{value:"trunc",id:"trunc",level:2},{value:"Description",id:"description-19",level:4},{value:"Example",id:"example-13",level:4},{value:"See also",id:"see-also-11",level:4}],s={toc:m};function d(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The Object commands manage ",(0,r.kt)("a",{parentName:"p",href:"../basics/lang-object.md"},"object")," type elements."),(0,r.kt)("h2",{id:"commands"},"Commands"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#newsharedobject"},(0,r.kt)("strong",{parentName:"a"},"newSharedObject")," {( ",(0,r.kt)("em",{parentName:"a"},"property")," : string , ",(0,r.kt)("em",{parentName:"a"},"value")," : any {, ",(0,r.kt)("em",{parentName:"a"},"...property")," : string , ",(0,r.kt)("em",{parentName:"a"},"...value")," : any} ) } : object"),"\xa0","\xa0","\xa0","\xa0","creates a new empty or prefilled shared object and returns its reference")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#objectcopy"},(0,r.kt)("strong",{parentName:"a"},"objectCopy")," ( ",(0,r.kt)("em",{parentName:"a"},"object")," : object ) : object",(0,r.kt)("br",null),(0,r.kt)("strong",{parentName:"a"},"objectCopy")," ( ",(0,r.kt)("em",{parentName:"a"},"object")," : object , ",(0,r.kt)("em",{parentName:"a"},"option")," : integer ) : object",(0,r.kt)("br",null),(0,r.kt)("strong",{parentName:"a"},"objectCopy")," ( ",(0,r.kt)("em",{parentName:"a"},"object")," : object , ",(0,r.kt)("em",{parentName:"a"},"option")," : integer , ",(0,r.kt)("em",{parentName:"a"},"groupWith")," : object ) : object",(0,r.kt)("br",null),(0,r.kt)("strong",{parentName:"a"},"objectCopy")," ( ",(0,r.kt)("em",{parentName:"a"},"object")," : object , ",(0,r.kt)("em",{parentName:"a"},"option")," : integer , ",(0,r.kt)("em",{parentName:"a"},"groupWith")," : collection ) : object"),"\xa0","\xa0","\xa0","\xa0","returns an object containing a complete (deep) copy of the properties, sub-objects and values for the ",(0,r.kt)("em",{parentName:"td"},"object"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#objectisdefined"},(0,r.kt)("strong",{parentName:"a"},"objectIsDefined")," ( ",(0,r.kt)("em",{parentName:"a"},"object")," : object {, ",(0,r.kt)("em",{parentName:"a"},"property")," : string } ) : boolean"),"\xa0","\xa0","\xa0","\xa0","returns ",(0,r.kt)("inlineCode",{parentName:"td"},"true")," if ",(0,r.kt)("em",{parentName:"td"},"object")," or ",(0,r.kt)("em",{parentName:"td"},"property")," is defined, and ",(0,r.kt)("inlineCode",{parentName:"td"},"false")," otherwise")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#objectremove"},(0,r.kt)("strong",{parentName:"a"},"objectRemove")," ( ",(0,r.kt)("em",{parentName:"a"},"object")," : object , ",(0,r.kt)("em",{parentName:"a"},"property")," : string )"),"\xa0","\xa0","\xa0","\xa0","removes ",(0,r.kt)("em",{parentName:"td"},"property")," from the ",(0,r.kt)("em",{parentName:"td"},"object"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#objectvalues"},(0,r.kt)("strong",{parentName:"a"},"objectValues")," ( ",(0,r.kt)("em",{parentName:"a"},"object")," : object ) : collection"),"\xa0","\xa0","\xa0","\xa0","returns a collection of variants containing all of the enumerable property values of the ",(0,r.kt)("em",{parentName:"td"},"object"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#storage"},(0,r.kt)("strong",{parentName:"a"},"storage")," : object"),"\xa0","\xa0","\xa0","\xa0","returns the catalog of shared objects or shared collections that you have registered in the ",(0,r.kt)("inlineCode",{parentName:"td"},"storage")," object on the current application")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#log"},(0,r.kt)("strong",{parentName:"a"},"log")," ( ",(0,r.kt)("em",{parentName:"a"},"number")," : number ) : number"),"\xa0","\xa0","\xa0","\xa0","returns the natural (Napierian) log of ",(0,r.kt)("em",{parentName:"td"},"number"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#mod"},(0,r.kt)("strong",{parentName:"a"},"mod")," ( ",(0,r.kt)("em",{parentName:"a"},"number1")," : integer, ",(0,r.kt)("em",{parentName:"a"},"number2")," : integer) : number"),"\xa0","\xa0","\xa0","\xa0","returns the remainder of the integer division of ",(0,r.kt)("em",{parentName:"td"},"number1")," by ",(0,r.kt)("em",{parentName:"td"},"number2"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#random"},(0,r.kt)("strong",{parentName:"a"},"random"),": integer"),"\xa0","\xa0","\xa0","\xa0","returns a random integer value between 0 and 32,767 (inclusive)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#round"},(0,r.kt)("strong",{parentName:"a"},"round")," ( ",(0,r.kt)("em",{parentName:"a"},"round")," : number, ",(0,r.kt)("em",{parentName:"a"},"places")," : integer) : number"),"\xa0","\xa0","\xa0","\xa0","returns ",(0,r.kt)("em",{parentName:"td"},"number")," rounded to the number of decimal places specified by ",(0,r.kt)("em",{parentName:"td"},"places"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#setRealComparisonLevel"},(0,r.kt)("strong",{parentName:"a"},"setRealComparisonLevel")," ( ",(0,r.kt)("em",{parentName:"a"},"epsilon")," : number )"),"\xa0","\xa0","\xa0","\xa0","sets the ",(0,r.kt)("em",{parentName:"td"},"epsilon")," value used by Qodly to compare real values and expressions for equality")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#sin"},(0,r.kt)("strong",{parentName:"a"},"sin")," ( ",(0,r.kt)("em",{parentName:"a"},"number")," : number ) : number "),"\xa0","\xa0","\xa0","\xa0"," returns the sine of ",(0,r.kt)("em",{parentName:"td"},"number"),", where ",(0,r.kt)("em",{parentName:"td"},"number")," is expressed in radians")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#squareRoot"},(0,r.kt)("strong",{parentName:"a"},"squareRoot")," ( ",(0,r.kt)("em",{parentName:"a"},"number")," : number) : number"),"\xa0","\xa0","\xa0","\xa0","returns the square root of ",(0,r.kt)("em",{parentName:"td"},"number"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#tan"},(0,r.kt)("strong",{parentName:"a"},"tan")," ( ",(0,r.kt)("em",{parentName:"a"},"number")," : number ) : number "),"\xa0","\xa0","\xa0","\xa0"," returns the tangent of ",(0,r.kt)("em",{parentName:"td"},"number"),", where ",(0,r.kt)("em",{parentName:"td"},"number")," is expressed in radians")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#trunc"},(0,r.kt)("strong",{parentName:"a"},"trunc")," ( ",(0,r.kt)("em",{parentName:"a"},"number")," : number, ",(0,r.kt)("em",{parentName:"a"},"places")," : integer) : number"),"\xa0","\xa0","\xa0","\xa0","returns ",(0,r.kt)("em",{parentName:"td"},"number")," with its decimal part truncated to the number of decimal places specified by ",(0,r.kt)("em",{parentName:"td"},"places"))))),(0,r.kt)("h2",{id:"newsharedobject"},"newSharedObject"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"newSharedObject")," {( ",(0,r.kt)("em",{parentName:"p"},"property")," : string , ",(0,r.kt)("em",{parentName:"p"},"value")," : any {, ",(0,r.kt)("em",{parentName:"p"},"...property")," : string , ",(0,r.kt)("em",{parentName:"p"},"...value")," : any} ) } : object"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"property"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Name of property to create")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"value"),(0,r.kt)("td",{parentName:"tr",align:null},"integer, number, string, date, time, boolean, object, collection, picture"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Value of property")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Result"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"New shared object")))),(0,r.kt)("h4",{id:"description"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"newSharedObject")," command creates a new empty or prefilled shared object and returns its reference. Adding or editing a property to this object must be surrounded by the ",(0,r.kt)("inlineCode",{parentName:"p"},"use...end")," structure, otherwise an error is generated. Reading a property without a ",(0,r.kt)("inlineCode",{parentName:"p"},"use...end")," structure is, however, possible. For more information, see the ",(0,r.kt)("a",{parentName:"p",href:"../basics/lang-shared"},"Shared objects and shared collections")," page."),(0,r.kt)("p",null,"If you do not pass any parameters, ",(0,r.kt)("inlineCode",{parentName:"p"},"newSharedObject")," creates an empty object and returns its reference. "),(0,r.kt)("p",null,"Optionally, you can prefill the new object by passing one or several ",(0,r.kt)("em",{parentName:"p"},"property/value")," pairs as parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"In the ",(0,r.kt)("em",{parentName:"li"},"property")," parameter, pass the label of the property to be created (up to 255 characters). Note that the property parameter is case sensitive and must comply with ",(0,r.kt)("a",{parentName:"li",href:"../basics/lang-identifiers.md#object-properties"},"Qodly rules for property names"),". "),(0,r.kt)("li",{parentName:"ul"},"In the ",(0,r.kt)("em",{parentName:"li"},"value")," parameter, pass the value you want to set for the property. Shared objects can only contain values of the following types:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"number (all numeric values are stored as numbers)"),(0,r.kt)("li",{parentName:"ul"},"string"),(0,r.kt)("li",{parentName:"ul"},"boolean"),(0,r.kt)("li",{parentName:"ul"},"date"),(0,r.kt)("li",{parentName:"ul"},"time (stored as number of milliseconds)"),(0,r.kt)("li",{parentName:"ul"},"null"),(0,r.kt)("li",{parentName:"ul"},"shared object"),(0,r.kt)("li",{parentName:"ul"},"shared collection")))),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Unlike standard (not shared) objects, shared objects do not support pictures and objects or collections that are not shared."),(0,r.kt)("h4",{parentName:"admonition",id:"example-1"},"Example 1"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-qs"},'var contact : object\ncontact=newSharedObject("name","Smith","firstname","John")\n')),(0,r.kt)("h4",{parentName:"admonition",id:"example-2"},"Example 2"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-qs"},'var s_obj : object\ns_obj=newSharedObject("prop1","alpha")\nuse(s_obj)\n    s_obj.prop1="omega"\nend\n')),(0,r.kt)("h2",{parentName:"admonition",id:"objectcopy"},"objectCopy"),(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("strong",{parentName:"p"},"objectCopy")," ( ",(0,r.kt)("em",{parentName:"p"},"object")," : object ) : object",(0,r.kt)("br",null),(0,r.kt)("strong",{parentName:"p"},"objectCopy")," ( ",(0,r.kt)("em",{parentName:"p"},"object")," : object , ",(0,r.kt)("em",{parentName:"p"},"option")," : integer ) : object",(0,r.kt)("br",null),(0,r.kt)("strong",{parentName:"p"},"objectCopy")," ( ",(0,r.kt)("em",{parentName:"p"},"object")," : object , ",(0,r.kt)("em",{parentName:"p"},"option")," : integer , ",(0,r.kt)("em",{parentName:"p"},"groupWith")," : object ) : object",(0,r.kt)("br",null),(0,r.kt)("strong",{parentName:"p"},"objectCopy")," ( ",(0,r.kt)("em",{parentName:"p"},"object")," : object , ",(0,r.kt)("em",{parentName:"p"},"option")," : integer , ",(0,r.kt)("em",{parentName:"p"},"groupWith")," : collection ) : object"),(0,r.kt)("table",{parentName:"admonition"},(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Object to copy")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"option"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"ck shared: return a shared object")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"groupWith"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Shared object to be grouped with the resulting object")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"groupWith"),(0,r.kt)("td",{parentName:"tr",align:null},"collection"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Shared collection to be grouped with the resulting object")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Result"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"Deep copy of ",(0,r.kt)("em",{parentName:"td"},"object"))))),(0,r.kt)("h4",{parentName:"admonition",id:"description-1"},"Description"),(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"objectCopy")," command returns an object containing a complete (deep) copy of the properties, sub-objects and values for the ",(0,r.kt)("em",{parentName:"p"},"object"),"."),(0,r.kt)("p",{parentName:"admonition"},"By default, ",(0,r.kt)("inlineCode",{parentName:"p"},"objectCopy")," returns a regular (not shared) object, even if the command is applied to a shared object. Pass the ",(0,r.kt)("inlineCode",{parentName:"p"},"ck shared")," constant in the ",(0,r.kt)("em",{parentName:"p"},"option")," parameter to create a shared object. In this case, you can use the ",(0,r.kt)("em",{parentName:"p"},"groupWith")," parameter to associate the shared object with another collection or object."),(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("em",{parentName:"p"},"groupWith")," parameter allows you to designate a collection or an object with which the resulting object should be associated. ")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"objectCopy")," can be used with an entity selection object. By default if ",(0,r.kt)("inlineCode",{parentName:"li"},"ck shared")," is omitted, a non-shareable entity selection is returned. If ",(0,r.kt)("inlineCode",{parentName:"li"},"ck shared")," is passed, a shareable entity selection is returned. In this context, the ",(0,r.kt)("em",{parentName:"li"},"groupWith")," option is useless since an entity selection does not have a locking identifier. "),(0,r.kt)("li",{parentName:"ul"},"The same principle applies to entity selections stored inside properties of ",(0,r.kt)("em",{parentName:"li"},"object"),". However, the command is optimized when ",(0,r.kt)("inlineCode",{parentName:"li"},"ck shared")," is passed and a nested entity selection is shareable: the same entity selection reference is returned in the resulting object. "),(0,r.kt)("li",{parentName:"ul"},"Datastore, dataclass, and entity objects are not copiable. If ",(0,r.kt)("inlineCode",{parentName:"li"},"objectCopy")," command is called with them, a ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," value is returned")),(0,r.kt)("p",null,":::"),(0,r.kt)("h4",{id:"example-1-1"},"Example 1"),(0,r.kt)("p",null,"This example illustrates the deep copy of an object containing a sub-object:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"},'var ob1, ob2, ob3 : object\n\nob1={info: {a: 20; b: 30}}  \n    //ob1: {"info":{"a":20,"b":30}}\nob2=ob1 //another reference to the same object \n    //ob2: {"info":{"a":20,"b":30}}\nob3=objectCopy(ob1) //deep copy of the object\n    //ob3: {"info":{"a":20,"b":30}}\n    \nob1.info.b=1000 //modify ob1 and thus ob2\nob3.info.a=5000 //modify the deep copy\n    //ob1: {"info":{"a":20,"b":1000}}\n    //ob2: {"info":{"a":20,"b":1000}}\n    //ob3: {"info":{"a":5000,"b":30}}\n\n')),(0,r.kt)("h4",{id:"example-2-1"},"Example 2"),(0,r.kt)("p",null,"We want to copy the regular (non shared) ",(0,r.kt)("em",{parentName:"p"},"person")," object into the ",(0,r.kt)("em",{parentName:"p"},"sharedPerson")," shared object. To do this, we must create a shared copy of the object (",(0,r.kt)("em",{parentName:"p"},"sharedPerson"),")."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"},' var person, copy, sharedPerson : object\n var text : string\n \n text=documentToString(file("/SOURCES/person.txt")\n person=jsonParse(text) //person is a standard object\n sharedPerson=newSharedObject()\n copy=objectCopy(person,ck shared) //copy is a shared object\n \n  //So it can be put in sharedPerson\n use(sharedObject)\n    sharedObject.person=copy\n end\n\n')),(0,r.kt)("h4",{id:"example-3"},"Example 3"),(0,r.kt)("p",null,"We want to copy ",(0,r.kt)("em",{parentName:"p"},"sharedObj")," in ",(0,r.kt)("em",{parentName:"p"},"sharedColl")," but since they belong to different shared groups, a direct copy would result in an error. We must make a copy of ",(0,r.kt)("em",{parentName:"p"},"sharedObj")," and designate sharedColl* as shared group for the copy. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"},' var sharedObj, objCopy : object\n var sharedColl : collection\n \n  //sharedObj belongs to a shared group\n sharedObj=newSharedObject("lastname","Smith","address",newSharedObject("city","New York"))\n  //sharedColl belongs to another shared group\n sharedColl=newSharedCollection(newSharedObject("lastname","Brown"))\n \n objCopy=objectCopy(sharedObj,ck shared,sharedColl)\n  //objCopy is now in the same shared group as sharedColl\n \n  //So objCopy can be put in sharedColl without error\n use(sharedColl)\n    sharedColl.push(objCopy)\n end\n')),(0,r.kt)("h2",{id:"objectisdefined"},"objectIsDefined"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"objectIsDefined")," ( ",(0,r.kt)("em",{parentName:"p"},"object")," : object {, ",(0,r.kt)("em",{parentName:"p"},"property")," : string } ) : boolean"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Object to work with")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"property"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"If passed = property to check, if omitted = check object")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Result"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("li",null,"If ",(0,r.kt)("em",{parentName:"td"},"property")," omitted: true if ",(0,r.kt)("em",{parentName:"td"},"object")," is defined, otherwise false."),(0,r.kt)("li",null,"If ",(0,r.kt)("em",{parentName:"td"},"property")," passed: true if ",(0,r.kt)("em",{parentName:"td"},"property")," is defined, otherwise false."))))),(0,r.kt)("h4",{id:"description-2"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"objectIsDefined")," command returns ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," if ",(0,r.kt)("em",{parentName:"p"},"object")," or ",(0,r.kt)("em",{parentName:"p"},"property")," is defined, and ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," otherwise."),(0,r.kt)("p",null,"By default, if you omit the ",(0,r.kt)("em",{parentName:"p"},"property")," parameter, the command checks whether the ",(0,r.kt)("em",{parentName:"p"},"object")," is defined. An object is defined if its contents has been initialized. "),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"An object can be ",(0,r.kt)("strong",{parentName:"p"},"defined")," but ",(0,r.kt)("strong",{parentName:"p"},"empty"),". To find out if an object is undefined or empty, use the ",(0,r.kt)("inlineCode",{parentName:"p"},"objectIsEmpty")," command. ")),(0,r.kt)("p",null,"If you pass the ",(0,r.kt)("em",{parentName:"p"},"property")," parameter, the command checks whether this property exists in ",(0,r.kt)("em",{parentName:"p"},"object"),". Note that the ",(0,r.kt)("em",{parentName:"p"},"property")," parameter is case sensitive. If the ",(0,r.kt)("em",{parentName:"p"},"property")," is not found at the first level of ",(0,r.kt)("em",{parentName:"p"},"object"),", the command does nothing. "),(0,r.kt)("h4",{id:"example-1-2"},"Example 1"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"},' var obj : object\n var def : boolean\n def=objectIsDefined(obj) //false, obj is not initialized\n \n obj=newObject("Name","Martin")\n objectRemove(obj, "Name")\n def=objectIsDefined(obj) //true, obj is empty but initialized\n')),(0,r.kt)("h4",{id:"example-2-2"},"Example 2"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"},' var obj : object\n \n obj=newObject("Name","Smith", "Age", 42)  \n ...\n if(objectIsDefined(obj,"Age")\n    ...\n end\n')),(0,r.kt)("p",null,"This test is equivalent to:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"},' if(valueType(obj,"Age")!=Is undefined)\n')),(0,r.kt)("h4",{id:"see-also"},"See also"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#objectisempty"},"objectIsEmpty")),(0,r.kt)("h2",{id:"objectkeys"},"objectKeys"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"objectValues")," ( ",(0,r.kt)("em",{parentName:"p"},"object")," : object ) : collection"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Object to return property values")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Result"),(0,r.kt)("td",{parentName:"tr",align:null},"collection"),(0,r.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"Collection of property values (variant)")))),(0,r.kt)("h4",{id:"description-3"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"objectValues")," command returns a collection of variants containing all of the enumerable property values of the ",(0,r.kt)("em",{parentName:"p"},"object"),"."),(0,r.kt)("p",null,"The order of values within the returned collection follows the definition order of the properties."),(0,r.kt)("h4",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"},' var person : object\n var col : collection\n \n person=newObject\n person.lastName="Smith"\n person.firstName="Jenny"\n person.children=newObject("Mary",12,"Mark",8)\n \n col=objectValues(person)\n \n  //col[0]:"Smith"\n  //col[1]:"Jenny"\n  //col[2]:{"Mary":12,"Mark":8}\n')),(0,r.kt)("h4",{id:"see-also-1"},"See also"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#objectentries"},"objectEntries"),(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"p",href:"#objectkeys"},"objectKeys")),(0,r.kt)("h2",{id:"objectremove"},"objectRemove"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"objectRemove")," ( ",(0,r.kt)("em",{parentName:"p"},"object")," : object , ",(0,r.kt)("em",{parentName:"p"},"property")," : string )"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Object to edit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"property"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Name of property to remove")))),(0,r.kt)("h4",{id:"description-4"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"objectRemove")," command removes ",(0,r.kt)("em",{parentName:"p"},"property")," from the ",(0,r.kt)("em",{parentName:"p"},"object"),"."),(0,r.kt)("p",null,"The command removes the property as well as its current value. "),(0,r.kt)("p",null,"In the ",(0,r.kt)("em",{parentName:"p"},"property")," parameter, pass the label of the property to be removed. Note that the ",(0,r.kt)("em",{parentName:"p"},"property")," parameter is case sensitive. "),(0,r.kt)("p",null,"If the ",(0,r.kt)("em",{parentName:"p"},"property")," is not found at the first level of ",(0,r.kt)("em",{parentName:"p"},"object"),", the command does nothing. "),(0,r.kt)("h4",{id:"example-4"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"},' var obj : object\n obj={name : "Smith", info: {a: 20, b: 30}}\n objectRemove(obj, "name")\n    //obj: {"info": {"a": 20, "b": 30}} \n objectRemove(obj.info, "b")\n    //obj: {"info": {"a": 20}} \n')),(0,r.kt)("h2",{id:"objectvalues"},"objectValues"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"objectValues")," ( ",(0,r.kt)("em",{parentName:"p"},"object")," : object ) : collection"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Object to return property values")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Result"),(0,r.kt)("td",{parentName:"tr",align:null},"collection"),(0,r.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"Collection of property values (variant)")))),(0,r.kt)("h4",{id:"description-5"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"objectValues")," command returns a collection of variants containing all of the enumerable property values of the ",(0,r.kt)("em",{parentName:"p"},"object"),"."),(0,r.kt)("p",null,"The order of values within the returned collection follows the definition order of the properties."),(0,r.kt)("h4",{id:"example-5"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"},' var person : object\n var col : collection\n \n person=newObject\n person.lastName="Smith"\n person.firstName="Jenny"\n person.children=newObject("Mary",12,"Mark",8)\n \n col=objectValues(person)\n \n  //col[0]:"Smith"\n  //col[1]:"Jenny"\n  //col[2]:{"Mary":12,"Mark":8}\n')),(0,r.kt)("h4",{id:"see-also-2"},"See also"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#objectentries"},"objectEntries"),(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"p",href:"#objectkeys"},"objectKeys")),(0,r.kt)("h2",{id:"storage"},"storage"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"storage")," : object"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Result"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"Catalog of shared objects and shared collections registered in ",(0,r.kt)("inlineCode",{parentName:"td"},"storage"))))),(0,r.kt)("h4",{id:"description-6"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"storage")," command returns the catalog of shared objects or shared collections that you have registered in the ",(0,r.kt)("inlineCode",{parentName:"p"},"storage")," object on the current application."),(0,r.kt)("p",null,"The catalog returned by ",(0,r.kt)("inlineCode",{parentName:"p"},"storage")," is automatically created by Qodly and is available to all processes of the application, including preemptive processes. There is one ",(0,r.kt)("inlineCode",{parentName:"p"},"storage")," shared object per server."),(0,r.kt)("p",null,"Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"storage")," catalog to reference any shared objects or shared collections that you want to be used from any preemptive or standard process. To register a shared object or a shared collection in the catalog, add its reference to the shared object returned by ",(0,r.kt)("inlineCode",{parentName:"p"},"storage"),"."),(0,r.kt)("p",null,"Since the catalog returned by ",(0,r.kt)("inlineCode",{parentName:"p"},"storage")," is a shared object, it follows the rules described in the ",(0,r.kt)("a",{parentName:"p",href:"../basics/lang-shared"},"Shared objects and shared collections")," section (but with some specificities):"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"This object can only contain shared objects and shared collections. Trying to add other kinds of values (non-shared objects or collections, null, scalar values) will generate an error."),(0,r.kt)("li",{parentName:"ul"},"Adding a property to this object must be surrounded by the ",(0,r.kt)("inlineCode",{parentName:"li"},"use...end")," structure, otherwise an error is returned. Reading an attribute outside of a ",(0,r.kt)("inlineCode",{parentName:"li"},"use...end")," structure is, however, possible."),(0,r.kt)("li",{parentName:"ul"},"When surrounded by the ",(0,r.kt)("inlineCode",{parentName:"li"},"use...end")," structure, first-level attributes of ",(0,r.kt)("inlineCode",{parentName:"li"},"storage")," are locked for other processes."),(0,r.kt)("li",{parentName:"ul"},"Unlike standard shared objects, the object returned by ",(0,r.kt)("inlineCode",{parentName:"li"},"storage")," will NOT share its locking identifier with shared objects or collections added as attributes (and thus will not be locked).")),(0,r.kt)("h4",{id:"example-1-3"},"Example 1"),(0,r.kt)("p",null,"Initializing the ",(0,r.kt)("inlineCode",{parentName:"p"},"storage")," object:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"},' use(storage)\n    storage.counters=newSharedObject("customers",0,"invoices",0)\n end\n')),(0,r.kt)("h4",{id:"example-2-3"},"Example 2"),(0,r.kt)("p",null,"A standard way to set ",(0,r.kt)("inlineCode",{parentName:"p"},"storage")," values:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"},' use(storage)\n    storage.mydata:=newSharedObject\n    use(storage.mydata)\n       storage.mydata.prop1="Smith"\n       storage.mydata.prop2=100\n    end\n end\n')),(0,r.kt)("h4",{id:"example-3-1"},"Example 3"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"storage")," allows implementing a singleton with a ",(0,r.kt)("em",{parentName:"p"},"lazy initialization"),", as shown in the following example."),(0,r.kt)("p",null," declare -> counterValue : integer\nvar counter : object //create a reference to counter for the process"),(0,r.kt)("p",null,' if(counter==null) //if this reference is null, get if from storage\nuse(storage) //Use of storage needed only once!\nif(storage.counter==null)\nstorage.counter=newSharedObject("operation",0)\nend\ncounter=storage.counter //Get the reference of the counter shared object\nend\nend\nuse(counter) //directly use the shared object counter (no need to use storage!)\ncounter.operation=counter.operation+1\ncounterValue=counter.operation\nend'),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"For more information about singleton patterns, you can refer to ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Singleton_pattern"},"this Wikipedia page"),".")),(0,r.kt)("h2",{id:"cos"},"cos"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"cos")," ( ",(0,r.kt)("em",{parentName:"p"},"number")," : number ) : number"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Number, in radians, whose cosine is returned")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Result"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"Cosine of number")))),(0,r.kt)("h4",{id:"description-7"},"Description"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"cos"),"  returns the cosine of ",(0,r.kt)("em",{parentName:"p"},"number"),", where ",(0,r.kt)("em",{parentName:"p"},"number")," is expressed in radians. "),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Qodly provides the predefined constants ",(0,r.kt)("inlineCode",{parentName:"p"},"Pi"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Degree"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"Radian"),". ",(0,r.kt)("inlineCode",{parentName:"p"},"Pi")," returns the Pi number (3.14159...), ",(0,r.kt)("inlineCode",{parentName:"p"},"Degree")," returns one degree expressed in radians (0.01745...), and ",(0,r.kt)("inlineCode",{parentName:"p"},"Radian")," returns one radian expressed in degrees (57.29577...).")),(0,r.kt)("h4",{id:"see-also-3"},"See also"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#arctan"},(0,r.kt)("inlineCode",{parentName:"a"},"arctan")),(0,r.kt)("br",null),"\n",(0,r.kt)("a",{parentName:"p",href:"#sin"},(0,r.kt)("inlineCode",{parentName:"a"},"sin")),(0,r.kt)("br",null),"\n",(0,r.kt)("a",{parentName:"p",href:"#tan"},(0,r.kt)("inlineCode",{parentName:"a"},"tan"))),(0,r.kt)("h2",{id:"dec"},"dec"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"dec")," ( ",(0,r.kt)("em",{parentName:"p"},"number")," : number ) : number"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Number whose decimal portion is returned")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Result"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"Decimal part of number")))),(0,r.kt)("h4",{id:"description-8"},"Description"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"dec")," returns the decimal (fractional) portion of ",(0,r.kt)("em",{parentName:"p"},"number"),". The value returned is always positive or zero."),(0,r.kt)("h4",{id:"example-6"},"Example"),(0,r.kt)("p",null,"The following example takes a monetary value expressed as a number, and extracts the dollar part and the cents part. If ",(0,r.kt)("em",{parentName:"p"},"vAmount")," is 7.31, then ",(0,r.kt)("em",{parentName:"p"},"vDollars")," is set to 7 and ",(0,r.kt)("em",{parentName:"p"},"vCents")," is set to 31:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"}," var vDollars, vCents, vAmount : number\n vDollars=int(vAmount) //Get the dollars\n vCents=dec(vAmount)*100 // Get the fractional part\n\n")),(0,r.kt)("h4",{id:"see-also-4"},"See also"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#int"},(0,r.kt)("inlineCode",{parentName:"a"},"int"))),(0,r.kt)("h2",{id:"exp"},"exp"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"exp")," ( ",(0,r.kt)("em",{parentName:"p"},"number")," : number ) : number"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Number to evaluate")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Result"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"Natural log base by the power of number")))),(0,r.kt)("h4",{id:"description-9"},"Description"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"exp")," raises the natural log base (e = 2.71828...) by the power of ",(0,r.kt)("em",{parentName:"p"},"number"),". ",(0,r.kt)("inlineCode",{parentName:"p"},"exp")," is the inverse function of ",(0,r.kt)("a",{parentName:"p",href:"#log"},(0,r.kt)("inlineCode",{parentName:"a"},"log")),"."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Qodly provides the predefined constant ",(0,r.kt)("em",{parentName:"p"},"e number")," (2.71828...).")),(0,r.kt)("h4",{id:"example-7"},"Example"),(0,r.kt)("p",null,"The following example assigns the exponential of 1 to vrE (the log of vrE is 1):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"}," var vrE : number\n vrE=exp(1) // vrE gets 2.17828...\n")),(0,r.kt)("h4",{id:"see-also-5"},"See also"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#log"},(0,r.kt)("inlineCode",{parentName:"a"},"log"))),(0,r.kt)("h2",{id:"int"},"int"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"int")," ( ",(0,r.kt)("em",{parentName:"p"},"number")," : number ) : number"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Number whose integer portion is returned")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Result"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"Integer portion of number")))),(0,r.kt)("h4",{id:"description-10"},"Description"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"int")," returns the integer portion of ",(0,r.kt)("em",{parentName:"p"},"number"),". ",(0,r.kt)("inlineCode",{parentName:"p"},"int")," truncates a negative ",(0,r.kt)("em",{parentName:"p"},"number")," away from zero."),(0,r.kt)("h4",{id:"example-8"},"Example"),(0,r.kt)("p",null,"The following example illustrates how ",(0,r.kt)("inlineCode",{parentName:"p"},"int")," works for both positive and negative numbers. Note that the decimal portion of the number is removed:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"}," var vlResult : number\n vlResult=int(123.4) // vlResult gets 123\n vlResult=int(-123.4) // vlResult gets \u2013124\n")),(0,r.kt)("h4",{id:"see-also-6"},"See also"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#dec"},(0,r.kt)("inlineCode",{parentName:"a"},"dec"))),(0,r.kt)("h2",{id:"log"},"log"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"log")," ( ",(0,r.kt)("em",{parentName:"p"},"number")," : number ) : number"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Number for which to return the log")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Result"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"Log of number")))),(0,r.kt)("h4",{id:"description-11"},"Description"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"log")," returns the natural (Napierian) log of ",(0,r.kt)("em",{parentName:"p"},"number"),". ",(0,r.kt)("inlineCode",{parentName:"p"},"log")," is the inverse function of ",(0,r.kt)("a",{parentName:"p",href:"#exp"},(0,r.kt)("inlineCode",{parentName:"a"},"exp")),"."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Qodly provides the predefined constant ",(0,r.kt)("em",{parentName:"p"},"e number")," (2.71828...).")),(0,r.kt)("h4",{id:"example-9"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"}," var vLog : string\n vLog=string(log(exp(1))\n \n")),(0,r.kt)("h4",{id:"see-also-7"},"See also"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#exp"},(0,r.kt)("inlineCode",{parentName:"a"},"exp"))),(0,r.kt)("h2",{id:"mod"},"mod"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"mod")," ( ",(0,r.kt)("em",{parentName:"p"},"number1")," : integer, ",(0,r.kt)("em",{parentName:"p"},"number2")," : integer) : number"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"number1"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Number to divide")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"number2"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Number to divide by")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Result"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"Returns the remainder")))),(0,r.kt)("h4",{id:"description-12"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"mod")," command returns the remainder of the integer division of ",(0,r.kt)("em",{parentName:"p"},"number1")," by ",(0,r.kt)("em",{parentName:"p"},"number2"),"."),(0,r.kt)("p",null,"Notes:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"mod")," accepts integer and number expressions. However, if ",(0,r.kt)("em",{parentName:"p"},"number1")," or ",(0,r.kt)("em",{parentName:"p"},"number2")," are real numbers, the numbers are first rounded and then ",(0,r.kt)("inlineCode",{parentName:"p"},"mod")," is calculated.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Be careful when using ",(0,r.kt)("inlineCode",{parentName:"p"},"mod")," with real numbers of a large size (above 2^31) since, in this case, its operation may reach the limits of the calculation capacities of standard processors."))),(0,r.kt)("p",null,"You can also use the % operator to calculate the remainder."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"The % operator returns valid results with integer expressions. To calculate the modulo of real values, you must use the ",(0,r.kt)("inlineCode",{parentName:"p"},"mod")," command.")),(0,r.kt)("h4",{id:"example-10"},"Example"),(0,r.kt)("p",null,"The following example illustrates how the ",(0,r.kt)("inlineCode",{parentName:"p"},"mod")," function works with different arguments. Each line assigns a number to the vlResult variable. The comments describe the results:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"}," var vlResult : number\n vlResult=mod(3,2) // vlResult gets 1\n vlResult=mod(4,2) // vlResult gets 0\n vlResult=mod(3.5,2) // vlResult gets 0\n \n")),(0,r.kt)("h2",{id:"round"},"round"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"round")," ( ",(0,r.kt)("em",{parentName:"p"},"round")," : number, ",(0,r.kt)("em",{parentName:"p"},"places")," : integer) : number"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"aRound"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Number to be rounded")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"places"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Number of decimal places used for rounding")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Result"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"Number rounded to the number of decimal places specified by ",(0,r.kt)("em",{parentName:"td"},"places"))))),(0,r.kt)("h4",{id:"description-13"},"Description"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"round")," returns ",(0,r.kt)("em",{parentName:"p"},"number")," rounded to the number of decimal places specified by ",(0,r.kt)("em",{parentName:"p"},"places"),"."),(0,r.kt)("p",null,"If ",(0,r.kt)("em",{parentName:"p"},"places")," is positive, ",(0,r.kt)("em",{parentName:"p"},"number")," is rounded to ",(0,r.kt)("em",{parentName:"p"},"places")," decimal places. If ",(0,r.kt)("em",{parentName:"p"},"places")," is negative, ",(0,r.kt)("em",{parentName:"p"},"number")," is rounded on the left of the decimal point."),(0,r.kt)("p",null,"If the digit following places is 5 though 9, ",(0,r.kt)("inlineCode",{parentName:"p"},"round")," rounds toward positive infinity for a positive number, and toward negative infinity for a negative number. If the digit following places is 0 through 4, ",(0,r.kt)("inlineCode",{parentName:"p"},"round")," rounds toward zero."),(0,r.kt)("h4",{id:"example-11"},"Example"),(0,r.kt)("p",null,"The following example illustrates how ",(0,r.kt)("inlineCode",{parentName:"p"},"round")," works with different arguments:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"}," var vlResult : number\n vlResult=round(16.857,2) // vlResult gets 16.86\n vlResult=round(32345.67,-3) // vlResult gets 32000\n vlResult=round(29.8725,3) // vlResult gets 29.873\n vlResult=round(-1.5,0) // vlResult gets \u20132\n \n")),(0,r.kt)("h4",{id:"see-also-8"},"See also"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#trunc"},(0,r.kt)("inlineCode",{parentName:"a"},"trunc"))),(0,r.kt)("h2",{id:"random"},"random"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"random"),": integer"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Result"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"Random number")))),(0,r.kt)("h4",{id:"description-14"},"Description"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"random")," returns a random integer value between 0 and 32,767 (inclusive)."),(0,r.kt)("p",null,"To define a range of integers from which the random value will be chosen, use this formula:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"}," (random%(vEnd-vStart+1))+vStart\n \n")),(0,r.kt)("p",null,"The value ",(0,r.kt)("em",{parentName:"p"},"vStart")," is the first number in the range, and the value ",(0,r.kt)("em",{parentName:"p"},"vEnd")," is the last."),(0,r.kt)("h4",{id:"example-12"},"Example"),(0,r.kt)("p",null,"The following example assigns a random integer between 10 and 30 to the ",(0,r.kt)("em",{parentName:"p"},"vlResult")," variable:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"}," var vlResult : integer\n vlResult=(random%21)+10\n \n")),(0,r.kt)("h2",{id:"setrealcomparisonlevel"},"setRealComparisonLevel"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"setRealComparisonLevel")," ( ",(0,r.kt)("em",{parentName:"p"},"epsilon")," : number )"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"epsilon"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Epsilon value for real equality comparisons")))),(0,r.kt)("h4",{id:"description-15"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"setRealComparisonLevel")," command sets the ",(0,r.kt)("em",{parentName:"p"},"epsilon")," value used by Qodly to compare real values and expressions for equality."),(0,r.kt)("p",null,"A computer always performs approximative real computations; therefore, testing real numbers for equality should take this approximation into account. Qodly does this when comparing real numbers by testing whether or not the difference between the two numbers exceeds a certain value. This value is called the epsilon and works this way:"),(0,r.kt)("p",null,"Given two real numbers ",(0,r.kt)("em",{parentName:"p"},"a")," and ",(0,r.kt)("em",{parentName:"p"},"b"),", if ",(0,r.kt)("inlineCode",{parentName:"p"},"abs(a-b)")," is greater than the epsilon, the numbers are considered not equal; otherwise, the numbers are considered equal."),(0,r.kt)("p",null,"By default, Qodly sets the epsilon value to 10 power minus 6 (10^-6). Please note that the epsilon value should always be positive. Examples:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"0.00001=0.00002 returns false, because the difference 0.00001 is greater than 10^-6."),(0,r.kt)("li",{parentName:"ul"},"0.000001=0.000002 returns true, because the difference 0.000001 is not greater than 10^-6."),(0,r.kt)("li",{parentName:"ul"},"0.000001=0.000003 returns false, because the difference 0.000002 is greater than 10^-6.")),(0,r.kt)("p",null,"Using ",(0,r.kt)("inlineCode",{parentName:"p"},"setRealComparisonLevel"),", you can increase or decrease the epsilon value as you require."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"The command will have no effect if ",(0,r.kt)("em",{parentName:"p"},"epsilon")," > 10^-3 or if ",(0,r.kt)("em",{parentName:"p"},"epsilon")," < 0.")),(0,r.kt)("p",null,"Changing the epsilon only affects real number comparison for equality. It has no effect on other real computations nor on the display of real values. "),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"This command should be used in specific cases, such as sorting on an attribute with values less than 10^-6. Usually, you will not need to change the default epsilon value.")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"setRealComparisonLevel")," command has no effect on queries and sorts performed with attributes of the Number type. It only applies the Qodly language.")),(0,r.kt)("h2",{id:"sin"},"sin"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"sin")," ( ",(0,r.kt)("em",{parentName:"p"},"number")," : number ) : number "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Number, in radians, whose sine is returned")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Result"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"Sine of number")))),(0,r.kt)("h4",{id:"description-16"},"Description"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"sin"),"  returns the sine of ",(0,r.kt)("em",{parentName:"p"},"number"),", where ",(0,r.kt)("em",{parentName:"p"},"number")," is expressed in radians. "),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Qodly provides the predefined constants ",(0,r.kt)("inlineCode",{parentName:"p"},"Pi"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Degree"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"Radian"),". ",(0,r.kt)("inlineCode",{parentName:"p"},"Pi")," returns the Pi number (3.14159...), ",(0,r.kt)("inlineCode",{parentName:"p"},"Degree")," returns one degree expressed in radians (0.01745...), and ",(0,r.kt)("inlineCode",{parentName:"p"},"Radian")," returns one radian expressed in degrees (57.29577...).")),(0,r.kt)("h4",{id:"see-also-9"},"See also"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#arctan"},(0,r.kt)("inlineCode",{parentName:"a"},"arctan")),(0,r.kt)("br",null),"\n",(0,r.kt)("a",{parentName:"p",href:"#cos"},(0,r.kt)("inlineCode",{parentName:"a"},"cos")),(0,r.kt)("br",null),"\n",(0,r.kt)("a",{parentName:"p",href:"#tan"},(0,r.kt)("inlineCode",{parentName:"a"},"tan"))),(0,r.kt)("h2",{id:"squareroot"},"squareRoot"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"squareRoot")," ( ",(0,r.kt)("em",{parentName:"p"},"number")," : number) : number"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Number whose square root is calculated")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Result"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"Square root of the number")))),(0,r.kt)("h4",{id:"description-17"},"Description"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"squareRoot")," returns the square root of ",(0,r.kt)("em",{parentName:"p"},"number"),"."),(0,r.kt)("h4",{id:"example-1-4"},"Example 1"),(0,r.kt)("p",null,"The following example assigns the value 1.414213562373 to the variable ",(0,r.kt)("em",{parentName:"p"},"vrSquareRootOfTwo"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"}," var vrSquareRootOfTwo : number\n vrSquareRootOfTwo=squareRoot(2)\n \n")),(0,r.kt)("h4",{id:"example-2-4"},"Example 2"),(0,r.kt)("p",null,"The following method returns the hypotenuse of the right triangle whose two legs are passed as parameters:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"}," declare ( legA : number , legB : number) -> hypothenuse : number\n hypothenuse=squareRoot((legA^2)+(legB^2)) \n")),(0,r.kt)("h2",{id:"tan"},"tan"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"tan")," ( ",(0,r.kt)("em",{parentName:"p"},"number")," : number ) : number "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Number, in radians, whose tangent is returned")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Result"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"Tangent of number")))),(0,r.kt)("h4",{id:"description-18"},"Description"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"tan"),"  returns the tangent of ",(0,r.kt)("em",{parentName:"p"},"number"),", where ",(0,r.kt)("em",{parentName:"p"},"number")," is expressed in radians. "),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Qodly provides the predefined constants ",(0,r.kt)("inlineCode",{parentName:"p"},"Pi"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Degree"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"Radian"),". ",(0,r.kt)("inlineCode",{parentName:"p"},"Pi")," returns the Pi number (3.14159...), ",(0,r.kt)("inlineCode",{parentName:"p"},"Degree")," returns one degree expressed in radians (0.01745...), and ",(0,r.kt)("inlineCode",{parentName:"p"},"Radian")," returns one radian expressed in degrees (57.29577...).")),(0,r.kt)("h4",{id:"see-also-10"},"See also"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#arctan"},(0,r.kt)("inlineCode",{parentName:"a"},"arctan")),(0,r.kt)("br",null),"\n",(0,r.kt)("a",{parentName:"p",href:"#cos"},(0,r.kt)("inlineCode",{parentName:"a"},"cos")),(0,r.kt)("br",null),"\n",(0,r.kt)("a",{parentName:"p",href:"#sin"},(0,r.kt)("inlineCode",{parentName:"a"},"sin"))),(0,r.kt)("h2",{id:"trunc"},"trunc"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"trunc")," ( ",(0,r.kt)("em",{parentName:"p"},"number")," : number, ",(0,r.kt)("em",{parentName:"p"},"places")," : integer) : number"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Number to be truncated")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"places"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Number of decimal places used for truncating")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Result"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"Number with its decimal part truncated to the number of decimal places specified by ",(0,r.kt)("em",{parentName:"td"},"places"))))),(0,r.kt)("h4",{id:"description-19"},"Description"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"trunc")," returns ",(0,r.kt)("em",{parentName:"p"},"number")," with its decimal part truncated to the number of decimal places specified by ",(0,r.kt)("em",{parentName:"p"},"places"),". ",(0,r.kt)("inlineCode",{parentName:"p"},"trunc")," always truncates toward negative infinity."),(0,r.kt)("p",null,"If ",(0,r.kt)("em",{parentName:"p"},"places")," is positive, ",(0,r.kt)("em",{parentName:"p"},"number")," is truncated to ",(0,r.kt)("em",{parentName:"p"},"places")," decimal places. If ",(0,r.kt)("em",{parentName:"p"},"places")," is negative, number is truncated on the left of the decimal point."),(0,r.kt)("h4",{id:"example-13"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"}," var vlResult : number\n vlResult=trunc(216.897,1) // vlResult gets 216.8\n vlResult=trunc(216.897,-1) // vlResult gets 210\n vlResult=trunc(-216.897,1) // vlResult gets \u2013216.9\n vlResult=trunc(-216.897,-1) // vlResult gets \u2013220\n \n")),(0,r.kt)("h4",{id:"see-also-11"},"See also"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#round"},(0,r.kt)("inlineCode",{parentName:"a"},"round"))))}d.isMDXComponent=!0}}]);
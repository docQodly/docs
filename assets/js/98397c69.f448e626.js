"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([["64366"],{29280:function(e,t,s){s.r(t),s.d(t,{metadata:()=>l,contentTitle:()=>d,default:()=>o,assets:()=>h,toc:()=>c,frontMatter:()=>r});var l=JSON.parse('{"id":"language/commands/jsonValidate","title":"jsonValidate","description":"jsonValidate ( vJson object) : object","source":"@site/versioned_docs/version-1.1.0/language/commands/jsonValidate.md","sourceDirName":"language/commands","slug":"/language/commands/jsonValidate","permalink":"/docs/language/commands/jsonValidate","draft":false,"unlisted":false,"editUrl":"https://github.com/qodly/docs/issues/new?title=Comment%20on%20language%2Fcommands%2FjsonValidate.md%20(1.1.0)&body=Share%20any%20feedback%20about%20this%20page%20%E2%80%94%20report%20issues%2C%20suggest%20improvements%2C%20or%20tell%20us%20what%E2%80%99s%20helpful.%0A%0AIf%20it%E2%80%99s%20an%20issue%3A%0A-%20What%E2%80%99s%20the%20issue%3F%20(e.g.%2C%20typo%2C%20incorrect%20information%2C%20unclear%20explanation)%0A-%20Where%20is%20it%3F%20(e.g.%2C%20section%20name%2C%20specific%20paragraph%2C%20or%20line)%0A%0AThank%20you%20for%20helping%20us%20improve!%20%F0%9F%9A%80%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20","tags":[],"version":"1.1.0","frontMatter":{"id":"jsonValidate","title":"jsonValidate"},"sidebar":"Develop","previous":{"title":"jsonStringify","permalink":"/docs/language/commands/jsonStringify"},"next":{"title":"killWorker","permalink":"/docs/language/commands/killWorker"}}'),n=s("85893"),i=s("50065");let r={id:"jsonValidate",title:"jsonValidate"},d=void 0,h={},c=[{value:"Description",id:"description",level:4},{value:"Error management",id:"error-management",level:5},{value:"Example",id:"example",level:4},{value:"See also",id:"see-also",level:4}];function a(e){let t={a:"a",admonition:"admonition",code:"code",em:"em",h4:"h4",h5:"h5",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"jsonValidate"})," ( ",(0,n.jsx)(t.em,{children:"vJson"})," : object , ",(0,n.jsx)(t.em,{children:"vSchema"})," : object) : object"]}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Parameter"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{style:{textAlign:"center"}}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"vJson"}),(0,n.jsx)(t.td,{children:"object"}),(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"\u2192"}),(0,n.jsx)(t.td,{children:"JSON object to validate"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"vSchema"}),(0,n.jsx)(t.td,{children:"object"}),(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"\u2192"}),(0,n.jsx)(t.td,{children:"JSON schema used to validate JSON objects"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Result"}),(0,n.jsx)(t.td,{children:"object"}),(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"\u2190"}),(0,n.jsx)(t.td,{children:"Validation status and errors (if any)"})]})]})]}),"\n",(0,n.jsx)(t.h4,{id:"description",children:"Description"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"jsonValidate"})," command checks the compliance of the ",(0,n.jsx)(t.em,{children:"vJson"})," JSON contents with the rules defined in the ",(0,n.jsx)(t.em,{children:"vSchema"})," JSON schema. If the JSON is invalid, the command returns a detailed description of error(s)."]}),"\n",(0,n.jsxs)(t.p,{children:["In ",(0,n.jsx)(t.em,{children:"vJson"}),", pass a JSON object containing the JSON contents to be validated."]}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsxs)(t.p,{children:["Validating a JSON string consists of checking that it follows the rules defined in a JSON schema. This is different from checking that the JSON is well-formed, which is done by the ",(0,n.jsx)(t.a,{href:"/docs/language/commands/jsonParse",children:(0,n.jsx)(t.code,{children:"jsonParse"})})," command."]})}),"\n",(0,n.jsxs)(t.p,{children:["In ",(0,n.jsx)(t.em,{children:"vSchema"}),", pass the JSON schema to use for the validation. For more information on how to create a JSON schema, you may consult the ",(0,n.jsx)(t.a,{href:"http://json-schema.org/",children:(0,n.jsx)(t.code,{children:"json-schema.org"})})," web site."]}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsxs)(t.p,{children:["To validate a JSON object, Qodly uses the norm described in the ",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/draft-wright-json-schema-validation-00",children:(0,n.jsx)(t.code,{children:"JSON Schema Validation"})})," document (this draft is still being written and can evolve in the future). Qodly's current implementation is based upon the version 4 of the draft."]})}),"\n",(0,n.jsx)(t.p,{children:"If the JSON schema is not valid, Qodly returns a null object and throws an error that can be caught by an on error call method."}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"jsonValidate"})," returns an object that provides the status of the validation. This object can contain the following properties:"]}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Property name"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.em,{children:"success"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"boolean"}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["True if ",(0,n.jsx)(t.em,{children:"vJson"})," is validated, false otherwise. If false, the ",(0,n.jsx)(t.em,{children:"errors"})," property is also returned"]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.em,{children:"errors"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"object collection"}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["List of error objects if the ",(0,n.jsx)(t.em,{children:"vJson"})," is not validated (see below)"]})]})]})]}),"\n",(0,n.jsxs)(t.p,{children:["Each error object of the ",(0,n.jsx)(t.em,{children:"errors"})," collection contains the following properties:"]}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Property name"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.em,{children:"code"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"number"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Error code"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.em,{children:"jsonPath"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"string"}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["JSON path that cannot be validated in ",(0,n.jsx)(t.em,{children:"vJson"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.em,{children:"line"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"number"}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Line number of the error in the JSON file. This property is filled if the JSON has been parsed by ",(0,n.jsx)(t.a,{href:"/docs/language/commands/jsonParse",children:(0,n.jsx)(t.code,{children:"jsonParse"})})," with the * parameter. Otherwise, the property is omitted."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.em,{children:"message"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"string"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Error message"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.em,{children:"offset"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"number"}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Line offset of the error in the JSON file. This property is filled if the JSON has been parsed by ",(0,n.jsx)(t.a,{href:"/docs/language/commands/jsonParse",children:(0,n.jsx)(t.code,{children:"jsonParse"})})," with the * parameter. Otherwise, the property is omitted."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.em,{children:"schemaPaths"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"string"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"JSON path in the schema that causes the validation error"})]})]})]}),"\n",(0,n.jsx)(t.h5,{id:"error-management",children:"Error management"}),"\n",(0,n.jsx)(t.p,{children:"The following errors may be returned  :"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Code"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"JSON Keyword"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Message"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"2"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"multipleOf"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Error while validating against 'multipleOf' key."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"3"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"maximum"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'The value provided should not be greater than specified in the schema ("{s1}").'})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"4"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"exclusiveMaximum"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'The value provided should be less than specified in the schema ("{s1}").'})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"5"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"minimum"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'The value provided should not be less than specified in the schema ("{s1}").'})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"6"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"exclusiveMinimum"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'The value provided should be greater than specified in the schema ("{s1}").'})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"7"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"maxLength"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"The string is longer than specified in the schema."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"8"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"minLength"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"The string is shorter than specified in the schema."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"9"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"pattern"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'The string "{s1}" does not match the pattern in the schema:{s2}.'})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"10"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"additionalItems"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Error while validating an array. JSON contains more elements than specified in the schema."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"11"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"maxItems"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"The array contains more items than specified in the schema."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"12"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"minItems"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"The array contains less items than specified in the schema."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"13"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"uniqueItems"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'Error while validating an array. Elements are not unique. Another instance of "{s1}" is already in the array.'})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"14"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"maxProperties"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"The number of properties is greater than specified in the schema."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"15"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"minProperties"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"The number of properties is less than specified in the schema."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"16"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"required"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'The required property "{s1}" is missing.'})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"17"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"additionalProperties"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No additional properties allowed by the schema. The property(ies) {s1} should be removed."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"18"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"dependencies"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'The property "{s1}" requires the property "{s2}".'})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"19"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"enum"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Error while validating against 'enum' key. \"{s1}\" does not match any enum element in the schema."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"20"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"type"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Incorrect type. Expected type is: {s1}"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"21"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"oneOf"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"The JSON matches more than one value."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"22"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"oneOf"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"The JSON does not match any value."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"23"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"not"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"The JSON is valid against the value of 'not'."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"24"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"format"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'The string does not match ("{s1}")'})]})]})]}),"\n",(0,n.jsx)(t.h4,{id:"example",children:"Example"}),"\n",(0,n.jsx)(t.p,{children:"You want to validate a JSON object with a schema and get the list of validation errors, if any, and store error lines and messages in a text variable:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-qs",children:'var oResult : object\nvar vLNbErr : integer\nvar vTerrLine : string\n\noResult = jsonValidate(jsonParse(myJson, *), mySchema)\n\nif (oResult.success) // validation successful\n  // ...\nelse // validation failed\n  vLNbErr = oResult.errors.length // get the number of error(s)\n  vTerrLine = string(vLNbErr) + " validation error(s) found.\\r"\n  for (i, 0, vLNbErr)\n    vTerrLine = vTerrLine + oResult.errors[i].message + " " + string(oResult.errors[i].line\\r)\n  end for\nend if\n\n'})}),"\n",(0,n.jsx)(t.h4,{id:"see-also",children:"See also"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"http://json-schema.org/",children:(0,n.jsx)(t.code,{children:"How to create a JSON schema"})}),(0,n.jsx)("br",{}),"\n",(0,n.jsx)(t.a,{href:"jsonParse",children:(0,n.jsx)(t.code,{children:"jsonParse"})}),(0,n.jsx)("br",{}),"\n",(0,n.jsx)(t.a,{href:"http://json-schema.org/latest/json-schema-validation.html",children:(0,n.jsx)(t.code,{children:"JSON schema validation keywords on json-schema.org"})})]})]})}function o(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},50065:function(e,t,s){s.d(t,{Z:function(){return d},a:function(){return r}});var l=s(67294);let n={},i=l.createContext(n);function r(e){let t=l.useContext(i);return l.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),l.createElement(i.Provider,{value:t},e.children)}}}]);
"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([[1855],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>g});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),p=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=p(e.components);return n.createElement(d.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=p(a),c=r,g=m["".concat(d,".").concat(c)]||m[c]||u[c]||l;return a?n.createElement(g,o(o({ref:t},s),{},{components:a})):n.createElement(g,o({ref:t},s))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=c;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i[m]="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},84787:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const l={id:"date",title:"date"},o=void 0,i={unversionedId:"language/commands/date",id:"language/commands/date",title:"date",description:"date ( exprString datedate ( exprDate date",source:"@site/docs/language/commands/date.md",sourceDirName:"language/commands",slug:"/language/commands/date",permalink:"/docs/language/commands/date",draft:!1,editUrl:"https://github.com/docQodly/docs/edit/main/docs/language/commands/date.md",tags:[],version:"current",frontMatter:{id:"date",title:"date"},sidebar:"Develop",previous:{title:"currentTime",permalink:"/docs/language/commands/currentTime"},next:{title:"dayNumber",permalink:"/docs/language/commands/dayNumber"}},d={},p=[{value:"Description",id:"description",level:4},{value:"<em>exprString</em>",id:"exprstring",level:5},{value:"<em>exprDate</em>",id:"exprdate",level:5},{value:"Example 1",id:"example-1",level:4},{value:"Example 2",id:"example-2",level:4},{value:"Example 3",id:"example-3",level:4},{value:"See also",id:"see-also",level:4}],s={toc:p};function m(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"date")," ( ",(0,r.kt)("em",{parentName:"p"},"exprString")," : string ) : date",(0,r.kt)("br",null),(0,r.kt)("strong",{parentName:"p"},"date")," ( ",(0,r.kt)("em",{parentName:"p"},"exprDate")," : date ) : date"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"exprString"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"String representing the date to be returned")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"exprDate"),(0,r.kt)("td",{parentName:"tr",align:null},"date"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Date expression")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Result"),(0,r.kt)("td",{parentName:"tr",align:null},"date"),(0,r.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"Date expression")))),(0,r.kt)("h4",{id:"description"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"date")," command evaluates ",(0,r.kt)("em",{parentName:"p"},"exprString")," or ",(0,r.kt)("em",{parentName:"p"},"exprDate")," and returns a date."),(0,r.kt)("h5",{id:"exprstring"},(0,r.kt)("em",{parentName:"h5"},"exprString")),(0,r.kt)("p",null,"The ",(0,r.kt)("em",{parentName:"p"},"exprString"),' must be formatted as follows: "YYYY-MM-DDTHH:MM:SS", for example "2013-11-20T10:20:00". In this case, ',(0,r.kt)("inlineCode",{parentName:"p"},"date")," evaluates the ",(0,r.kt)("em",{parentName:"p"},"expression"),' parameter correctly, regardless of the current settings. Decimal seconds, preceded by a period, are supported (e.g.: "2013-11-20T10:20:00.9854").\nIf the ',(0,r.kt)("em",{parentName:"p"},"exprString")," format does not precisely fit this ISO format, the date is evaluated as a short date format based on the regional settings of the server."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"When the ",(0,r.kt)("em",{parentName:"p"},"exprString")," does not match the ISO format, the regional settings defined in the operating system for a short date are used for the evaluation. For example, in the US version, by default the date must be in the order MM/DD/YY (month, day, year). The month and day can be one or two digits. The year can be two or four digits. If the year is two digits, then ",(0,r.kt)("inlineCode",{parentName:"p"},"date")," considers whether the date belongs to the 21st or 20th century based on the value entered. By default, the pivotal value is 30:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"If the value is greater than or equal to 30, Qodly considers the century to be the 20th and adds 19 to the beginning of the value."),(0,r.kt)("li",{parentName:"ul"},"If the value is less than 30, Qodly considers the century to be the 21st and adds 20 to the beginning of the value."),(0,r.kt)("li",{parentName:"ul"},'If you pass an invalid date (such as "13/35/94" or "aa/12/94") in expression, ',(0,r.kt)("inlineCode",{parentName:"li"},"date")," returns an empty date (00/00/00). It is your responsibility to verify that expression is a valid date."),(0,r.kt)("li",{parentName:"ul"},"If the expression evaluates to undefined, ",(0,r.kt)("inlineCode",{parentName:"li"},"date")," returns an empty date (00/00/00). This is useful when you expect the result to be a date, even if it can be undefined (e.g. an object attribute)."))),(0,r.kt)("h5",{id:"exprdate"},(0,r.kt)("em",{parentName:"h5"},"exprDate")),(0,r.kt)("p",null,"If a date type ",(0,r.kt)("em",{parentName:"p"},"exprDate")," is passed, ",(0,r.kt)("inlineCode",{parentName:"p"},"date")," returns the date passed in the parameter 'as is'. This is particularly useful in the context of generic programming using object attributes."),(0,r.kt)("h4",{id:"example-1"},"Example 1"),(0,r.kt)("p",null,"The following examples show various cases:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"},' var vdDate, vdDate2, vdDate3, vdDate4, vdDate5 : date\n var vobj : object\n vdDate = date("12/25/94") //returns 12/25/94 on a US system\n vdDate2 = date("40/40/94") //00/00/00\n vdDate3 = date("It was the 6/30, we were in 2016") //06/30/16\n vobj = newObject("expDate","2020-11-17T00:00:00.0000")\n vdDate4 = date(vobj.expDate) //11/17/20\n\n vdDate5 = date(vobj.creationDate) //00/00/00\n\n')),(0,r.kt)("h4",{id:"example-2"},"Example 2"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"date")," evaluation based on a date in ISO format"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"},' var vDate : date\n var vtDateISO : string\n vtDateISO = "2013-06-05T20:00:00"\n vDate = date(vtDateISO)\n  //vDate represents June 5th, 2013 regardless of the system language\n\n')),(0,r.kt)("h4",{id:"example-3"},"Example 3"),(0,r.kt)("p",null,"You want to get a date from an object attribute, whatever the current attribute date storage option:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"}," var vDate : date\n var myObj : object\n if(valueType(myObj.myDate) == Is date) //it's stored as date, no need to convert\n    vDate = myObj.myDate\n else //it's stored as string\n    vDate = date(myObj.myDate)\n end\n\n")),(0,r.kt)("h4",{id:"see-also"},"See also"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/language/commands/bool"},(0,r.kt)("inlineCode",{parentName:"a"},"bool")),(0,r.kt)("br",null),"\n",(0,r.kt)("a",{parentName:"p",href:"/docs/language/commands/string"},(0,r.kt)("inlineCode",{parentName:"a"},"string"))))}m.isMDXComponent=!0}}]);
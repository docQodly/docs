"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([[7281],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return n?a.createElement(f,s(s({ref:t},c),{},{components:n})):a.createElement(f,s({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[d]="string"==typeof e?e:r,s[1]=o;for(var p=2;p<i;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},77219:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const i={id:"classFunctionsOverview",title:"Overview"},s=void 0,o={unversionedId:"api/classFunctionsOverview",id:"api/classFunctionsOverview",title:"Overview",description:"Introduction",source:"@site/docs/api/classFunctionsOverview.md",sourceDirName:"api",slug:"/api/classFunctionsOverview",permalink:"/docs/api/classFunctionsOverview",draft:!1,editUrl:"https://github.com/docQodly/docs/edit/main/docs/api/classFunctionsOverview.md",tags:[],version:"current",frontMatter:{id:"classFunctionsOverview",title:"Overview"},sidebar:"API",previous:{title:"$version",permalink:"/docs/api/$version"},next:{title:"Syntax and Class Functions",permalink:"/docs/api/classFunctionsSyntax"}},l={},p=[{value:"Introduction",id:"introduction",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Exposed Functions",id:"exposed-functions",level:3},{value:"Key Concepts",id:"key-concepts",level:2},{value:"Function Call Syntax",id:"function-call-syntax",level:3},{value:"Handling Non-Exposed Functions",id:"handling-non-exposed-functions",level:3},{value:"REST API Endpoints",id:"rest-api-endpoints",level:3},{value:"Use Case",id:"use-case",level:2},{value:"Step 1: Defining and Exposing a Function",id:"step-1-defining-and-exposing-a-function",level:3},{value:"Step 2: Calling the Function via REST API",id:"step-2-calling-the-function-via-rest-api",level:3},{value:"Step 3: Request",id:"step-3-request",level:3},{value:"Equivalent Code",id:"equivalent-code",level:4},{value:"Step 4: Sample Response",id:"step-4-sample-response",level:3},{value:"Error Handling",id:"error-handling",level:2}],c={toc:p};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"ORDA (Object Relational Data Access) allows developers to interact with the data model of an application through REST APIs. By defining class functions within the ORDA data model, these functions can be exposed and called via REST requests. This allows external systems and clients to leverage the data and business logic encapsulated within an application."),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("h3",{id:"exposed-functions"},"Exposed Functions"),(0,r.kt)("p",null,"Only functions marked with the ",(0,r.kt)("inlineCode",{parentName:"p"},"exposed")," keyword can be called from REST requests. This ensures that only intended functions are available for external access."),(0,r.kt)("admonition",{title:"Example: Exposing a Function",type:"tip"},(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-qs"},'exposed function getTest() : string\n    return "test"\n'))),(0,r.kt)("h2",{id:"key-concepts"},"Key Concepts"),(0,r.kt)("h3",{id:"function-call-syntax"},"Function Call Syntax"),(0,r.kt)("p",null,"Functions are called using POST requests on the appropriate ORDA interface without parentheses. The URL and body of the request vary depending on the type of class function being called."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"POST {{ApiEndpoint}}/rest/Product/getProductDetails\n")),(0,r.kt)("h3",{id:"handling-non-exposed-functions"},"Handling Non-Exposed Functions"),(0,r.kt)("p",null,"If a class function is not marked as exposed, it is treated as an attribute rather than a function, resulting in an error response."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "__ERROR": [\n        {\n            "message": "The \\"getProductDetails\\" attribute cannot be found in The \\"Product\\" dataclass",\n            "componentSignature": "dbmg",\n            "errCode": 1500\n        },\n        {\n            "message": "Cannot completely build a list of attributes with \\"getProductDetails\\" for the \\"Product\\" dataclass",\n            "componentSignature": "dbmg",\n            "errCode": 1804\n        }\n    ]\n}\n')),(0,r.kt)("h3",{id:"rest-api-endpoints"},"REST API Endpoints"),(0,r.kt)("p",null,"The ORDA REST API provides several endpoints to call class functions:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Class function"),(0,r.kt)("th",{parentName:"tr",align:null},"Syntax"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"../orda/data-model#datastore"},"Datastore Class")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/rest/$catalog/DataStoreClassFunction"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"../orda/data-model#dataclass"},"Dataclass Class")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/rest/{dataClass}/DataClassClassFunction"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"../orda/data-model#entityselection-class"},"EntitySelection Class")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/rest/{dataClass}/EntitySelectionClassFunction"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"../orda/data-model#entity-class"},"Entity Class")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/rest/{dataClass}(key)/EntityClassFunction"))))),(0,r.kt)("h2",{id:"use-case"},"Use Case"),(0,r.kt)("h3",{id:"step-1-defining-and-exposing-a-function"},"Step 1: Defining and Exposing a Function"),(0,r.kt)("p",null,"Consider a scenario where we have a ",(0,r.kt)("inlineCode",{parentName:"p"},"Customer")," dataClass with a function to retrieve customer details based on their ID:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"},'exposed Function getCustomerDetails(customerID : Integer) : cs.CustomerEntity\n    return ds.Customer.query("ID = :1", customerID).first()\n')),(0,r.kt)("p",null,"In this example, the ",(0,r.kt)("inlineCode",{parentName:"p"},"getCustomerDetails")," function is exposed and can be called via the REST API to fetch details of a specific customer."),(0,r.kt)("h3",{id:"step-2-calling-the-function-via-rest-api"},"Step 2: Calling the Function via REST API"),(0,r.kt)("p",null,"To call the ",(0,r.kt)("inlineCode",{parentName:"p"},"getCustomerDetails"),' function for a customer with ID "123", you would use the following request:'),(0,r.kt)("h3",{id:"step-3-request"},"Step 3: Request"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Method:")," POST",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"URL:")," ",(0,r.kt)("inlineCode",{parentName:"p"},"{{ApiEndpoint}}/rest/Customer/getCustomerDetails")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Body:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},"[123]\n")),(0,r.kt)("h4",{id:"equivalent-code"},"Equivalent Code"),(0,r.kt)("p",null,"This call is equivalent to:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"},"customerDetails = ds.Customer.getCustomerDetails(123)\n")),(0,r.kt)("h3",{id:"step-4-sample-response"},"Step 4: Sample Response"),(0,r.kt)("p",null,"The response from the server would look something like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "__entityModel": "Customer",\n    "__DATACLASS": "Customer",\n    "__KEY": "123",\n    "__TIMESTAMP": "2024-05-23T18:11:34.485Z",\n    "__STAMP": &,\n    "ID": 123,\n    "firstName": "John",\n    "lastName": "Doe",\n    "email": "john.doe@example.com",\n    "orders": {\n        "__deferred": {\n            "uri": "/rest/Order?$filter=customerID=123",\n            "__COUNT": 5\n        }\n    },\n    "profilePicture": null\n}\n')),(0,r.kt)("h2",{id:"error-handling"},"Error Handling"),(0,r.kt)("p",null,"When making REST API calls to ORDA class functions, proper error handling should be implemented to manage cases where the function call fails or returns an unexpected result. "),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Ensure that your client application can gracefully handle errors and retries as necessary.")))}d.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([[1161],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>u});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(r),d=a,u=m["".concat(s,".").concat(d)]||m[d]||k[d]||o;return r?n.createElement(u,l(l({ref:t},c),{},{components:r})):n.createElement(u,l({ref:t},c))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[m]="string"==typeof e?e:a,l[1]=i;for(var p=2;p<o;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},73305:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var n=r(87462),a=(r(67294),r(3905));const o={id:"killWorker",title:"killWorker"},l=void 0,i={unversionedId:"language/commands/killWorker",id:"language/commands/killWorker",title:"killWorker",description:"killWorker()killWorker( process integer )",source:"@site/docs/language/commands/killWorker.md",sourceDirName:"language/commands",slug:"/language/commands/killWorker",permalink:"/docs/language/commands/killWorker",draft:!1,editUrl:"https://github.com/docQodly/docs/edit/main/docs/language/commands/killWorker.md",tags:[],version:"current",frontMatter:{id:"killWorker",title:"killWorker"},sidebar:"Develop",previous:{title:"jsonValidate",permalink:"/docs/language/commands/jsonValidate"},next:{title:"lastErrors",permalink:"/docs/language/commands/lastErrors"}},s={},p=[{value:"Description",id:"description",level:4},{value:"Example",id:"example",level:4},{value:"See also",id:"see-also",level:4}],c={toc:p};function m(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"killWorker"),"()",(0,a.kt)("br",null),(0,a.kt)("strong",{parentName:"p"},"killWorker"),"( ",(0,a.kt)("em",{parentName:"p"},"process")," : string )",(0,a.kt)("br",null),(0,a.kt)("strong",{parentName:"p"},"killWorker"),"( ",(0,a.kt)("em",{parentName:"p"},"process")," : integer )"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:"center"}),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"process"),(0,a.kt)("td",{parentName:"tr",align:null},"string ","|"," integer"),(0,a.kt)("td",{parentName:"tr",align:"center"},"->"),(0,a.kt)("td",{parentName:"tr",align:null},"Name or number of process to kill (current process if omitted)")))),(0,a.kt)("h4",{id:"description"},"Description"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"killWorker")," command posts a message to the worker process whose name or number you passed in ",(0,a.kt)("em",{parentName:"p"},"process"),", asking it to ignore any pending messages and to terminate its execution as soon as the current task ends."),(0,a.kt)("p",null,"This command can only be used with worker processes."),(0,a.kt)("p",null,"In ",(0,a.kt)("em",{parentName:"p"},"process"),", you pass either the name or number of the worker process whose execution needs to be terminated. If no worker with the specified process name or number exists, ",(0,a.kt)("inlineCode",{parentName:"p"},"killWorker")," does nothing."),(0,a.kt)("p",null,"If you do not pass any parameter, ",(0,a.kt)("inlineCode",{parentName:"p"},"killWorker")," applies to the currently running worker."),(0,a.kt)("p",null,"If ",(0,a.kt)("inlineCode",{parentName:"p"},"killWorker")," is applied to a worker that was not created explicitly using the ",(0,a.kt)("a",{parentName:"p",href:"/docs/language/commands/callWorker"},(0,a.kt)("inlineCode",{parentName:"a"},"callWorker"))," command, it only asks this worker to empty its message box."),(0,a.kt)("p",null,"If the ",(0,a.kt)("a",{parentName:"p",href:"/docs/language/commands/callWorker"},(0,a.kt)("inlineCode",{parentName:"a"},"callWorker"))," command is called to send a message to a worker that was just killed by ",(0,a.kt)("inlineCode",{parentName:"p"},"killWorker"),", a new process is started. To make sure that there is only one process running at a time for a worker, the new process will start after the previous one is actually terminated. Note however that if ",(0,a.kt)("a",{parentName:"p",href:"/docs/language/commands/callWorker"},(0,a.kt)("inlineCode",{parentName:"a"},"callWorker"))," is called from a worker to send itself a message whereas it has just been killed by ",(0,a.kt)("inlineCode",{parentName:"p"},"killWorker"),", the command does nothing."),(0,a.kt)("h4",{id:"example"},"Example"),(0,a.kt)("p",null,"The following code triggers the termination of a worker:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-qs"},'callWorker(vWorkerName,"theWorker","end")\n\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-qs"},'   //theWorker method\n\ndeclare (param : text)\nswitch\n    :(param == "call") //the worker is called\n       ... //do something\n    :(param == "end") //the worker is asked to kill itself\n      killWorker()\nend\n')),(0,a.kt)("h4",{id:"see-also"},"See also"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/language/commands/callWorker"},(0,a.kt)("inlineCode",{parentName:"a"},"callWorker")),(0,a.kt)("br",null),"\n",(0,a.kt)("a",{parentName:"p",href:"/docs/language/SignalClass"},(0,a.kt)("inlineCode",{parentName:"a"},"Signal")," class")))}m.isMDXComponent=!0}}]);
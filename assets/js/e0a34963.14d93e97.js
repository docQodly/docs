"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([[3403],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>N});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),m=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=m(e.components);return n.createElement(o.Provider,{value:t},e.children)},k="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),k=m(a),u=r,N=k["".concat(o,".").concat(u)]||k[u]||s[u]||l;return a?n.createElement(N,i(i({ref:t},d),{},{components:a})):n.createElement(N,i({ref:t},d))}));function N(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=u;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[k]="string"==typeof e?e:r,i[1]=p;for(var m=2;m<l;m++)i[m]=a[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},7848:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>k,frontMatter:()=>l,metadata:()=>p,toc:()=>m});var n=a(7462),r=(a(7294),a(3905));const l={id:"string",title:"String"},i=void 0,p={unversionedId:"language/string",id:"language/string",title:"String",description:"String is a generic term that stands for both text and string data types.",source:"@site/docs/language/string.md",sourceDirName:"language",slug:"/language/string",permalink:"/docs/language/string",draft:!1,editUrl:"https://github.com/docQodly/docs/edit/main/docs/language/string.md",tags:[],version:"current",frontMatter:{id:"string",title:"String"},sidebar:"QodlyScript",previous:{title:"Pathnames",permalink:"/docs/concepts/lang-pathnames"}},o={},m=[{value:"String Commands",id:"string-commands",level:2},{value:"Change string",id:"change-string",level:2},{value:"Description",id:"description",level:4},{value:"Example",id:"example",level:4},{value:"See also",id:"see-also",level:4},{value:"4D.File.new()",id:"4dfilenew",level:2},{value:"Description",id:"description-1",level:4},{value:".create()",id:"create",level:2},{value:"Description",id:"description-2",level:4},{value:"Example",id:"example-1",level:4},{value:".createAlias()",id:"createalias",level:2},{value:"Description",id:"description-3",level:4},{value:"Example",id:"example-2",level:4},{value:".delete()",id:"delete",level:2},{value:"Description",id:"description-4",level:4},{value:"Example",id:"example-3",level:4},{value:".getAppInfo()",id:"getappinfo",level:2},{value:"Description",id:"description-5",level:4},{value:"Example",id:"example-4",level:4},{value:"See also",id:"see-also-1",level:4},{value:".moveTo()",id:"moveto",level:2},{value:"Description",id:"description-6",level:4},{value:"Example",id:"example-5",level:4},{value:".open()",id:"open",level:2},{value:"Description",id:"description-7",level:4},{value:"Example",id:"example-6",level:4},{value:".rename()",id:"rename",level:2},{value:"Description",id:"description-8",level:4},{value:"Example",id:"example-7",level:4},{value:".setAppInfo()",id:"setappinfo",level:2},{value:"Description",id:"description-9",level:4},{value:"Example",id:"example-8",level:4},{value:"See also",id:"see-also-2",level:4},{value:".setContent()",id:"setcontent",level:2},{value:"Description",id:"description-10",level:4},{value:"Example",id:"example-9",level:4},{value:".setText()",id:"settext",level:2},{value:"Description",id:"description-11",level:4},{value:"Example",id:"example-10",level:4}],d={toc:m};function k(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"String")," is a generic term that stands for both ",(0,r.kt)("a",{parentName:"p",href:"/docs/concepts/lang-text"},(0,r.kt)("strong",{parentName:"a"},"text and string data types")),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"See also:")," "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/concepts/lang-text#string-operators"},(0,r.kt)("strong",{parentName:"a"},"String operators"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/concepts/lang-text#character-reference-symbols"},(0,r.kt)("strong",{parentName:"a"},"Character Reference Symbols")))),(0,r.kt)("h2",{id:"string-commands"},"String Commands"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#copyto"},(0,r.kt)("strong",{parentName:"a"},"Change string")," ( ",(0,r.kt)("em",{parentName:"a"},"source")," : Text , ",(0,r.kt)("em",{parentName:"a"},"newChars")," : Text , ",(0,r.kt)("em",{parentName:"a"},"where")," : Integer ) : Text"),"\xa0","\xa0","\xa0","\xa0","changes a group of characters in ",(0,r.kt)("em",{parentName:"td"},"source")," and returns the resulting string")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#create"},(0,r.kt)("strong",{parentName:"a"},".create()")," : Boolean "),"\xa0","\xa0","\xa0","\xa0","creates a file on disk according to the properties of the ",(0,r.kt)("inlineCode",{parentName:"td"},"File")," object")))),(0,r.kt)("h2",{id:"change-string"},"Change string"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Change string")," ( ",(0,r.kt)("em",{parentName:"p"},"source")," : Text , ",(0,r.kt)("em",{parentName:"p"},"newChars")," : Text , ",(0,r.kt)("em",{parentName:"p"},"where")," : Integer ) : Text"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"source"),(0,r.kt)("td",{parentName:"tr",align:null},"Text"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Original string")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"newChars"),(0,r.kt)("td",{parentName:"tr",align:null},"Text"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"New characters")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"where"),(0,r.kt)("td",{parentName:"tr",align:null},"Integer"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Where to start the changes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Result"),(0,r.kt)("td",{parentName:"tr",align:null},"Text"),(0,r.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"Resulting string")))),(0,r.kt)("h4",{id:"description"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Change string")," command changes a group of characters in ",(0,r.kt)("em",{parentName:"p"},"source")," and returns the resulting string. The command overlays ",(0,r.kt)("em",{parentName:"p"},"source"),", with the characters in ",(0,r.kt)("em",{parentName:"p"},"newChars"),", at the character described by ",(0,r.kt)("em",{parentName:"p"},"where"),"."),(0,r.kt)("p",null,"If ",(0,r.kt)("em",{parentName:"p"},"newChars"),' is an empty string (""), ',(0,r.kt)("inlineCode",{parentName:"p"},"Change string")," returns ",(0,r.kt)("em",{parentName:"p"},"source")," unchanged. ",(0,r.kt)("inlineCode",{parentName:"p"},"Change string")," always returns a string of the same length as ",(0,r.kt)("inlineCode",{parentName:"p"},"source"),". If ",(0,r.kt)("em",{parentName:"p"},"where")," is less than one or greater than the length of ",(0,r.kt)("em",{parentName:"p"},"source"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Change string")," returns ",(0,r.kt)("em",{parentName:"p"},"source"),"."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Change string")," is different from ",(0,r.kt)("a",{parentName:"p",href:"#insert-string"},(0,r.kt)("inlineCode",{parentName:"a"},"Insert string"))," in that it overwrites characters instead of inserting them."),(0,r.kt)("h4",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-4d"},'var vtResult : Text\nvtResult=Change string("Acme","CME",2) //vtResult gets "ACME"\nvtResult=Change string("November","Dec",1) //vtResult gets "December"\n\n')),(0,r.kt)("h4",{id:"see-also"},"See also"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#delete-string"},(0,r.kt)("inlineCode",{parentName:"a"},"Delete string")),(0,r.kt)("br",null),"\n",(0,r.kt)("a",{parentName:"p",href:"#insert-string"},(0,r.kt)("inlineCode",{parentName:"a"},"Insert string")),(0,r.kt)("br",null),"\n",(0,r.kt)("a",{parentName:"p",href:"#replace-string"},(0,r.kt)("inlineCode",{parentName:"a"},"Replace string"))),(0,r.kt)("h2",{id:"4dfilenew"},"4D.File.new()"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"History"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Version"),(0,r.kt)("th",{parentName:"tr",align:null},"Changes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"v18 R6"),(0,r.kt)("td",{parentName:"tr",align:null},"Added"))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"4D.File.new")," ( ",(0,r.kt)("em",{parentName:"p"},"path")," : Text { ; ",(0,r.kt)("em",{parentName:"p"},"pathType")," : Integer }{ ; ",(0,r.kt)("em",{parentName:"p"}," } ) : 4D.File",(0,r.kt)("br",null),(0,r.kt)("strong",{parentName:"em"},"4D.File.new")," ( "),"fileConstant",(0,r.kt)("em",{parentName:"p"}," : Integer { ; ")," } ) : 4D.File"),(0,r.kt)("h4",{id:"description-1"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"4D.File.new()")," function creates and returns a new object of the ",(0,r.kt)("inlineCode",{parentName:"p"},"4D.File")," type. It is identical to the ",(0,r.kt)("a",{parentName:"p",href:"#file"},(0,r.kt)("inlineCode",{parentName:"a"},"File"))," command (shortcut)."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"It is recommended to use the ",(0,r.kt)("a",{parentName:"p",href:"#file"},(0,r.kt)("inlineCode",{parentName:"a"},"File"))," shortcut command instead of ",(0,r.kt)("inlineCode",{parentName:"p"},"4D.File.new()"),".")),(0,r.kt)("h2",{id:"create"},".create()"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"History"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Version"),(0,r.kt)("th",{parentName:"tr",align:null},"Changes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"v17 R5"),(0,r.kt)("td",{parentName:"tr",align:null},"Added"))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Not available for ZIP archives")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},".create()")," : Boolean "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Result"),(0,r.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"True if the file was created successfully, false otherwise")))),(0,r.kt)("h4",{id:"description-2"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},".create()")," function creates a file on disk according to the properties of the ",(0,r.kt)("inlineCode",{parentName:"p"},"File")," object."),(0,r.kt)("p",null,"If necessary, the function creates the folder hierachy as described in the ",(0,r.kt)("a",{parentName:"p",href:"#platformpath"},"platformPath")," or ",(0,r.kt)("a",{parentName:"p",href:"#path"},"path")," properties. If the file already exists on disk, the function does nothing (no error is thrown) and returns false."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returned value")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"True")," if the file is created successfully;"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"False")," if a file with the same name already exists or if an error occured.")),(0,r.kt)("h4",{id:"example-1"},"Example"),(0,r.kt)("p",null,"Creation of a preferences file in the database folder:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-4d"},' var $created : Boolean\n $created:=File("/PACKAGE/SpecialPrefs/"+Current user+".myPrefs").create()\n')),(0,r.kt)("h2",{id:"createalias"},".createAlias()"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"History"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Version"),(0,r.kt)("th",{parentName:"tr",align:null},"Changes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"v17 R5"),(0,r.kt)("td",{parentName:"tr",align:null},"Added"))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},".createAlias"),"( ",(0,r.kt)("em",{parentName:"p"},"destinationFolder")," : 4D.Folder ; ",(0,r.kt)("em",{parentName:"p"},"aliasName")," : Text { ; ",(0,r.kt)("em",{parentName:"p"},"aliasType")," : Integer } ) : 4D.File"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"destinationFolder"),(0,r.kt)("td",{parentName:"tr",align:null},"4D.Folder"),(0,r.kt)("td",{parentName:"tr",align:null},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Destination folder for the alias or shortcut")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"aliasName"),(0,r.kt)("td",{parentName:"tr",align:null},"Text"),(0,r.kt)("td",{parentName:"tr",align:null},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the alias or shortcut")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"aliasType"),(0,r.kt)("td",{parentName:"tr",align:null},"Integer"),(0,r.kt)("td",{parentName:"tr",align:null},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Type of the alias link")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Result"),(0,r.kt)("td",{parentName:"tr",align:null},"4D.File"),(0,r.kt)("td",{parentName:"tr",align:null},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"Alias or shortcut file reference")))),(0,r.kt)("h4",{id:"description-3"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},".createAlias()")," function creates an alias (macOS) or a shortcut (Windows) to the file with the specified ",(0,r.kt)("em",{parentName:"p"},"aliasName")," name in the folder designated by the ",(0,r.kt)("em",{parentName:"p"},"destinationFolder")," object."),(0,r.kt)("p",null,"Pass the name of the alias or shortcut to create in the ",(0,r.kt)("em",{parentName:"p"},"aliasName")," parameter."),(0,r.kt)("p",null,"By default on macOS, the function creates a standard alias. You can also create a symbolic link by using the ",(0,r.kt)("em",{parentName:"p"},"aliasType")," parameter. The following constants are available:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Constant"),(0,r.kt)("th",{parentName:"tr",align:null},"Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Comment"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"fk alias link")),(0,r.kt)("td",{parentName:"tr",align:null},"0"),(0,r.kt)("td",{parentName:"tr",align:null},"Alias link (default)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"fk symbolic link")),(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"Symbolic link (macOS only)")))),(0,r.kt)("p",null,"On Windows, a shortcut (.lnk file) is always created (the ",(0,r.kt)("em",{parentName:"p"},"aliasType")," parameter is ignored)."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returned object")),(0,r.kt)("p",null,"A ",(0,r.kt)("inlineCode",{parentName:"p"},"4D.File")," object with the ",(0,r.kt)("inlineCode",{parentName:"p"},"isAlias")," property set to ",(0,r.kt)("strong",{parentName:"p"},"true"),"."),(0,r.kt)("h4",{id:"example-2"},"Example"),(0,r.kt)("p",null,"You want to create an alias to a file in your database folder:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-4d"},' $myFile:=Folder(fk documents folder).file("Archives/ReadMe.txt")\n $aliasFile:=$myFile.createAlias(File("/PACKAGE");"ReadMe")\n')),(0,r.kt)("h2",{id:"delete"},".delete()"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"History"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Version"),(0,r.kt)("th",{parentName:"tr",align:null},"Changes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"v17 R5"),(0,r.kt)("td",{parentName:"tr",align:null},"Added"))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},".delete( )")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Does not require any parameters")))),(0,r.kt)("h4",{id:"description-4"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},".delete()")," function deletes the file."),(0,r.kt)("p",null,"If the file is currently open, an error is generated."),(0,r.kt)("p",null,"If the file does not exist on disk, the function does nothing (no error is generated)."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"WARNING"),": ",(0,r.kt)("inlineCode",{parentName:"p"},".delete( )")," can delete any file on a disk. This includes documents created with other applications, as well as the applications themselves. ",(0,r.kt)("inlineCode",{parentName:"p"},".delete( )")," should be used with extreme caution. Deleting a file is a permanent operation and cannot be undone.")),(0,r.kt)("h4",{id:"example-3"},"Example"),(0,r.kt)("p",null,"You want to delete a specific file in the database folder:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-4d"},' $tempo:=File("/PACKAGE/SpecialPrefs/"+Current user+".prefs")\n If($tempo.exists)\n    $tempo.delete()\n    ALERT("User preference file deleted.")\n End if\n')),(0,r.kt)("h2",{id:"getappinfo"},".getAppInfo()"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"History"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Version"),(0,r.kt)("th",{parentName:"tr",align:null},"Changes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"v19"),(0,r.kt)("td",{parentName:"tr",align:null},"Added"))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},".getAppInfo"),"() : Object"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Result"),(0,r.kt)("td",{parentName:"tr",align:null},"Object"),(0,r.kt)("td",{parentName:"tr",align:null},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"Contents of .exe/.dll version resource or .plist file")))),(0,r.kt)("h4",{id:"description-5"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},".getAppInfo()")," function returns the contents of a ",(0,r.kt)("strong",{parentName:"p"},".exe"),", ",(0,r.kt)("strong",{parentName:"p"},".dll")," or ",(0,r.kt)("strong",{parentName:"p"},".plist")," file information as an object."),(0,r.kt)("p",null,"The function must be used with an existing .exe, .dll or .plist file. If the file does not exist on disk or is not a valid .exe, .dll or .plist file, the function returns an empty object (no error is generated)."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The function only supports .plist files in xml format (text-based). An error is returned if it is used with a .plist file in binary format.  ")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returned object with a .exe or .dll file")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Reading a .exe or .dll is only possible on Windows.")),(0,r.kt)("p",null,"All property values are Text."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"InternalName"),(0,r.kt)("td",{parentName:"tr",align:null},"Text")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ProductName"),(0,r.kt)("td",{parentName:"tr",align:null},"Text")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"CompanyName"),(0,r.kt)("td",{parentName:"tr",align:null},"Text")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"LegalCopyright"),(0,r.kt)("td",{parentName:"tr",align:null},"Text")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ProductVersion"),(0,r.kt)("td",{parentName:"tr",align:null},"Text")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"FileDescription"),(0,r.kt)("td",{parentName:"tr",align:null},"Text")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"FileVersion"),(0,r.kt)("td",{parentName:"tr",align:null},"Text")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OriginalFilename"),(0,r.kt)("td",{parentName:"tr",align:null},"Text")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returned object with a .plist file")),(0,r.kt)("p",null,"The xml file contents is parsed and keys are returned as properties of the object, preserving their types (text, boolean, number). ",(0,r.kt)("inlineCode",{parentName:"p"},".plist dict")," is returned as a JSON object and ",(0,r.kt)("inlineCode",{parentName:"p"},".plist array")," is returned as a JSON array."),(0,r.kt)("h4",{id:"example-4"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-4d"},' // display copyright info of application .exe file (windows)\nvar $exeFile : 4D.File\nvar $info : Object\n$exeFile:=File(Application file; fk platform path)\n$info:=$exeFile.getAppInfo()\nALERT($info.LegalCopyright)\n\n  // display copyright info of an info.plist (any platform)\nvar $infoPlistFile : 4D.File\nvar $info : Object\n$infoPlistFile:=File("/RESOURCES/info.plist")\n$info:=$infoPlistFile.getAppInfo()\nALERT($info.Copyright)\n')),(0,r.kt)("h4",{id:"see-also-1"},"See also"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#setappinfo"},".setAppInfo()")),(0,r.kt)("h2",{id:"moveto"},".moveTo()"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"History"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Version"),(0,r.kt)("th",{parentName:"tr",align:null},"Changes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"v17 R5"),(0,r.kt)("td",{parentName:"tr",align:null},"Added"))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},".moveTo"),"( ",(0,r.kt)("em",{parentName:"p"},"destinationFolder")," : 4D.Folder { ; ",(0,r.kt)("em",{parentName:"p"},"newName")," : Text } ) : 4D.File"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"destinationFolder"),(0,r.kt)("td",{parentName:"tr",align:null},"4D.Folder"),(0,r.kt)("td",{parentName:"tr",align:null},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Destination folder")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"newName"),(0,r.kt)("td",{parentName:"tr",align:null},"Text"),(0,r.kt)("td",{parentName:"tr",align:null},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Full name for the moved file")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Result"),(0,r.kt)("td",{parentName:"tr",align:null},"4D.File"),(0,r.kt)("td",{parentName:"tr",align:null},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"Moved file")))),(0,r.kt)("h4",{id:"description-6"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},".moveTo()")," function moves or renames the ",(0,r.kt)("inlineCode",{parentName:"p"},"File")," object into the specified ",(0,r.kt)("em",{parentName:"p"},"destinationFolder"),"."),(0,r.kt)("p",null,"The ",(0,r.kt)("em",{parentName:"p"},"destinationFolder")," must exist on disk, otherwise an error is generated.  "),(0,r.kt)("p",null,"By default, the file retains its name when moved. If you want to rename the moved file, pass the new full name in the ",(0,r.kt)("em",{parentName:"p"},"newName"),' parameter. The new name must comply with naming rules (e.g., it must not contain characters such as ":", "/", etc.), otherwise an error is returned.'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returned object")),(0,r.kt)("p",null,"The moved ",(0,r.kt)("inlineCode",{parentName:"p"},"File")," object."),(0,r.kt)("h4",{id:"example-5"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-4d"},'$DocFolder:=Folder(fk documents folder)\n$myFile:=$DocFolder.file("Current/Infos.txt")\n$myFile.moveTo($DocFolder.folder("Archives");"Infos_old.txt")\n')),(0,r.kt)("h2",{id:"open"},".open()"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"History"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Version"),(0,r.kt)("th",{parentName:"tr",align:null},"Changes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"v19 R7"),(0,r.kt)("td",{parentName:"tr",align:null},"Added"))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},".open"),"( { ",(0,r.kt)("em",{parentName:"p"},"mode")," : Text } ) : 4D.FileHandle",(0,r.kt)("br",null),(0,r.kt)("strong",{parentName:"p"},".open"),"( { ",(0,r.kt)("em",{parentName:"p"},"options")," : Object } ) : 4D.FileHandle"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"mode"),(0,r.kt)("td",{parentName:"tr",align:null},"Text"),(0,r.kt)("td",{parentName:"tr",align:null},"->"),(0,r.kt)("td",{parentName:"tr",align:null},'Opening mode: "read", "write", "append"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},"Object"),(0,r.kt)("td",{parentName:"tr",align:null},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Opening options")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Result"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"FileHandleClass"},"4D.FileHandle")),(0,r.kt)("td",{parentName:"tr",align:null},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"New File handle object")))),(0,r.kt)("h4",{id:"description-7"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},".open()")," function creates and returns a new ",(0,r.kt)("a",{parentName:"p",href:"FileHandleClass"},"4D.FileHandle")," object on the file, in the specified ",(0,r.kt)("em",{parentName:"p"},"mode")," or with the specified ",(0,r.kt)("em",{parentName:"p"},"options"),". You can use functions and properties of the ",(0,r.kt)("a",{parentName:"p",href:"FileHandleClass"},"4D.FileHandle")," class to write, read, or append contents to the file."),(0,r.kt)("p",null,"If you use the ",(0,r.kt)("em",{parentName:"p"},"mode")," (text) parameter, pass the opening mode for the file handle:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"th"},"mode")),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},'"read"'),(0,r.kt)("td",{parentName:"tr",align:null},'(Default) Creates a file handle to read values from the file. If the file does not exist on disk, an error is returned. You can open as many file handles as you want in "read" mode on the same File object.')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},'"write"'),(0,r.kt)("td",{parentName:"tr",align:null},'Creates a file handle to write values to the file (starting at the beginning of the file content). If the file does not exist on disk, it is created. You can open only one file handle in "write" mode on the same File object.')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},'"append"'),(0,r.kt)("td",{parentName:"tr",align:null},'Creates a file handle to write values to the file (starting at the end of the file content). If the file does not exist on disk, it is created. You can open only one file handle in "append" mode on the same File object.')))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The ",(0,r.kt)("em",{parentName:"p"},"mode")," value is case sensitive.")),(0,r.kt)("p",null,"If you use the ",(0,r.kt)("em",{parentName:"p"},"options")," (object) parameter, you can pass more options for the file handle through the following properties (these properties can be read afterwards from the opened ",(0,r.kt)("a",{parentName:"p",href:"FileHandleClass"},"file handle object"),"):"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"th"},"options")),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},".mode")),(0,r.kt)("td",{parentName:"tr",align:null},"Text"),(0,r.kt)("td",{parentName:"tr",align:null},"Opening mode (see ",(0,r.kt)("em",{parentName:"td"},"mode")," above)"),(0,r.kt)("td",{parentName:"tr",align:null},'"read"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},".charset")),(0,r.kt)("td",{parentName:"tr",align:null},"Text"),(0,r.kt)("td",{parentName:"tr",align:null},'Charset used when reading from or writing to the file. Use the standard name of the set (for example "ISO-8859-1" or "UTF-8")'),(0,r.kt)("td",{parentName:"tr",align:null},'"UTF-8"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},".breakModeRead")),(0,r.kt)("td",{parentName:"tr",align:null},"Text or Number"),(0,r.kt)("td",{parentName:"tr",align:null},"Processing mode for line breaks used when reading in the file (see below)"),(0,r.kt)("td",{parentName:"tr",align:null},'"native" or 1')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},".breakModeWrite")),(0,r.kt)("td",{parentName:"tr",align:null},"Text or Number"),(0,r.kt)("td",{parentName:"tr",align:null},"Processing mode for line breaks used when writing to the file (see below)"),(0,r.kt)("td",{parentName:"tr",align:null},'"native" or 1')))),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},".breakModeRead")," and ",(0,r.kt)("inlineCode",{parentName:"p"},".breakModeWrite")," indicate the processing to apply to end-of-line characters in the document. You can use one of the following values (text or number):"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Break mode as text"),(0,r.kt)("th",{parentName:"tr",align:null},"Break mode as number (constant)"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},'"native"'),(0,r.kt)("td",{parentName:"tr",align:null},"1 (",(0,r.kt)("inlineCode",{parentName:"td"},"Document with native format"),")"),(0,r.kt)("td",{parentName:"tr",align:null},"(Default) Line breaks are converted to the native format of the operating system: LF (line feed) under macOS, CRLF (carriage return + line feed) under Windows")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},'"crlf"'),(0,r.kt)("td",{parentName:"tr",align:null},"2 (",(0,r.kt)("inlineCode",{parentName:"td"},"Document with CRLF"),")"),(0,r.kt)("td",{parentName:"tr",align:null},"Line breaks are converted to CRLF (carriage return + line feed), the default Windows format")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},'"cr"'),(0,r.kt)("td",{parentName:"tr",align:null},"3 (",(0,r.kt)("inlineCode",{parentName:"td"},"Document with CR"),")"),(0,r.kt)("td",{parentName:"tr",align:null},"Line breaks are converted to CR (carriage return), the default Classic Mac OS format")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},'"lf"'),(0,r.kt)("td",{parentName:"tr",align:null},"4 (",(0,r.kt)("inlineCode",{parentName:"td"},"Document with LF"),")"),(0,r.kt)("td",{parentName:"tr",align:null},"Line breaks are converted to LF (line feed), the default Unix and macOS format")))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The ",(0,r.kt)("em",{parentName:"p"},"break mode as text")," value is case sensitive.")),(0,r.kt)("h4",{id:"example-6"},"Example"),(0,r.kt)("p",null,'You want to create a file handle for reading the "ReadMe.txt" file:'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-4d"},'var $f : 4D.File\nvar $fhandle : 4D.FileHandle\n\n$f:=File("C:\\\\Documents\\\\Archives\\\\ReadMe.txt";fk platform path)\n$fhandle:=$f.open("read")\n\n')),(0,r.kt)("h2",{id:"rename"},".rename()"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"History"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Version"),(0,r.kt)("th",{parentName:"tr",align:null},"Changes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"v17 R5"),(0,r.kt)("td",{parentName:"tr",align:null},"Added"))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},".rename"),"( ",(0,r.kt)("em",{parentName:"p"},"newName")," : Text ) : 4D.File"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"newName"),(0,r.kt)("td",{parentName:"tr",align:null},"Text"),(0,r.kt)("td",{parentName:"tr",align:null},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"New full name for the file")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Result"),(0,r.kt)("td",{parentName:"tr",align:null},"4D.File"),(0,r.kt)("td",{parentName:"tr",align:null},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"Renamed file")))),(0,r.kt)("h4",{id:"description-8"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},".rename()")," function renames the file with the name you passed in ",(0,r.kt)("em",{parentName:"p"},"newName")," and returns the renamed ",(0,r.kt)("inlineCode",{parentName:"p"},"File")," object."),(0,r.kt)("p",null,"The ",(0,r.kt)("em",{parentName:"p"},"newName"),' parameter must comply with naming rules (e.g., it must not contain characters such as ":", "/", etc.), otherwise an error is returned. If a file with the same name already exists, an error is returned.'),(0,r.kt)("p",null,"Note that the function modifies the full name of the file, i.e. if you do not pass an extension in ",(0,r.kt)("em",{parentName:"p"},"newName"),", the file will have a name without an extension."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returned object")),(0,r.kt)("p",null,"The renamed ",(0,r.kt)("inlineCode",{parentName:"p"},"File")," object."),(0,r.kt)("h4",{id:"example-7"},"Example"),(0,r.kt)("p",null,'You want to rename "ReadMe.txt" in "ReadMe_new.txt":'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-4d"},' $toRename:=File("C:\\\\Documents\\\\Archives\\\\ReadMe.txt";fk platform path)\n $newName:=$toRename.rename($toRename.name+"_new"+$toRename.extension)\n')),(0,r.kt)("h2",{id:"setappinfo"},".setAppInfo()"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"History"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Version"),(0,r.kt)("th",{parentName:"tr",align:null},"Changes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"v19"),(0,r.kt)("td",{parentName:"tr",align:null},"Added"))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},".setAppInfo"),"( ",(0,r.kt)("em",{parentName:"p"},"info")," : Object )"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"info"),(0,r.kt)("td",{parentName:"tr",align:null},"Object"),(0,r.kt)("td",{parentName:"tr",align:null},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Properties to write in .exe/.dll version resource or .plist file")))),(0,r.kt)("h4",{id:"description-9"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},".setAppInfo()")," function writes the ",(0,r.kt)("em",{parentName:"p"},"info")," properties as information contents of a ",(0,r.kt)("strong",{parentName:"p"},".exe"),", ",(0,r.kt)("strong",{parentName:"p"},".dll")," or ",(0,r.kt)("strong",{parentName:"p"},".plist")," file."),(0,r.kt)("p",null,"The function must be used with an existing .exe, .dll or .plist file. If the file does not exist on disk or is not a valid .exe, .dll or .plist file, the function does nothing (no error is generated)."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The function only supports .plist files in xml format (text-based). An error is returned if it is used with a .plist file in binary format.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"info")," parameter object with a .exe or .dll file")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Writing a .exe or .dll file information is only possible on Windows.")),(0,r.kt)("p",null,"Each valid property set in the ",(0,r.kt)("em",{parentName:"p"},"info")," object parameter is written in the version resource of the .exe or .dll file. Available properties are (any other property will be ignored):"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"InternalName"),(0,r.kt)("td",{parentName:"tr",align:null},"Text")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ProductName"),(0,r.kt)("td",{parentName:"tr",align:null},"Text")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"CompanyName"),(0,r.kt)("td",{parentName:"tr",align:null},"Text")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"LegalCopyright"),(0,r.kt)("td",{parentName:"tr",align:null},"Text")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ProductVersion"),(0,r.kt)("td",{parentName:"tr",align:null},"Text")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"FileDescription"),(0,r.kt)("td",{parentName:"tr",align:null},"Text")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"FileVersion"),(0,r.kt)("td",{parentName:"tr",align:null},"Text")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OriginalFilename"),(0,r.kt)("td",{parentName:"tr",align:null},"Text")))),(0,r.kt)("p",null,"If you pass a null or empty text as value, an empty string is written in the property. If you pass a value type different from text, it is stringified."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"info")," parameter object with a .plist file")),(0,r.kt)("p",null,"Each valid property set in the ",(0,r.kt)("em",{parentName:"p"},"info")," object parameter is written in the .plist file as a key. Any key name is accepted. Value types are preserved when possible."),(0,r.kt)("p",null,"If a key set in the ",(0,r.kt)("em",{parentName:"p"},"info")," parameter is already defined in the .plist file, its value is updated while keeping its original type. Other existing keys in the .plist file are left untouched.  "),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},'To define a Date type value, the format to use is a json timestamp string formated in ISO UTC without milliseconds ("2003-02-01T01:02:03Z") like in the Xcode plist editor.')),(0,r.kt)("h4",{id:"example-8"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-4d"},'  // set copyright and version of a .exe file (Windows)\nvar $exeFile : 4D.File\nvar $info : Object\n$exeFile:=File(Application file; fk platform path)\n$info:=New object\n$info.LegalCopyright:="Copyright 4D 2021"\n$info.ProductVersion:="1.0.0"\n$exeFile.setAppInfo($info)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-4d"},'  // set some keys in an info.plist file (all platforms)\nvar $infoPlistFile : 4D.File\nvar $info : Object\n$infoPlistFile:=File("/RESOURCES/info.plist")\n$info:=New object\n$info.Copyright:="Copyright 4D 2021" //text\n$info.ProductVersion:=12 //integer\n$info.ShipmentDate:="2021-04-22T06:00:00Z" //timestamp\n$infoPlistFile.setAppInfo($info)\n')),(0,r.kt)("h4",{id:"see-also-2"},"See also"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#getappinfo"},".getAppInfo()")),(0,r.kt)("h2",{id:"setcontent"},".setContent()"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"History"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Version"),(0,r.kt)("th",{parentName:"tr",align:null},"Changes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"v17 R5"),(0,r.kt)("td",{parentName:"tr",align:null},"Added"))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},".setContent")," ( ",(0,r.kt)("em",{parentName:"p"},"content")," : Blob ) "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"content"),(0,r.kt)("td",{parentName:"tr",align:null},"BLOB"),(0,r.kt)("td",{parentName:"tr",align:null},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"New contents for the file")))),(0,r.kt)("h4",{id:"description-10"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},".setContent( )")," function rewrites the entire content of the file using the data stored in the ",(0,r.kt)("em",{parentName:"p"},"content")," BLOB. For information on BLOBs, please refer to the ",(0,r.kt)("a",{parentName:"p",href:"Concepts/dt_blob.md"},"BLOB")," section."),(0,r.kt)("h4",{id:"example-9"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-4d"},' $myFile:=Folder(fk documents folder).file("Archives/data.txt")\n $myFile.setContent([aTable]aBlobField)\n')),(0,r.kt)("h2",{id:"settext"},".setText()"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"History"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Version"),(0,r.kt)("th",{parentName:"tr",align:null},"Changes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"v19 R3"),(0,r.kt)("td",{parentName:"tr",align:null},"Default for new projects: no BOM and (macOS) LF for EOL")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"v17 R5"),(0,r.kt)("td",{parentName:"tr",align:null},"Added"))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},".setText")," ( ",(0,r.kt)("em",{parentName:"p"},"text")," : Text {; ",(0,r.kt)("em",{parentName:"p"},"charSetName")," : Text { ; ",(0,r.kt)("em",{parentName:"p"},"breakMode")," : Integer } } )",(0,r.kt)("br",null),(0,r.kt)("strong",{parentName:"p"},".setText")," ( ",(0,r.kt)("em",{parentName:"p"},"text")," : Text {; ",(0,r.kt)("em",{parentName:"p"},"charSetNum")," : Integer { ; ",(0,r.kt)("em",{parentName:"p"},"breakMode")," : Integer } } )"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:null},"Text"),(0,r.kt)("td",{parentName:"tr",align:null},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Text to store in the file")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"charSetName"),(0,r.kt)("td",{parentName:"tr",align:null},"Text"),(0,r.kt)("td",{parentName:"tr",align:null},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Name of character set")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"charSetNum"),(0,r.kt)("td",{parentName:"tr",align:null},"Integer"),(0,r.kt)("td",{parentName:"tr",align:null},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Number of character set")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"breakMode"),(0,r.kt)("td",{parentName:"tr",align:null},"Integer"),(0,r.kt)("td",{parentName:"tr",align:null},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Processing mode for line breaks")))),(0,r.kt)("h4",{id:"description-11"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},".setText()")," function writes ",(0,r.kt)("em",{parentName:"p"},"text")," as the new contents of the file."),(0,r.kt)("p",null,"If the file referenced in the ",(0,r.kt)("inlineCode",{parentName:"p"},"File")," object does not exist on the disk, it is created by the function. When the file already exists on the disk, its prior contents are erased, except if it is already open, in which case, its contents are locked and an error is generated."),(0,r.kt)("p",null,"In ",(0,r.kt)("em",{parentName:"p"},"text"),', pass the text to write to the file. It can be a literal ("my text"), or a 4D text field or variable.'),(0,r.kt)("p",null,"Optionally, you can designate the character set to be used for writing the contents. You can pass either:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"in ",(0,r.kt)("em",{parentName:"li"},"charSetName"),', a string containing the standard set name (for example "ISO-8859-1" or "UTF-8"),'),(0,r.kt)("li",{parentName:"ul"},"or in ",(0,r.kt)("em",{parentName:"li"},"charSetNum"),", the MIBEnum ID (number) of the standard set name.")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"For the list of character sets supported by 4D, refer to the description of the ",(0,r.kt)("inlineCode",{parentName:"p"},"CONVERT FROM TEXT")," command.")),(0,r.kt)("p",null,'If a Byte Order Mark (BOM) exists for the character set, 4D inserts it into the file unless the character set used contains the suffix "-no-bom" (e.g. "UTF-8-no-bom"). If you do not specify a character set, by default 4D uses the "UTF-8" character set without BOM.'),(0,r.kt)("p",null,"In ",(0,r.kt)("em",{parentName:"p"},"breakMode"),", you can pass a number indicating the processing to apply to end-of-line characters before saving them in the file. The following constants, found in the ",(0,r.kt)("strong",{parentName:"p"},"System Documents")," theme, are available:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Constant"),(0,r.kt)("th",{parentName:"tr",align:null},"Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Comment"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Document unchanged")),(0,r.kt)("td",{parentName:"tr",align:null},"0"),(0,r.kt)("td",{parentName:"tr",align:null},"No processing")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Document with native format")),(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"(Default) Line breaks are converted to the native format of the operating system: LF (line feed) on macOS, CRLF (carriage return + line feed) on Windows")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Document with CRLF")),(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"Line breaks are converted to CRLF (carriage return + line feed), the default Windows format")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Document with CR")),(0,r.kt)("td",{parentName:"tr",align:null},"3"),(0,r.kt)("td",{parentName:"tr",align:null},"Line breaks are converted to CR (carriage return), the default Classic Mac OS format")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Document with LF")),(0,r.kt)("td",{parentName:"tr",align:null},"4"),(0,r.kt)("td",{parentName:"tr",align:null},"Line breaks are converted to LF (line feed), the default Unix and macOS format")))),(0,r.kt)("p",null,"By default, when you omit the ",(0,r.kt)("em",{parentName:"p"},"breakMode")," parameter, line breaks are processed in native mode (1)."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Compatibility Note"),": Compatibility options are available for EOL and BOM management. See ",(0,r.kt)("a",{parentName:"p",href:"https://doc.4d.com/4dv19R/help/title/en/page3239.html"},"Compatibility page")," on doc.4d.com.")),(0,r.kt)("h4",{id:"example-10"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-4d"},'$myFile:=File("C:\\\\Documents\\\\Hello.txt";fk platform path)\n$myFile.setText("Hello world")\n')))}k.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([[8153],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>d});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},m=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),u=p(r),g=a,d=u["".concat(l,".").concat(g)]||u[g]||c[g]||i;return r?n.createElement(d,s(s({ref:t},m),{},{components:r})):n.createElement(d,s({ref:t},m))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,s=new Array(i);s[0]=g;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[u]="string"==typeof e?e:a,s[1]=o;for(var p=2;p<i;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},54732:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var n=r(87462),a=(r(67294),r(3905));const i={id:"substring",title:"substring"},s=void 0,o={unversionedId:"language/commands/substring",id:"language/commands/substring",title:"substring",description:"substring ( source integer , numChars string",source:"@site/docs/language/commands/substring.md",sourceDirName:"language/commands",slug:"/language/commands/substring",permalink:"/docs/language/commands/substring",draft:!1,editUrl:"https://github.com/docQodly/docs/edit/main/docs/language/commands/substring.md",tags:[],version:"current",frontMatter:{id:"substring",title:"substring"},sidebar:"Develop",previous:{title:"string",permalink:"/docs/language/commands/string"},next:{title:"tan",permalink:"/docs/language/commands/tan"}},l={},p=[{value:"Description",id:"description",level:4},{value:"Example",id:"example",level:4},{value:"See also",id:"see-also",level:4}],m={toc:p};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"substring")," ( ",(0,a.kt)("em",{parentName:"p"},"source")," : string , ",(0,a.kt)("em",{parentName:"p"},"firstChar")," : integer , ",(0,a.kt)("em",{parentName:"p"},"numChars")," : integer ) : string "),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:"center"}),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"source"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:"center"},"->"),(0,a.kt)("td",{parentName:"tr",align:null},"String from which to get substring")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"firstChar"),(0,a.kt)("td",{parentName:"tr",align:null},"integer"),(0,a.kt)("td",{parentName:"tr",align:"center"},"->"),(0,a.kt)("td",{parentName:"tr",align:null},"Position of first character")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"numChars"),(0,a.kt)("td",{parentName:"tr",align:null},"integer"),(0,a.kt)("td",{parentName:"tr",align:"center"},"->"),(0,a.kt)("td",{parentName:"tr",align:null},"Number of characters to get")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Result"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,a.kt)("td",{parentName:"tr",align:null},"Substring of source")))),(0,a.kt)("h4",{id:"description"},"Description"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"substring")," command returns the portion of source defined by ",(0,a.kt)("em",{parentName:"p"},"firstChar")," and ",(0,a.kt)("em",{parentName:"p"},"numChars"),"."),(0,a.kt)("p",null,"The ",(0,a.kt)("em",{parentName:"p"},"firstChar")," parameter points to the first character in the string to return, and ",(0,a.kt)("em",{parentName:"p"},"numChars")," specifies how many characters to return."),(0,a.kt)("p",null,"If ",(0,a.kt)("em",{parentName:"p"},"firstChar")," plus ",(0,a.kt)("em",{parentName:"p"},"numChars")," is greater than the number of characters in the string, or if ",(0,a.kt)("em",{parentName:"p"},"numChars")," is not specified, ",(0,a.kt)("inlineCode",{parentName:"p"},"substring")," returns the last character(s) in the string, starting with the character specified by ",(0,a.kt)("em",{parentName:"p"},"firstChar"),". If ",(0,a.kt)("em",{parentName:"p"},"firstChar")," is greater than the number of characters in the string, ",(0,a.kt)("inlineCode",{parentName:"p"},"substring"),' returns an empty string ("").'),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"When you use this command in a multi-style context, you need to convert any Window end-of-line characters ('\\r\\n') into single ('\\r') characters in order for processing to be valid. This is due to the mechanism which normalizes Qodly line endings to ensure multi-platform compatibility for texts.")),(0,a.kt)("h4",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-qs"},' var vsResult : string\n vsResult = substring("08/04/62",4,2) // "04"\n vsResult = substring("Emergency",1,6) // "Emerge"\n vsResult = substring(var,2) // all characters except the first\n')),(0,a.kt)("h4",{id:"see-also"},"See also"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/language/commands/position"},(0,a.kt)("inlineCode",{parentName:"a"},"position"))))}u.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([[7697],{3905:(t,e,a)=>{a.d(e,{Zo:()=>s,kt:()=>k});var n=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function l(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},i=Object.keys(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var u=n.createContext({}),p=function(t){var e=n.useContext(u),a=e;return t&&(a="function"==typeof t?t(e):l(l({},e),t)),a},s=function(t){var e=p(t.components);return n.createElement(u.Provider,{value:e},t.children)},m="mdxType",c={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},d=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,i=t.originalType,u=t.parentName,s=o(t,["components","mdxType","originalType","parentName"]),m=p(a),d=r,k=m["".concat(u,".").concat(d)]||m[d]||c[d]||i;return a?n.createElement(k,l(l({ref:e},s),{},{components:a})):n.createElement(k,l({ref:e},s))}));function k(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=a.length,l=new Array(i);l[0]=d;var o={};for(var u in e)hasOwnProperty.call(e,u)&&(o[u]=e[u]);o.originalType=t,o[m]="string"==typeof t?t:r,l[1]=o;for(var p=2;p<i;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},85343:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>u,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const i={id:"$compute",title:"$compute"},l=void 0,o={unversionedId:"api/$compute",id:"api/$compute",title:"$compute",description:"Functionality",source:"@site/docs/api/$compute.md",sourceDirName:"api",slug:"/api/$compute",permalink:"/docs/api/$compute",draft:!1,editUrl:"https://github.com/docQodly/docs/edit/main/docs/api/$compute.md",tags:[],version:"current",frontMatter:{id:"$compute",title:"$compute"},sidebar:"API",previous:{title:"$binary",permalink:"/docs/api/$binary"},next:{title:"$distinct",permalink:"/docs/api/$distinct"}},u={},p=[{value:"Functionality",id:"functionality",level:2},{value:"Definition",id:"definition",level:3},{value:"Keywords",id:"keywords",level:3},{value:"Syntax",id:"syntax",level:3},{value:"Detailed Behavior",id:"detailed-behavior",level:2},{value:"Using <code>$compute=$all</code>",id:"using-computeall",level:3},{value:"Using Specific Keywords",id:"using-specific-keywords",level:3},{value:"Object Attributes",id:"object-attributes",level:3},{value:"Combining with Other Parameters",id:"combining-with-other-parameters",level:2},{value:"Use Cases",id:"use-cases",level:2},{value:"Get All Computations for a Numerical Attribute",id:"get-all-computations-for-a-numerical-attribute",level:3},{value:"Get All Computations for a String Attribute",id:"get-all-computations-for-a-string-attribute",level:3},{value:"Get All Computations for a Date Attribute",id:"get-all-computations-for-a-date-attribute",level:3},{value:"Get Sum of a Numerical Attribute",id:"get-sum-of-a-numerical-attribute",level:3},{value:"Get Count of a Numerical Attribute",id:"get-count-of-a-numerical-attribute",level:3},{value:"Best Practices",id:"best-practices",level:2}],s={toc:p};function m(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},s,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"functionality"},"Functionality"),(0,r.kt)("h3",{id:"definition"},"Definition"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"$compute")," endpoint allows you to perform calculations on attributes within a dataclass. This can be done on simple attributes or on properties of object attributes. The calculations are specified using various keywords."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"This is useful for obtaining statistical information such as sum, average, count, minimum, and maximum values for numerical attributes, and count, minimum, and maximum values for string attributes.")),(0,r.kt)("h3",{id:"keywords"},"Keywords"),(0,r.kt)("p",null,"The following keywords can be used with ",(0,r.kt)("inlineCode",{parentName:"p"},"$compute")," to perform different calculations:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Keyword"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"$all"),(0,r.kt)("td",{parentName:"tr",align:null},"A JSON object that defines all the functions for the attribute (average, count, min, max, and sum for numerical attributes, and count, min, and max for string attributes)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"average"),(0,r.kt)("td",{parentName:"tr",align:null},"Get the average of a numerical attribute")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"count"),(0,r.kt)("td",{parentName:"tr",align:null},"Get the total number of entries in the collection or dataclass (must specify an attribute)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"min"),(0,r.kt)("td",{parentName:"tr",align:null},"Get the minimum value of a numerical attribute or the lowest value of a string attribute")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"max"),(0,r.kt)("td",{parentName:"tr",align:null},"Get the maximum value of a numerical attribute or the highest value of a string attribute")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"sum"),(0,r.kt)("td",{parentName:"tr",align:null},"Get the sum of a numerical attribute")))),(0,r.kt)("h3",{id:"syntax"},"Syntax"),(0,r.kt)("p",null,"To perform a calculation on an attribute, you use the following format:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"GET /rest/{{dataClass}}/{{attribute}}?$compute={{keyword}}\n")),(0,r.kt)("p",null,"If you want to perform a calculation on an object attribute, specify one of its properties:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"GET /rest/{{dataClass}}/{{objectAttribute}}.{{property}}?$compute={{keyword}}\n")),(0,r.kt)("h2",{id:"detailed-behavior"},"Detailed Behavior"),(0,r.kt)("h3",{id:"using-computeall"},"Using ",(0,r.kt)("inlineCode",{parentName:"h3"},"$compute=$all")),(0,r.kt)("p",null,"When using ",(0,r.kt)("inlineCode",{parentName:"p"},"$compute=$all"),", the response includes all possible calculations for the attribute:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"For numerical attributes: count, sum, average, min, max")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"For string attributes: count, min, max")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"For date attributes: "))),(0,r.kt)("h3",{id:"using-specific-keywords"},"Using Specific Keywords"),(0,r.kt)("p",null,"You can specify a particular calculation by replacing ",(0,r.kt)("inlineCode",{parentName:"p"},"$all")," with one of the specific keywords (",(0,r.kt)("inlineCode",{parentName:"p"},"average"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"count"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"min"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"max"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"sum"),"). The response will then include only the result of the specified calculation."),(0,r.kt)("h3",{id:"object-attributes"},"Object Attributes"),(0,r.kt)("p",null,"If you need to perform calculations on a property of an object attribute, you must specify the property in the request URL. The calculation will be performed on the specified property."),(0,r.kt)("h2",{id:"combining-with-other-parameters"},"Combining with Other Parameters"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"$compute")," parameter can be combined with other parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"$filter"),": Narrow down the data set before computing values.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"$orderby"),": Sort the data before computing values.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"$top/$limit")," and ",(0,r.kt)("strong",{parentName:"p"},"$skip"),": Limit the number of records and skip a certain number of records.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"$expand"),": Include related data in the computation.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"$attributes"),": Specify which attributes to include in the response with computed values.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"$method=entityset"),": Create an entity set based on computed results and save it in the server's cache."))),(0,r.kt)("h2",{id:"use-cases"},"Use Cases"),(0,r.kt)("h3",{id:"get-all-computations-for-a-numerical-attribute"},"Get All Computations for a Numerical Attribute"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Request:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"GET /rest/Payments?$attributes=Amount&$compute=$all\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "Amount": {\n        "count": 20,\n        "sum": 12,\n        "average": 0.6,\n        "min": -128,\n        "max": 124\n    }\n}\n')),(0,r.kt)("h3",{id:"get-all-computations-for-a-string-attribute"},"Get All Computations for a String Attribute"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Request:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"GET /rest/Users?$attributes=Name&$compute=$all\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "Name": {\n        "count": 11,\n        "min": "Harry",\n        "max": "user8"\n    }\n}\n')),(0,r.kt)("h3",{id:"get-all-computations-for-a-date-attribute"},"Get All Computations for a Date Attribute"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Request:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"GET /rest/Payments?$attributes=PaymentDate&$compute=$all\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "PaymentDate": {\n        "count": 20,\n        "min": "2024-01-01T00:00:00.000Z",\n        "max": "2024-01-29T00:00:00.000Z"\n    }\n}\n')),(0,r.kt)("h3",{id:"get-sum-of-a-numerical-attribute"},"Get Sum of a Numerical Attribute"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Request:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"GET /rest/Payments?$attributes=Amount&$compute=sum\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},"12\n")),(0,r.kt)("h3",{id:"get-count-of-a-numerical-attribute"},"Get Count of a Numerical Attribute"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Request:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"GET /rest/Payments?$attributes=Amount&$compute=count\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},"20\n")),(0,r.kt)("h2",{id:"best-practices"},"Best Practices"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Specify Only Necessary Calculations:")," Limit the calculations to those necessary for your application to optimize performance and reduce payload size.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Combine with Other Query Parameters:")," Use other query parameters (",(0,r.kt)("inlineCode",{parentName:"p"},"$filter"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"$orderby"),") to refine your data retrieval and calculations.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Handle Errors Gracefully:")," Implement proper error handling to manage cases where the calculations cannot be performed or data cannot be retrieved."))))}m.isMDXComponent=!0}}]);
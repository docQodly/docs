"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([[363],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>h});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),m=p(a),c=r,h=m["".concat(s,".").concat(c)]||m[c]||k[c]||l;return a?n.createElement(h,o(o({ref:t},d),{},{components:a})):n.createElement(h,o({ref:t},d))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[m]="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},98310:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const l={id:"tools",title:"Tools"},o=void 0,i={unversionedId:"language/tools",id:"language/tools",title:"Tools",description:"Tools Commands",source:"@site/docs/language/tools.md",sourceDirName:"language",slug:"/language/tools",permalink:"/docs/language/tools",draft:!1,editUrl:"https://github.com/docQodly/docs/edit/main/docs/language/tools.md",tags:[],version:"current",frontMatter:{id:"tools",title:"Tools"}},s={},p=[{value:"Tools Commands",id:"tools-commands",level:2},{value:"base64Encode",id:"base64encode",level:2},{value:"Description",id:"description",level:4},{value:"See also",id:"see-also",level:4},{value:"base64Decode",id:"base64decode",level:2},{value:"Description",id:"description-1",level:4},{value:"Example",id:"example",level:4},{value:"See also",id:"see-also-1",level:4},{value:"generateUUID",id:"generateuuid",level:2},{value:"Description",id:"description-2",level:4},{value:"Example",id:"example-1",level:4},{value:"generateDigest",id:"generatedigest",level:2},{value:"Description",id:"description-3",level:4},{value:"Example 1",id:"example-1-1",level:4},{value:"Example 2",id:"example-2",level:4},{value:"Example 3",id:"example-3",level:4},{value:"See also",id:"see-also-2",level:4},{value:"generatePasswordHash",id:"generatepasswordhash",level:2},{value:"Description",id:"description-4",level:4},{value:"Error management",id:"error-management",level:5},{value:"About bcrypt",id:"about-bcrypt",level:5},{value:"Example",id:"example-4",level:4},{value:"See also",id:"see-also-3",level:4},{value:"verifyPasswordHash",id:"verifypasswordhash",level:2},{value:"Description",id:"description-5",level:4},{value:"Error management",id:"error-management-1",level:5},{value:"Example",id:"example-5",level:4},{value:"See also",id:"see-also-4",level:4}],d={toc:p};function m(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"tools-commands"},"Tools Commands"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#base64encode"},(0,r.kt)("strong",{parentName:"a"},"base64Encode")," ( ",(0,r.kt)("em",{parentName:"a"},"toEncode")," : blob, string , ",(0,r.kt)("em",{parentName:"a"},"encoded")," : blob, string {, ","*","} )"),"\xa0","\xa0","\xa0","\xa0"," encodes the string or blob value passed in the ",(0,r.kt)("em",{parentName:"td"},"toEncode")," parameter in Base64 or Base64URL format")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#base64decode"},(0,r.kt)("strong",{parentName:"a"},"base64Decode")," ( ",(0,r.kt)("em",{parentName:"a"},"toEncode")," : blob, string , ",(0,r.kt)("em",{parentName:"a"},"encoded")," : blob, string {, ","*","} )"),"\xa0","\xa0","\xa0","\xa0","  decodes the text or blob value coded in Base64 or Base64URL format passed in the toDecode parameter")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#generateuuid"},(0,r.kt)("strong",{parentName:"a"},"generateUUID")," : string"),"\xa0","\xa0","\xa0","\xa0","returns a new 32-character UUID identifier in non-canonical form")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#generatedigest"},(0,r.kt)("strong",{parentName:"a"},"generateDigest")," ( ",(0,r.kt)("em",{parentName:"a"},"param")," : any , ",(0,r.kt)("em",{parentName:"a"},"algorithm")," : integer {, ","*","}) : string"),"\xa0","\xa0","\xa0","\xa0","returns the digest key of a blob or string after application of an encryption algorithm")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#generatepasswordhash"},(0,r.kt)("strong",{parentName:"a"},"generatePasswordHash")," ( ",(0,r.kt)("em",{parentName:"a"},"password")," : string , ",(0,r.kt)("em",{parentName:"a"},"options")," : object ) : string "),"\xa0","\xa0","\xa0","\xa0"," returns a secure password hash generated by a cryptographic hash algorithm")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#verifypasswordhash"},(0,r.kt)("strong",{parentName:"a"},"verifyPasswordHash")," ( ",(0,r.kt)("em",{parentName:"a"},"password")," : string , ",(0,r.kt)("em",{parentName:"a"},"hash")," : string ) : boolean "),"\xa0","\xa0","\xa0","\xa0"," verifies that the given ",(0,r.kt)("em",{parentName:"td"},"hash")," matches the given ",(0,r.kt)("em",{parentName:"td"},"password"))))),(0,r.kt)("h2",{id:"base64encode"},"base64Encode"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"base64Encode")," ( ",(0,r.kt)("em",{parentName:"p"},"toEncode")," : blob, string , ",(0,r.kt)("em",{parentName:"p"},"encoded")," : blob, string {, ","*","} )"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"toEncode"),(0,r.kt)("td",{parentName:"tr",align:null},"blob, string"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Value to encode")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"Encoded value (if encoded parameter omitted)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"encoded"),(0,r.kt)("td",{parentName:"tr",align:null},"blob, string"),(0,r.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"Encoded value")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"*"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Encode in Base64URL format")))),(0,r.kt)("h4",{id:"description"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"base64Encode")," command  encodes the string or blob value passed in the ",(0,r.kt)("em",{parentName:"p"},"toEncode")," parameter in Base64 or Base64URL format. "),(0,r.kt)("p",null,"Base64 encoding modifies 8-bit coded data so that they do not keep more than 7 useful bits. This encoding is required, for example, for handling blobs using xml. Base64URL is an alernative encoding with a specific processing for URLs and filenames (see ",(0,r.kt)("a",{parentName:"p",href:"#https://tools.ietf.org/html/rfc4648#section-5"},"rfc4648"),"). "),(0,r.kt)("p",null,"Pass in ",(0,r.kt)("em",{parentName:"p"},"toEncode")," a text or blob value to encode."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"When you pass a text value, the command encodes the utf-8 representation of the text.")),(0,r.kt)("p",null,"If you pass the ",(0,r.kt)("em",{parentName:"p"},"encoded")," parameter, it receives the encoded contents of ",(0,r.kt)("em",{parentName:"p"},"toEncode")," as text or blob at the end of command execution. In this case, the ",(0,r.kt)("em",{parentName:"p"},"toEncode")," parameter itself is not modified by the command. "),(0,r.kt)("p",null,"If you omit the ",(0,r.kt)("em",{parentName:"p"},"encoded")," parameter, the command directly modifies the ",(0,r.kt)("em",{parentName:"p"},"toEncode")," parameter."),(0,r.kt)("p",null,"By default if the ",(0,r.kt)("em",{parentName:"p"}," parameter is omitted, the command uses a Base64 encoding. If you pass the ")," parameter, the command uses a Base64URL encoding."),(0,r.kt)("h4",{id:"see-also"},"See also"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#base64decode"},(0,r.kt)("inlineCode",{parentName:"a"},"base64Decode")),(0,r.kt)("br",null),"\n",(0,r.kt)("a",{parentName:"p",href:"#generatedigest"},(0,r.kt)("inlineCode",{parentName:"a"},"generateDigest"))),(0,r.kt)("h2",{id:"base64decode"},"base64Decode"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"base64Decode")," ( ",(0,r.kt)("em",{parentName:"p"},"toEncode")," : blob, string , ",(0,r.kt)("em",{parentName:"p"},"encoded")," : blob, string {, ","*","} )"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"toEncode"),(0,r.kt)("td",{parentName:"tr",align:null},"blob, string"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Value to encode")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"Encoded value (if encoded parameter omitted)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"encoded"),(0,r.kt)("td",{parentName:"tr",align:null},"blob, string"),(0,r.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"Encoded value")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"*"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Encode in Base64URL format")))),(0,r.kt)("h4",{id:"description-1"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"base64Decode")," command   decodes the text or blob value coded in Base64 or Base64URL format passed in the toDecode parameter. For more information on Base64 and Base64URL formats, please refer to the ",(0,r.kt)("a",{parentName:"p",href:"#base64encode"},(0,r.kt)("inlineCode",{parentName:"a"},"base64Encode"))," command description. "),(0,r.kt)("p",null,"Pass in ",(0,r.kt)("em",{parentName:"p"},"toDecode")," the Base64 or Base64URL encoded text or blob value to decode. "),(0,r.kt)("p",null,"If you pass the ",(0,r.kt)("em",{parentName:"p"},"decoded")," parameter, the command decodes the contents of ",(0,r.kt)("em",{parentName:"p"},"toDecode")," in the ",(0,r.kt)("em",{parentName:"p"},"decoded")," parameter -- the ",(0,r.kt)("em",{parentName:"p"},"toDecode")," parameter is left untouched. If you omit the ",(0,r.kt)("em",{parentName:"p"},"decoded")," parameter, the command directly modifies the contents of the ",(0,r.kt)("em",{parentName:"p"},"toDecode")," parameter."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"If a string variable is passed to receive what is decoded by the command, it receives the decoded bytes interpreted as utf-8.")),(0,r.kt)("p",null,"By default if the ",(0,r.kt)("em",{parentName:"p"}," parameter is omitted, the command uses a Base64 decoding. If you pass the ")," parameter, the command uses a Base64URL decoding."),(0,r.kt)("p",null,"If ",(0,r.kt)("em",{parentName:"p"},"toDecode")," contains an invalid base64 contents, an empty string or blob value is returned. "),(0,r.kt)("h4",{id:"example"},"Example"),(0,r.kt)("p",null,"This example lets you transfer a picture via a blob:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"},"")),(0,r.kt)("h4",{id:"see-also-1"},"See also"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#base64encode"},(0,r.kt)("inlineCode",{parentName:"a"},"base64Encode")),(0,r.kt)("br",null),"\n",(0,r.kt)("a",{parentName:"p",href:"#generatedigest"},(0,r.kt)("inlineCode",{parentName:"a"},"generateDigest"))),(0,r.kt)("h2",{id:"generateuuid"},"generateUUID"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"generateUUID")," : string"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Result"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"New UUID as non-canonical text (32 characters)")))),(0,r.kt)("h4",{id:"description-2"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"generateUUID")," command returns a new 32-character UUID identifier in non-canonical form."),(0,r.kt)("p",null,"An UUID is a 16-byte number (128 bits). It contains 32 hexadecimal characters. It can be expressed either in non-canonical form (series of 32 letters ","[A-F, a-f]"," and/or numbers ","[0-9]",", for example 550e8400e29b41d4a716446655440000) or in canonical form (groups of 8,4,4,4,12, for example 550e8400-e29b-41d4-a716-446655440000). "),(0,r.kt)("h4",{id:"example-1"},"Example"),(0,r.kt)("p",null,"Generation of a UUID in a variable: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"},"")),(0,r.kt)("h2",{id:"generatedigest"},"generateDigest"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"generateDigest")," ( ",(0,r.kt)("em",{parentName:"p"},"param")," : any , ",(0,r.kt)("em",{parentName:"p"},"algorithm")," : integer {, ","*","}) : string"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"param"),(0,r.kt)("td",{parentName:"tr",align:null},"any"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"blob or string for which to get digest key")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"algorithm"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Algorithm used to return key:")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"0 = MD5 Digest, 1 = SHA1 Digest, 2 = 4D digest, 3 = SHA-256 digest, 4 = SHA-512 digest"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"*"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Encode digest in Base64URL")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Result"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"Value of digest key")))),(0,r.kt)("h4",{id:"description-3"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"generateDigest")," command returns the digest key of a blob or string after application of an encryption algorithm. "),(0,r.kt)("p",null,"Pass a string or blob variable in the ",(0,r.kt)("em",{parentName:"p"},"param")," parameter. The ",(0,r.kt)("inlineCode",{parentName:"p"},"generateDigest")," function returns the digest key as a string."),(0,r.kt)("p",null,"In the ",(0,r.kt)("em",{parentName:"p"},"algorithm")," parameter, pass a value designating which hash function to use. Use one of the following constants, found in the Digest Type theme:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Constant"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Comment"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"k4DRESTDigest"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Internal algorithm of 4D, useful in the context of the On REST Authentication database method when you want to use your own list of users.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"kMD5Digest"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Message Digest 5 algorithm. A series of 128 bits returned as a string of 32 hexadecimal characters.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"kSHA1Digest"),(0,r.kt)("td",{parentName:"tr",align:"left"},"1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Secure Hash 1 algorithm. A series of 160 bits returned as a string of 40 hexadecimal characters.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"kSHA256Digest"),(0,r.kt)("td",{parentName:"tr",align:"left"},"3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"(SHA-2 family) SHA-256 is a series of 256 bits returned as a string of 64 hexadecimal characters.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"kSHA512Digest"),(0,r.kt)("td",{parentName:"tr",align:"left"},"4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"(SHA-2 family) SHA-512 is a series of 512 bits returned as a string of 128 hexadecimal characters.")))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"It is not recommended to use MD5 and SHA algorithms to handle passwords; if you need to check passwords, you are advised to use ",(0,r.kt)("a",{parentName:"p",href:"#generatepasswordhash"},(0,r.kt)("inlineCode",{parentName:"a"},"generatePasswordHash")),"\nand ",(0,r.kt)("a",{parentName:"p",href:"#verifypasswordhash"},(0,r.kt)("inlineCode",{parentName:"a"},"verifyPasswordHash"))," commands.")),(0,r.kt)("p",null,"By default if the ",(0,r.kt)("em",{parentName:"p"}," parameter is omitted, the returned digest is encoded in hexadecimal. Pass the ")," parameter if you want it to be encoded in Base64URL. "),(0,r.kt)("p",null,"The value returned for the same object is the same on all the platforms (macOS/Windows). The calculation is performed based on the representation in UTF-8 of the text passed in the parameter. "),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},'If you use the command with an empty string/blob, it does not return void but a string value (for example "d41d8cd98f00b204e9800998ecf8427e" for MD5).')),(0,r.kt)("h4",{id:"example-1-1"},"Example 1"),(0,r.kt)("p",null,"This example compares two images using the MD5 algorithm:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"},"")),(0,r.kt)("h4",{id:"example-2"},"Example 2"),(0,r.kt)("p",null,"These examples illustrate how to retrieve the digest key of a string:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"},"")),(0,r.kt)("h4",{id:"example-3"},"Example 3"),(0,r.kt)("p",null,'This example only accepts the "admin" user with the password "123" that does not match a qodly user:'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"},"")),(0,r.kt)("h4",{id:"see-also-2"},"See also"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#base64decode"},(0,r.kt)("inlineCode",{parentName:"a"},"base64Decode")),(0,r.kt)("br",null),"\n",(0,r.kt)("a",{parentName:"p",href:"#base64encode"},(0,r.kt)("inlineCode",{parentName:"a"},"base64Encode")),(0,r.kt)("br",null),"\n",(0,r.kt)("a",{parentName:"p",href:"#generatepasswordhash"},(0,r.kt)("inlineCode",{parentName:"a"},"generatePasswordHash"))),(0,r.kt)("h2",{id:"generatepasswordhash"},"generatePasswordHash"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"generatePasswordHash")," ( ",(0,r.kt)("em",{parentName:"p"},"password")," : string , ",(0,r.kt)("em",{parentName:"p"},"options")," : object ) : string "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"password"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"The user's password. Only the first 72 characters are used")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"An object containing options")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Result"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"Returns the hashed password")))),(0,r.kt)("h4",{id:"description-4"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"generatePasswordHash")," function  returns a secure password hash generated by a cryptographic hash algorithm. "),(0,r.kt)("p",null,"Pass a string value in the ",(0,r.kt)("em",{parentName:"p"},"password")," parameter. The ",(0,r.kt)("inlineCode",{parentName:"p"},"generatePasswordHash")," returns a hashed string for the password. Multiple passes of the same password will result in different hashed strings."),(0,r.kt)("p",null,"In the ",(0,r.kt)("em",{parentName:"p"},"options")," object, pass the properties to use when generating the password hash. The available values are listed in the table below:"),(0,r.kt)("p",null,"// table "),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"If either value in the ",(0,r.kt)("em",{parentName:"p"},"options")," object is invalid, an error message and an empty string will be returned.")),(0,r.kt)("h5",{id:"error-management"},"Error management"),(0,r.kt)("p",null,"The following errors may be returned. You can review an error with the ",(0,r.kt)("inlineCode",{parentName:"p"},"onErrCall")," command."),(0,r.kt)("p",null,"//table "),(0,r.kt)("h5",{id:"about-bcrypt"},"About bcrypt"),(0,r.kt)("p",null,"bcrypt is a password hashing function based on the Blowfish cipher. In addition to incorporating a salt to protect against rainbow table attacks, it's an adaptive function in which the iteration count can be increased to make it slower, so it remains resistant to brute-force attacks even with increasing computation power because it takes longer and becomes too time consuming and expensive."),(0,r.kt)("h4",{id:"example-4"},"Example"),(0,r.kt)("p",null,"This example generates a password hash using bcrypt with a cost factor 4. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"},"\n \n")),(0,r.kt)("admonition",{title:"Reminder ",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Multiple passes of the same password will result in different hashed strings. This is a standard behavior for algorithms such as bcrypt, since the best practice is to create a new, random salt for every hash. Refer to the ",(0,r.kt)("a",{parentName:"p",href:"#verifypasswordhash"},(0,r.kt)("inlineCode",{parentName:"a"},"verifyPasswordHash"))," description for an example of how to check the passwords")),(0,r.kt)("h4",{id:"see-also-3"},"See also"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#generatedigest"},(0,r.kt)("inlineCode",{parentName:"a"},"generateDigest")),(0,r.kt)("br",null),"\n",(0,r.kt)("a",{parentName:"p",href:"#verifypasswordhash"},(0,r.kt)("inlineCode",{parentName:"a"},"verifyPasswordHash"))),(0,r.kt)("h2",{id:"verifypasswordhash"},"verifyPasswordHash"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"verifyPasswordHash")," ( ",(0,r.kt)("em",{parentName:"p"},"password")," : string , ",(0,r.kt)("em",{parentName:"p"},"hash")," : string ) : boolean "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"password"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"The user's password. Only the first 72 characters are used.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"hash"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"A password hash.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Result"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"Returns TRUE if the password and hash match, otherwise returns FALSE.")))),(0,r.kt)("h4",{id:"description-5"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"verifyPasswordHash")," function  verifies that the given ",(0,r.kt)("em",{parentName:"p"},"hash")," matches the given ",(0,r.kt)("em",{parentName:"p"},"password"),"."),(0,r.kt)("p",null,"This function compares ",(0,r.kt)("em",{parentName:"p"},"password")," to a ",(0,r.kt)("em",{parentName:"p"},"hash")," generated by ",(0,r.kt)("a",{parentName:"p",href:"#generatepasswordhash"},(0,r.kt)("inlineCode",{parentName:"a"},"generatePasswordHash"))," function."),(0,r.kt)("h5",{id:"error-management-1"},"Error management"),(0,r.kt)("p",null,"The following errors may be returned. You can review an error with the ",(0,r.kt)("inlineCode",{parentName:"p"},"onErrCall")," command."),(0,r.kt)("p",null,"//table"),(0,r.kt)("admonition",{title:"Reminder ",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Only bcrypt algorithm is supported. If your hash was not generated using bcrypt, an error is returned. ")),(0,r.kt)("h4",{id:"example-5"},"Example"),(0,r.kt)("p",null,"This example verifies a password hash previously created by ",(0,r.kt)("a",{parentName:"p",href:"#generatepasswordhash"},(0,r.kt)("inlineCode",{parentName:"a"},"generatePasswordHash"))," and stored in a ","[Users]"," table with a newly entered password:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"},"")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"The password is never stored on disk, only the hash. Using a remote 4D application, the hash could be produced on the client side. If instead, you use a JavaScript (or similar) based front end, the best practice for security is to create the hash on the server side. Of course, you should use a TLS encrypted network connection for security, as this requires transferring the password over the network.")),(0,r.kt)("h4",{id:"see-also-4"},"See also"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#generatepasswordhash"},(0,r.kt)("inlineCode",{parentName:"a"},"generatePasswordHash"))))}m.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([[1140],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(t),m=r,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return t?a.createElement(f,i(i({ref:n},c),{},{components:t})):a.createElement(f,i({ref:n},c))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=t[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7867:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=t(87462),r=(t(67294),t(3905));const o={id:"$singleton",title:"$singleton"},i=void 0,l={unversionedId:"api/$singleton",id:"api/$singleton",title:"$singleton",description:"Definition",source:"@site/docs/api/$singleton.md",sourceDirName:"api",slug:"/api/$singleton",permalink:"/docs/api/$singleton",draft:!1,editUrl:"https://github.com/docQodly/docs/edit/main/docs/api/$singleton.md",tags:[],version:"current",frontMatter:{id:"$singleton",title:"$singleton"},sidebar:"API",previous:{title:"$savedorderby",permalink:"/docs/api/$savedorderby"},next:{title:"$skip",permalink:"/docs/api/$skip"}},s={},p=[{value:"Definition",id:"definition",level:2},{value:"Function calls",id:"function-calls",level:2},{value:"POST request",id:"post-request",level:4},{value:"GET request",id:"get-request",level:4},{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Response",id:"response",level:4}],c={toc:p};function u(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"definition"},"Definition"),(0,r.kt)("p",null,"You can directly call exposed ",(0,r.kt)("a",{parentName:"p",href:"/docs/language/basics/lang-classes#singleton-classes"},"functions of your shared singletons")," through REST."),(0,r.kt)("p",null,"Singleton functions are called in POST or GET requests with the ",(0,r.kt)("inlineCode",{parentName:"p"},"$singleton")," command and without ",(0,r.kt)("inlineCode",{parentName:"p"},"()"),". For example, if you have defined a ",(0,r.kt)("inlineCode",{parentName:"p"},"buildVehicle()")," function in the ",(0,r.kt)("inlineCode",{parentName:"p"},"VehicleFactory")," shared singleton class, you could call it using the following request:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},"/rest/$singleton/VehicleFactory/buildVehicle\n")),(0,r.kt)("p",null,"with data in the body of the POST request: ",'["truck"]'),(0,r.kt)("p",null,"In QodlyScript language, this call is equivalent to:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"},'singleton = cs.VehicleFactory.me.buildVehicle("truck")\n')),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Keep in mind that only functions with the ",(0,r.kt)("a",{parentName:"p",href:"/docs/orda/data-model#exposed-vs-non-exposed-functions"},(0,r.kt)("inlineCode",{parentName:"a"},"exposed")," keyword")," can be directly called from REST requests.")),(0,r.kt)("h2",{id:"function-calls"},"Function calls"),(0,r.kt)("p",null,"Singleton functions can be called using REST ",(0,r.kt)("strong",{parentName:"p"},"POST")," or ",(0,r.kt)("strong",{parentName:"p"},"GET")," requests."),(0,r.kt)("p",null,"The formal syntax is:"),(0,r.kt)("h4",{id:"post-request"},"POST request"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"/rest/$singleton/SingletonClass/SingletonClassFunction")),(0,r.kt)("p",null,"with data in the body of the POST request: ",(0,r.kt)("inlineCode",{parentName:"p"},'["myparam"]')),(0,r.kt)("h4",{id:"get-request"},"GET request"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"/rest/$singleton/SingletonClass/SingletonClassFunction?$params='[\"myparam\"]'")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"SingletonClassFunction()")," function must have been declared with the ",(0,r.kt)("inlineCode",{parentName:"p"},"onHttpGet")," keyword to be callable with ",(0,r.kt)("inlineCode",{parentName:"p"},"GET")," (see ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classFunctionsOverview#prerequisites"},"function prerequisites"),"). ")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"You can restrict calls to specific singleton functions by configuring appropriate ",(0,r.kt)("a",{parentName:"p",href:"/docs/studio/roles/functionPermissions#configuring-function-permissions"},"permissions"),".")),(0,r.kt)("h2",{id:"parameters"},"Parameters"),(0,r.kt)("p",null,"You can send parameters to singleton functions. On the server side, they will be received in the ",(0,r.kt)("a",{parentName:"p",href:"/docs/language/basics/lang-parameters#declaring-parameters"},"declared parameters")," of the singleton class functions."),(0,r.kt)("p",null,"Sending parameters to singleton functions is exactly the same as sending parameter to ORDA class functions. Please refer to the ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classFunctionsParameters"},(0,r.kt)("strong",{parentName:"a"},"Function Parameters")," page")," for a detailed description."),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("p",null,"You have created a simple shared singleton with an exposed function:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-qs"},'//class mySingleton\n\nshared singleton constructor()\n\nexposed function sayHello (value : string)\n    return "Hello "+value\n\n')),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"mySingleton")," class and ",(0,r.kt)("inlineCode",{parentName:"p"},"sayHello")," function are listed when you call the ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/$catalog#singleton"},(0,r.kt)("inlineCode",{parentName:"a"},"$catalog"))," command.")),(0,r.kt)("p",null,"You can then run this request:  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"POST /rest/$singleton/mySingleton/sayHello\n")),(0,r.kt)("p",null,"Body of the request: ",'["John"]'),(0,r.kt)("h4",{id:"response"},"Response"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "result": "Hello John"\n}\n')))}u.isMDXComponent=!0}}]);
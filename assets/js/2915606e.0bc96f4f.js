"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([[9505],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>h});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(a),u=r,h=m["".concat(s,".").concat(u)]||m[u]||d[u]||i;return a?n.createElement(h,o(o({ref:t},p),{},{components:a})):n.createElement(h,o({ref:t},p))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},8952:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var n=a(7462),r=(a(7294),a(3905));const i={id:"lang-identifiers",title:"Identifiers"},o=void 0,l={unversionedId:"language/basics/lang-identifiers",id:"language/basics/lang-identifiers",title:"Identifiers",description:"This section describes the conventions and rules for naming various elements in the QodlyScript language (variables, object properties, classes, etc.).",source:"@site/docs/language/basics/lang-identifiers.md",sourceDirName:"language/basics",slug:"/language/basics/lang-identifiers",permalink:"/docs/language/basics/lang-identifiers",draft:!1,editUrl:"https://github.com/docQodly/docs/edit/main/docs/language/basics/lang-identifiers.md",tags:[],version:"current",frontMatter:{id:"lang-identifiers",title:"Identifiers"},sidebar:"Development",previous:{title:"Error handling",permalink:"/docs/language/basics/lang-errors"},next:{title:"Pathnames",permalink:"/docs/language/basics/lang-pathnames"}},s={},c=[{value:"Arrays",id:"arrays",level:2},{value:"Classes",id:"classes",level:2},{value:"Functions",id:"functions",level:2},{value:"Object properties",id:"object-properties",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Methods",id:"methods",level:2},{value:"Variables",id:"variables",level:2}],p={toc:c};function m(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This section describes the conventions and rules for naming various elements in the QodlyScript language (variables, object properties, classes, etc.)."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"If non-Roman characters are used in the names of the identifiers, their maximum length may be smaller.")),(0,r.kt)("h2",{id:"arrays"},"Arrays"),(0,r.kt)("p",null,"Array names follow the same rules as ",(0,r.kt)("a",{parentName:"p",href:"#variables"},"variables"),"."),(0,r.kt)("h2",{id:"classes"},"Classes"),(0,r.kt)("p",null,"The name of a class can contain up to 31 characters."),(0,r.kt)("p",null,"A class name must be compliant with standard ",(0,r.kt)("a",{parentName:"p",href:"#object-properties"},"property naming rules")," for dot notation."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Giving the same name to a user class and a ",(0,r.kt)("a",{parentName:"p",href:"#dataclass"},"dataclass")," is not recommended, in order to prevent any conflict.")),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("p",null,"Function names must be compliant with standard ",(0,r.kt)("a",{parentName:"p",href:"#object-properties"},"property naming rules")," for dot notation."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},'Starting the function name with an underscore character ("_") will exclude the function from the autocompletion features in the code editor.')),(0,r.kt)("h2",{id:"object-properties"},"Object properties"),(0,r.kt)("p",null,"The name of an object property (also called object ",(0,r.kt)("em",{parentName:"p"},"attribute"),") can contain up to 255 characters."),(0,r.kt)("p",null,"Object properties can reference scalar values, ORDA elements, class functions, other objects, etc. Whatever their nature, object property names must follow the following rules ",(0,r.kt)("strong",{parentName:"p"},"if you want to use the dot notation"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'A property name must begin with a letter, an underscore, or a dollar "$".'),(0,r.kt)("li",{parentName:"ul"},'Thereafter, the name can include any letter, digit, the underscore character ("_"), or the dollar character ("$").'),(0,r.kt)("li",{parentName:"ul"},"Property names are case sensitive.")),(0,r.kt)("p",null,"Examples:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-4d"},'myObject.myAttribute="10"\nvalue=$clientObj.data.address.city\n')),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},'Starting the property name with an underscore character ("_") will exclude the property from the autocompletion features in the code editor. For example, if you declare ',(0,r.kt)("inlineCode",{parentName:"p"},"o._myPrivateProperty"),", it will not be proposed in the code editor when you type in ",(0,r.kt)("inlineCode",{parentName:"p"},'"o. "'),".")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"If you use ",(0,r.kt)("strong",{parentName:"p"},"string notation")," within square brackets, property names can contain any characters (ex: ",(0,r.kt)("inlineCode",{parentName:"p"},'myObject["1. First property"]'),").")),(0,r.kt)("p",null,"See also ",(0,r.kt)("a",{parentName:"p",href:"https://www.ecma-international.org/ecma-262/5.1/#sec-7.6"},"ECMA Script standard"),"."),(0,r.kt)("h2",{id:"parameters"},"Parameters"),(0,r.kt)("p",null,"Parameter names follow the same rules as ",(0,r.kt)("a",{parentName:"p",href:"#variables"},"variable names"),"."),(0,r.kt)("p",null,"Examples:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-4d"},"Function getArea(width : Integer, height : Integer)-> area : Integer\n\n#Declare (i : Integer , param : Date) -> myResult : Object\n")),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("p",null,"The name of a method contains up to 31 characters."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A method name must begin with a letter, a digit, or an underscore"),(0,r.kt)("li",{parentName:"ul"},'Thereafter, the name can include any letter or digit, the underscore character ("_"), or the space character.'),(0,r.kt)("li",{parentName:"ul"},"Do not use reserved names, i.e. QodlyScript command names (",(0,r.kt)("inlineCode",{parentName:"li"},"Date"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Time"),", etc), keywords (",(0,r.kt)("inlineCode",{parentName:"li"},"if"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"for"),", etc.), or constant names (",(0,r.kt)("inlineCode",{parentName:"li"},"Euro"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Black"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Friday"),", etc.)."),(0,r.kt)("li",{parentName:"ul"},"Method names are case insensitive.")),(0,r.kt)("p",null,"It is a good programming technique to adopt the same naming convention as the one used by Qodly for built-in methods. Use uppercase characters for naming your methods; however if a method returns a value, capitalize the first character of its name. By doing so, when you reopen a project for maintenance after a few months, you will already know if a method returns a result by simply looking at its name in the Explorer."),(0,r.kt)("p",null,"Examples:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-4d"},"if(new client)\nDELETE DUPLICATED VALUES\nFormula(increase_salaries)\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"When you call a method, you just type its name. However, some QodlyScript built-in commands, such as ",(0,r.kt)("inlineCode",{parentName:"p"},"ON EVENT CALL"),", expect the name of a method as a string when a method parameter is passed. For example:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-4d"},' //This collection function accepts a method name\nstrings2=strings1.orderByMethod("sortCollection",sk strict)\n'))),(0,r.kt)("h2",{id:"variables"},"Variables"),(0,r.kt)("p",null,"The name of a variable can be up to 31 characters."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A variable name must begin with a ",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Glossary/Unicode"},"Unicode")," letter or an underscore."),(0,r.kt)("li",{parentName:"ul"},'Thereafter, the name can include any letter or digit or the underscore character ("_").'),(0,r.kt)("li",{parentName:"ul"},"Do not use reserved names, i.e. 4D command names (",(0,r.kt)("inlineCode",{parentName:"li"},"Date"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Time"),", etc), keywords (",(0,r.kt)("inlineCode",{parentName:"li"},"If"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"For"),", etc.), or constant names (",(0,r.kt)("inlineCode",{parentName:"li"},"Euro"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Black"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Friday"),", etc.)."),(0,r.kt)("li",{parentName:"ul"},"Variable names are case insensitive.")),(0,r.kt)("p",null,"Examples:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-4d"},'for(vlRecord,1,100) \nvs_My_String="Hello there" \nvar _vAge : Integer \nif(bValidate==1) \nvlProcessID:=Current process()\n')))}m.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([["75633"],{72597:function(e,t,n){n.r(t),n.d(t,{metadata:()=>r,contentTitle:()=>i,default:()=>h,assets:()=>c,toc:()=>l,frontMatter:()=>a});var r=JSON.parse('{"id":"language/commands/storage","title":"storage","description":"storage : object","source":"@site/versioned_docs/version-1.1.0/language/commands/storage.md","sourceDirName":"language/commands","slug":"/language/commands/storage","permalink":"/docs/language/commands/storage","draft":false,"unlisted":false,"editUrl":"https://github.com/qodly/docs/issues/new?title=Comment%20on%20language%2Fcommands%2Fstorage.md%20(1.1.0)&body=Share%20any%20feedback%20about%20this%20page%20%E2%80%94%20report%20issues%2C%20suggest%20improvements%2C%20or%20tell%20us%20what%E2%80%99s%20helpful.%0A%0AIf%20it%E2%80%99s%20an%20issue%3A%0A-%20What%E2%80%99s%20the%20issue%3F%20(e.g.%2C%20typo%2C%20incorrect%20information%2C%20unclear%20explanation)%0A-%20Where%20is%20it%3F%20(e.g.%2C%20section%20name%2C%20specific%20paragraph%2C%20or%20line)%0A%0AThank%20you%20for%20helping%20us%20improve!%20%F0%9F%9A%80%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20","tags":[],"version":"1.1.0","frontMatter":{"id":"storage","title":"storage"},"sidebar":"Develop","previous":{"title":"squareRoot","permalink":"/docs/language/commands/squareRoot"},"next":{"title":"string","permalink":"/docs/language/commands/string"}}'),s=n("85893"),o=n("50065");let a={id:"storage",title:"storage"},i=void 0,c={},l=[{value:"Description",id:"description",level:4},{value:"Example 1",id:"example-1",level:4},{value:"Example 2",id:"example-2",level:4},{value:"Example 3",id:"example-3",level:4}];function d(e){let t={a:"a",admonition:"admonition",code:"code",em:"em",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"storage"})," : object"]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Parameter"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"center"}}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Result"}),(0,s.jsx)(t.td,{children:"object"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2190"}),(0,s.jsxs)(t.td,{children:["Catalog of shared objects and shared collections registered in ",(0,s.jsx)(t.code,{children:"storage"})]})]})})]}),"\n",(0,s.jsx)(t.h4,{id:"description",children:"Description"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"storage"})," command returns the catalog of shared objects or shared collections that you have registered in the ",(0,s.jsx)(t.code,{children:"storage"})," object on the current application."]}),"\n",(0,s.jsxs)(t.p,{children:["The catalog returned by ",(0,s.jsx)(t.code,{children:"storage"})," is automatically created by Qodly and is available to all processes of the application, including preemptive processes. There is one ",(0,s.jsx)(t.code,{children:"storage"})," shared object per server."]}),"\n",(0,s.jsxs)(t.p,{children:["Use the ",(0,s.jsx)(t.code,{children:"storage"})," catalog to reference any shared objects or shared collections that you want to be used from any preemptive or standard process. To register a shared object or a shared collection in the catalog, add its reference to the shared object returned by ",(0,s.jsx)(t.code,{children:"storage"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["Since the catalog returned by ",(0,s.jsx)(t.code,{children:"storage"})," is a shared object, it follows the rules described in the ",(0,s.jsx)(t.a,{href:"/docs/language/basics/lang-shared",children:"Shared objects and shared collections"})," section (but with some specificities):"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"This object can only contain shared objects and shared collections. Trying to add other kinds of values (non-shared objects or collections, null, scalar values) will generate an error."}),"\n",(0,s.jsxs)(t.li,{children:["Adding a property to this object must be surrounded by the ",(0,s.jsx)(t.code,{children:"use...end"})," structure, otherwise an error is returned. Reading an attribute outside of a ",(0,s.jsx)(t.code,{children:"use...end"})," structure is, however, possible."]}),"\n",(0,s.jsxs)(t.li,{children:["When surrounded by the ",(0,s.jsx)(t.code,{children:"use...end"})," structure, first-level attributes of ",(0,s.jsx)(t.code,{children:"storage"})," are locked for other processes."]}),"\n",(0,s.jsxs)(t.li,{children:["Unlike standard shared objects, the object returned by ",(0,s.jsx)(t.code,{children:"storage"})," will NOT share its locking identifier with shared objects or collections added as attributes (and thus will not be locked)."]}),"\n"]}),"\n",(0,s.jsx)(t.h4,{id:"example-1",children:"Example 1"}),"\n",(0,s.jsxs)(t.p,{children:["Initializing the ",(0,s.jsx)(t.code,{children:"storage"})," object:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-qs",children:' use(storage)\n    storage.counters = newSharedObject("customers",0,"invoices",0)\n end\n'})}),"\n",(0,s.jsx)(t.h4,{id:"example-2",children:"Example 2"}),"\n",(0,s.jsxs)(t.p,{children:["A standard way to set ",(0,s.jsx)(t.code,{children:"storage"})," values:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-qs",children:' use(storage)\n    storage.mydata: = newSharedObject\n    use(storage.mydata)\n       storage.mydata.prop1 = "Smith"\n       storage.mydata.prop2 = 100\n    end\n end\n'})}),"\n",(0,s.jsx)(t.h4,{id:"example-3",children:"Example 3"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"storage"})," allows implementing a singleton with a ",(0,s.jsx)(t.em,{children:"lazy initialization"}),", as shown in the following example."]}),"\n",(0,s.jsx)(t.p,{children:"declare -> counterValue : integer\nvar counter : object //create a reference to counter for the process"}),"\n",(0,s.jsx)(t.p,{children:'if(counter == null) //if this reference is null, get if from storage\nuse(storage) //Use of storage needed only once!\nif(storage.counter == null)\nstorage.counter = newSharedObject("operation",0)\nend\ncounter = storage.counter //Get the reference of the counter shared object\nend\nend\nuse(counter) //directly use the shared object counter (no need to use storage!)\ncounter.operation = counter.operation+1\ncounterValue = counter.operation\nend'}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsxs)(t.p,{children:["For more information about singleton patterns, you can refer to ",(0,s.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Singleton_pattern",children:"this Wikipedia page"}),"."]})})]})}function h(e={}){let{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},50065:function(e,t,n){n.d(t,{Z:function(){return i},a:function(){return a}});var r=n(67294);let s={},o=r.createContext(s);function a(e){let t=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);
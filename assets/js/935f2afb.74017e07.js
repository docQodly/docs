"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"GetStarted":[{"type":"link","label":"Overview","href":"/docs/overview","docId":"overview"},{"type":"link","label":"Getting Started","href":"/docs/get-started","docId":"get-started"}],"Guides":[{"type":"category","label":"Concepts","items":[{"type":"link","label":"Server Architecture","href":"/docs/concepts/server-architecture","docId":"concepts/server-architecture"},{"type":"link","label":"Qodly Database","href":"/docs/concepts/db","docId":"concepts/db"},{"type":"category","label":"ORDA","items":[{"type":"link","label":"Data Model Objects","href":"/docs/concepts/orda/data-model","docId":"concepts/orda/data-model"},{"type":"link","label":"Data Model Classes","href":"/docs/concepts/orda/orda-classes","docId":"concepts/orda/orda-classes"},{"type":"link","label":"Working with data","href":"/docs/concepts/orda/data","docId":"concepts/orda/data"},{"type":"link","label":"Glossary","href":"/docs/concepts/orda/glossary","docId":"concepts/orda/glossary"}],"collapsed":true,"collapsible":true,"href":"/docs/concepts/orda/overview"}],"collapsed":true,"collapsible":true,"href":"/docs/category/concepts"}],"QodlyScript":[{"type":"link","label":"QuickTour","href":"/docs/language/basics/lang-quicktour","docId":"language/basics/lang-quicktour"},{"type":"category","label":"QodlyScript Concepts","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Variables","href":"/docs/language/basics/lang-variables","docId":"language/basics/lang-variables"},{"type":"link","label":"Arrays","href":"/docs/language/basics/lang-arrays","docId":"language/basics/lang-arrays"},{"type":"category","label":"Data Types","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"BLOB","href":"/docs/language/basics/lang-blob","docId":"language/basics/lang-blob"},{"type":"link","label":"Boolean","href":"/docs/language/basics/lang-boolean","docId":"language/basics/lang-boolean"},{"type":"link","label":"Collection","href":"/docs/language/basics/lang-collection","docId":"language/basics/lang-collection"},{"type":"link","label":"Date","href":"/docs/language/basics/lang-date","docId":"language/basics/lang-date"},{"type":"link","label":"Null and Undefined","href":"/docs/language/basics/lang-null-undefined","docId":"language/basics/lang-null-undefined"},{"type":"link","label":"Number","href":"/docs/language/basics/lang-number","docId":"language/basics/lang-number"},{"type":"link","label":"Object","href":"/docs/language/basics/lang-object","docId":"language/basics/lang-object"},{"type":"link","label":"Picture","href":"/docs/language/basics/lang-picture","docId":"language/basics/lang-picture"},{"type":"link","label":"Time","href":"/docs/language/basics/lang-time","docId":"language/basics/lang-time"},{"type":"link","label":"Text","href":"/docs/language/basics/lang-text","docId":"language/basics/lang-text"},{"type":"link","label":"Variant","href":"/docs/language/basics/lang-variant","docId":"language/basics/lang-variant"}],"href":"/docs/language/basics/lang-data-types"},{"type":"link","label":"Operators","href":"/docs/language/basics/lang-operators","docId":"language/basics/lang-operators"},{"type":"link","label":"Methods","href":"/docs/language/basics/lang-methods","docId":"language/basics/lang-methods"},{"type":"link","label":"Parameters","href":"/docs/language/basics/lang-parameters","docId":"language/basics/lang-parameters"},{"type":"link","label":"Expressions","href":"/docs/language/basics/lang-expressions","docId":"language/basics/lang-expressions"},{"type":"link","label":"Shared objects and collections","href":"/docs/language/basics/lang-shared","docId":"language/basics/lang-shared"},{"type":"link","label":"Classes","href":"/docs/language/basics/lang-classes","docId":"language/basics/lang-classes"},{"type":"link","label":"Control flow","href":"/docs/language/basics/lang-control-flow","docId":"language/basics/lang-control-flow"},{"type":"link","label":"Error handling","href":"/docs/language/basics/lang-errors","docId":"language/basics/lang-errors"},{"type":"link","label":"Identifiers","href":"/docs/language/basics/lang-identifiers","docId":"language/basics/lang-identifiers"},{"type":"link","label":"Pathnames","href":"/docs/language/basics/lang-pathnames","docId":"language/basics/lang-pathnames"}],"href":"/docs/category/language"},{"type":"link","label":"Blob","href":"/docs/language/BlobClass","docId":"language/BlobClass"},{"type":"link","label":"Class","href":"/docs/language/ClassClass","docId":"language/ClassClass"},{"type":"link","label":"Collection","href":"/docs/language/CollectionClass","docId":"language/CollectionClass"},{"type":"link","label":"CryptoKey","href":"/docs/language/CryptoKeyClass","docId":"language/CryptoKeyClass"},{"type":"link","label":"DataClass","href":"/docs/language/DataClassClass","docId":"language/DataClassClass"},{"type":"link","label":"DataClassAttribute","href":"/docs/language/DataClassAttributeClass","docId":"language/DataClassAttributeClass"},{"type":"link","label":"DataStore","href":"/docs/language/DataStoreClass","docId":"language/DataStoreClass"},{"type":"link","label":"Email","href":"/docs/language/EmailObjectClass","docId":"language/EmailObjectClass"},{"type":"link","label":"Entity","href":"/docs/language/EntityClass","docId":"language/EntityClass"},{"type":"link","label":"EntitySelection","href":"/docs/language/EntitySelectionClass","docId":"language/EntitySelectionClass"},{"type":"link","label":"File","href":"/docs/language/FileClass","docId":"language/FileClass"},{"type":"link","label":"FileHandle","href":"/docs/language/FileHandleClass","docId":"language/FileHandleClass"},{"type":"link","label":"Folder","href":"/docs/language/FolderClass","docId":"language/FolderClass"},{"type":"link","label":"Function","href":"/docs/language/FunctionClass","docId":"language/FunctionClass"},{"type":"link","label":"HTTPRequest","href":"/docs/language/HTTPRequestClass","docId":"language/HTTPRequestClass"},{"type":"link","label":"String","href":"/docs/language/string","docId":"language/string"}]},"docs":{"cloud/statistics":{"id":"cloud/statistics","title":"Statistics","description":"Welcome to 4D Web Studio preview version"},"cloud/tools":{"id":"cloud/tools","title":"Online Tools","description":"Welcome to 4D Web Studio preview version"},"concepts/db":{"id":"concepts/db","title":"Qodly Database","description":"Overview","sidebar":"Guides"},"concepts/orda/data":{"id":"concepts/orda/data","title":"Working with data","description":"In ORDA, you access data through entities and entity selections. These objects allow you to create, update, query, or sort the data of the datastore.","sidebar":"Guides"},"concepts/orda/data-model":{"id":"concepts/orda/data-model","title":"Data Model Objects","description":"The ORDA technology is based upon an automatic mapping of an underlying relational database structure to a data model (i.e. an included and enhanced ORM), along with powerful features such as computed attributes or dataclass functions. It also provides access to data through entity and entity selection objects.","sidebar":"Guides"},"concepts/orda/glossary":{"id":"concepts/orda/glossary","title":"Glossary","description":"any data type","sidebar":"Guides"},"concepts/orda/orda-classes":{"id":"concepts/orda/orda-classes","title":"Data Model Classes","description":"ORDA allows you to create high-level class functions above the data model. This allows you to write business-oriented code and \\"publish\\" it just like an API. Datastore, dataclasses, entity selections, and entities are all available as class objects that can contain functions.","sidebar":"Guides"},"concepts/orda/overview":{"id":"concepts/orda/overview","title":"What is ORDA?","description":"ORDA stands for Object Relational Data Access. It is an enhanced technology allowing to access both the model and the data of a database through objects.","sidebar":"Guides"},"concepts/server-architecture":{"id":"concepts/server-architecture","title":"Server Architecture","description":"Overview","sidebar":"Guides"},"debug":{"id":"debug","title":"Debugging","description":"Welcome to 4D Web Studio preview version"},"deploy/get-started":{"id":"deploy/get-started","title":"Getting Started","description":"Welcome to 4D Web Studio preview version"},"deploy/on-premise":{"id":"deploy/on-premise","title":"On-Premise Deployment","description":"Welcome to 4D Web Studio preview version"},"design-webforms/components":{"id":"design-webforms/components","title":"Components","description":"Components are the building blocks of your application."},"design-webforms/create-webform":{"id":"design-webforms/create-webform","title":"Webform Editor Overview","description":"Creating a webform"},"design-webforms/datasources":{"id":"design-webforms/datasources","title":"Datasources","description":"Overview"},"design-webforms/events/events":{"id":"design-webforms/events/events","title":"Events and interactions","description":"Events are usually used as a means of triggering certain behaviors. They are used in conjunction with different actions to create interactions in an application."},"design-webforms/styling":{"id":"design-webforms/styling","title":"Styling","description":"Once a component is on the Canvas, you can customize its look using styling tools."},"get-started":{"id":"get-started","title":"Getting Started","description":"Welcome to 4D Web Studio preview version","sidebar":"GetStarted"},"intro":{"id":"intro","title":"Tutorial Intro","description":"Let\'s discover Docusaurus in less than 5 minutes."},"language/basics/lang-arrays":{"id":"language/basics/lang-arrays","title":"Arrays","description":"An array is an ordered series of variables of the same type. Each variable is called an element of the array. An array is given its size when it is created; you can then resize it as many times as needed by adding, inserting, or deleting elements, or by resizing the array using the same command used to create it. Array elements are numbered from 1 to N, where N is the size of the array. An array always has a special element zero.","sidebar":"QodlyScript"},"language/basics/lang-blob":{"id":"language/basics/lang-blob","title":"BLOB","description":"A BLOB (Binary Large OBject) attribute, variable or expression is a contiguous series of bytes that can be treated as one whole object, or whose bytes can be addressed individually.","sidebar":"QodlyScript"},"language/basics/lang-boolean":{"id":"language/basics/lang-boolean","title":"Boolean","description":"A boolean attribute, variable or expression can be either true or false.","sidebar":"QodlyScript"},"language/basics/lang-classes":{"id":"language/basics/lang-classes","title":"Classes","description":"Overview","sidebar":"QodlyScript"},"language/basics/lang-collection":{"id":"language/basics/lang-collection","title":"Collection","description":"Collections are ordered lists of values of similar or mixed types (text, number, date, object, boolean, collection, or null).","sidebar":"QodlyScript"},"language/basics/lang-control-flow":{"id":"language/basics/lang-control-flow","title":"Control flow","description":"Regardless of the simplicity or complexity of a method or function, you will always use one or more of three types of programming structures. Programming structures control the flow of execution, whether and in what order statements are executed within the code. There are three types of structures:","sidebar":"QodlyScript"},"language/basics/lang-data-types":{"id":"language/basics/lang-data-types","title":"Data types","description":"Overview","sidebar":"QodlyScript"},"language/basics/lang-date":{"id":"language/basics/lang-date","title":"Date","description":"A Date type attribute, variable or expression can be in the range of 1/1/100 to 12/31/32,767.","sidebar":"QodlyScript"},"language/basics/lang-errors":{"id":"language/basics/lang-errors","title":"Error handling","description":"Error handling is the process of anticipating and responding to errors that might occur in your application. Qodly provides a comprehensive support for catching and reporting errors at runtime, as well as for investigating their conditions.","sidebar":"QodlyScript"},"language/basics/lang-expressions":{"id":"language/basics/lang-expressions","title":"Expressions","description":"Overview","sidebar":"QodlyScript"},"language/basics/lang-identifiers":{"id":"language/basics/lang-identifiers","title":"Identifiers","description":"This section describes the conventions and rules for naming various elements in the QodlyScript language (variables, object properties, classes, etc.).","sidebar":"QodlyScript"},"language/basics/lang-methods":{"id":"language/basics/lang-methods","title":"Methods","description":"A method is basically a piece of code that executes one or several action(s). Qodly provides a large number of built-in methods (i.e. commands) but also lets you create your own user methods. In this section, we describe user methods.","sidebar":"QodlyScript"},"language/basics/lang-null-undefined":{"id":"language/basics/lang-null-undefined","title":"Null and Undefined","description":"Null and Undefined are data types that handle cases where the value of an expression is not known.","sidebar":"QodlyScript"},"language/basics/lang-number":{"id":"language/basics/lang-number","title":"Number","description":"Number is a generic term that stands for:","sidebar":"QodlyScript"},"language/basics/lang-object":{"id":"language/basics/lang-object","title":"Object","description":"Variables, attributes or expressions of the Object type can contain various types of data. The structure of QodlyScript objects is based on the classic principle of \\"property/value\\" pairs. The syntax of these objects is based on JSON notation:","sidebar":"QodlyScript"},"language/basics/lang-operators":{"id":"language/basics/lang-operators","title":"Operators","description":"An operator is a symbol or a group of symbols that you use to check, modify, or combine values. You are already familiar with many operators. For example, 1 + 2 uses the addition (or plus sign) operator to add two numbers together, and the result is 3. Comparison operators, like = or >, let you compare two or more values.","sidebar":"QodlyScript"},"language/basics/lang-parameters":{"id":"language/basics/lang-parameters","title":"Parameters","description":"You\'ll often find that you need to pass data to your methods and functions. This is easily done with parameters.","sidebar":"QodlyScript"},"language/basics/lang-pathnames":{"id":"language/basics/lang-pathnames","title":"Pathnames","description":"File and folder functions, properties, and commands allow you to handle files and folders as objects. This makes file and folder management powerful and flexible. For example, to create a new file in the current user\'s Documents folder, you can write:","sidebar":"QodlyScript"},"language/basics/lang-picture":{"id":"language/basics/lang-picture","title":"Picture","description":"A Picture attribute, variable or expression can be any valid image. In general, this includes any picture that can be put on the pasteboard or read from the disk using commands such as READ PICTURE FILE.","sidebar":"QodlyScript"},"language/basics/lang-quicktour":{"id":"language/basics/lang-quicktour","title":"A Quick Tour","description":"Since the QodlyScript language is highly related to web development, printing the traditional \\"Hello, world!\\" message on screen only requires a web form to be displayed and the followinbg line:","sidebar":"QodlyScript"},"language/basics/lang-shared":{"id":"language/basics/lang-shared","title":"Shared objects and collections","description":"Shared objects and shared collections are specific objects and collections whose contents are shared between processes. Shared objects and shared collections are compatible with preemptive processes: they can be passed by reference as parameters to commands such as CALL WORKER.","sidebar":"QodlyScript"},"language/basics/lang-text":{"id":"language/basics/lang-text","title":"Text","description":"A text (or string) value is an attribute, variable, or expression that may contain from 0 to 2 GB of text.","sidebar":"QodlyScript"},"language/basics/lang-time":{"id":"language/basics/lang-time","title":"Time","description":"A Time attribute, variable or expression can be in the range of 0000 to 596,00000.","sidebar":"QodlyScript"},"language/basics/lang-variables":{"id":"language/basics/lang-variables","title":"Variables","description":"Variables store data temporarily in memory.","sidebar":"QodlyScript"},"language/basics/lang-variant":{"id":"language/basics/lang-variant","title":"Variant","description":"Variant is a variable type which allows encapsulating data of any valid regular type in a variable. Typically, this variable type can be used to write generic code returning or receiving values for which the type is not known. This is the case for example for code handling object attributes.","sidebar":"QodlyScript"},"language/BlobClass":{"id":"language/BlobClass","title":"Blob","description":"The Blob class lets you create and manipulate blob objects (4D.Blob).","sidebar":"QodlyScript"},"language/ClassClass":{"id":"language/ClassClass","title":"Class","description":"When a user class is defined in the project, it is loaded in the QodlyScript environment. A class is an object itself, of \\"Class\\" class, which has properties and a function.","sidebar":"QodlyScript"},"language/CollectionClass":{"id":"language/CollectionClass","title":"Collection","description":"The Collection class manages Collection type elements.","sidebar":"QodlyScript"},"language/CryptoKeyClass":{"id":"language/CryptoKeyClass","title":"CryptoKey","description":"The CryptoKey class in QodlyScript encapsulates an asymmetric encryption key pair.","sidebar":"QodlyScript"},"language/DataClassAttributeClass":{"id":"language/DataClassAttributeClass","title":"DataClassAttribute","description":"Dataclass attributes are available as properties of their respective classes. For example:","sidebar":"QodlyScript"},"language/DataClassClass":{"id":"language/DataClassClass","title":"DataClass","description":"A DataClass provides an object interface to a database table. All dataclasses in a Qodly application are available as a property of the ds datastore.","sidebar":"QodlyScript"},"language/DataStoreClass":{"id":"language/DataStoreClass","title":"DataStore","description":"A Datastore is the interface object provided by ORDA to reference and access a database. The Datastore object is returned by the ds command, a shortcut to the main datastore.","sidebar":"QodlyScript"},"language/Directory":{"id":"language/Directory","title":"Directory Class","description":".creationDate"},"language/Document":{"id":"language/Document","title":"Document Class","description":"Description"},"language/EmailObjectClass":{"id":"language/EmailObjectClass","title":"Email","description":"Creating, sending or receiving emails in Qodly is done by handling an Email object.","sidebar":"QodlyScript"},"language/EntityClass":{"id":"language/EntityClass","title":"Entity","description":"An entity is an instance of a Dataclass, like a record of the table matching the dataclass in its associated datastore. It contains the same attributes as the dataclass as well as the data values and specific properties and functions.","sidebar":"QodlyScript"},"language/EntitySelectionClass":{"id":"language/EntitySelectionClass","title":"EntitySelection","description":"An entity selection is an object containing one or more reference(s) to entities belonging to the same Dataclass. An entity selection can contain 0, 1 or X entities from the dataclass -- where X can represent the total number of entities contained in the dataclass.","sidebar":"QodlyScript"},"language/FileClass":{"id":"language/FileClass","title":"File","description":"File objects are created with the File command. They contain references to disk files that may or may not actually exist on disk. For example, when you execute the File command to create a new file, a valid File object is created but nothing is actually stored on disk until you call the file.create() function.","sidebar":"QodlyScript"},"language/FileHandleClass":{"id":"language/FileHandleClass","title":"FileHandle","description":"The FileHandle class has functions that allow you to sequentially read from or append contents to an opened File object. A file handle can access any part of a document.","sidebar":"QodlyScript"},"language/FolderClass":{"id":"language/FolderClass","title":"Folder","description":"Folder objects are created with the Folder command. They contain references to folders that may or may not actually exist on disk. For example, when you execute the Folder command to create a new folder, a valid Folder object is created but nothing is actually stored on disk until you call the folder.create() function.","sidebar":"QodlyScript"},"language/FunctionClass":{"id":"language/FunctionClass","title":"Function","description":"A 4D.Function object contains a piece of code that can be executed from an object, either using the () operator, or using the apply() and call() functions. QodlyScript proposes three kinds of Function objects:","sidebar":"QodlyScript"},"language/HTTPRequestClass":{"id":"language/HTTPRequestClass","title":"HTTPRequest","description":"The HTTPRequest class allows you to handle HTTPRequest objects that can be used to configure and send requests to an HTTP server, as well as to process the HTTP server responses.","sidebar":"QodlyScript"},"language/IMAPTransporterClass":{"id":"language/IMAPTransporterClass","title":"IMAPTransporter","description":"The IMAPTransporter class allows you to retrieve messages from an IMAP email server."},"language/string":{"id":"language/string","title":"String","description":"String is a generic term that stands for both text and string data types.","sidebar":"QodlyScript"},"overview":{"id":"overview","title":"Overview","description":"Welcome to 4D Web Studio preview version","sidebar":"GetStarted"},"README":{"id":"README","title":"qodly documentation","description":"Welcome to the Qodly developer documentation website."},"tutorial-basics/congratulations":{"id":"tutorial-basics/congratulations","title":"Congratulations!","description":"You have just learned the basics of Docusaurus and made some changes to the initial template."},"tutorial-basics/create-a-blog-post":{"id":"tutorial-basics/create-a-blog-post","title":"Create a Blog Post","description":"Docusaurus creates a page for each blog post, but also a blog index page, a tag system, an RSS feed..."},"tutorial-basics/create-a-document":{"id":"tutorial-basics/create-a-document","title":"Create a Document","description":"Documents are groups of pages connected through:"},"tutorial-basics/create-a-page":{"id":"tutorial-basics/create-a-page","title":"Create a Page","description":"Add Markdown or React files to src/pages to create a standalone page:"},"tutorial-basics/deploy-your-site":{"id":"tutorial-basics/deploy-your-site","title":"Deploy your site","description":"Docusaurus is a static-site-generator (also called Jamstack)."},"tutorial-basics/markdown-features":{"id":"tutorial-basics/markdown-features","title":"Markdown Features","description":"Docusaurus supports Markdown and a few additional features."},"tutorial-extras/manage-docs-versions":{"id":"tutorial-extras/manage-docs-versions","title":"Manage Docs Versions","description":"Docusaurus can manage multiple versions of your docs."},"tutorial-extras/translate-your-site":{"id":"tutorial-extras/translate-your-site","title":"Translate your site","description":"Let\'s translate docs/intro.md to French."}}}')}}]);
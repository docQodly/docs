"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([["40014"],{24755:function(e,s,n){n.r(s),n.d(s,{metadata:()=>o,contentTitle:()=>a,default:()=>u,assets:()=>c,toc:()=>d,frontMatter:()=>r});var o=JSON.parse('{"id":"orda/sessions","title":"User sessions","description":"When a user connects to a Qodly application, a user session is automatically opened on the Qodly server to manage their access with regards to their privileges. A session cookie is generated.","source":"@site/docs/orda/sessions.md","sourceDirName":"orda","slug":"/orda/sessions","permalink":"/docs/next/orda/sessions","draft":false,"unlisted":false,"editUrl":"https://github.com/docQodly/docs/edit/main/docs/orda/sessions.md","tags":[],"version":"current","frontMatter":{"id":"sessions","title":"User sessions"},"sidebar":"Develop","previous":{"title":"Queries","permalink":"/docs/next/orda/queries"},"next":{"title":"QodlyScript Reference","permalink":"/docs/next/category/qodlyscript"}}'),t=n("85893"),i=n("50065");let r={id:"sessions",title:"User sessions"},a=void 0,c={},d=[];function l(e){let s={a:"a",admonition:"admonition",code:"code",em:"em",p:"p",strong:"strong",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:["When a user connects to a Qodly application, a ",(0,t.jsx)(s.em,{children:"user session"})," is automatically opened on the Qodly server to manage their access with regards to their privileges. A session cookie is generated."]}),"\n",(0,t.jsxs)(s.p,{children:["The session automatically gets ",(0,t.jsx)(s.a,{href:"/docs/next/studio/roles/overview",children:"privileges"})," according to the ",(0,t.jsx)(s.strong,{children:"Profile"})," ",(0,t.jsx)(s.a,{href:"/docs/next/cloud/userAccountManagement#add-new-user",children:"associated to the user in the console"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:["The Qodly developer can also handle a user session through the ",(0,t.jsxs)(s.a,{href:"/docs/next/language/SessionClass",children:[(0,t.jsx)(s.code,{children:"Session"})," class"]}),". For example, you can get the list of privileges associated to the session using the ",(0,t.jsx)(s.a,{href:"/docs/next/language/SessionClass#getprivileges",children:(0,t.jsx)(s.code,{children:"getPrivileges()"})})," function, or store user information in the session's ",(0,t.jsx)(s.a,{href:"/docs/next/language/SessionClass#storage",children:(0,t.jsx)(s.code,{children:"storage"})})," property."]}),"\n",(0,t.jsx)(s.admonition,{type:"info",children:(0,t.jsxs)(s.p,{children:["A Qodly user session never expires, however the parent ",(0,t.jsx)(s.strong,{children:"Amazon Cognito"})," session expires after one week of inactivity."]})})]})}function u(e={}){let{wrapper:s}={...(0,i.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},50065:function(e,s,n){n.d(s,{Z:function(){return a},a:function(){return r}});var o=n(67294);let t={},i=o.createContext(t);function r(e){let s=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),o.createElement(i.Provider,{value:s},e.children)}}}]);
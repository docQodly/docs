"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([[1781],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>y});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),d=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=d(r),m=a,y=c["".concat(s,".").concat(m)]||c[m]||u[m]||i;return r?n.createElement(y,o(o({ref:t},p),{},{components:r})):n.createElement(y,o({ref:t},p))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:a,o[1]=l;for(var d=2;d<i;d++)o[d]=r[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},81085:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var n=r(87462),a=(r(67294),r(3905));const i={id:"$orderby",title:"$orderby"},o=void 0,l={unversionedId:"api/$orderby",id:"api/$orderby",title:"$orderby",description:"Functionality",source:"@site/docs/api/$orderby.md",sourceDirName:"api",slug:"/api/$orderby",permalink:"/docs/api/$orderby",draft:!1,editUrl:"https://github.com/docQodly/docs/edit/main/docs/api/$orderby.md",tags:[],version:"current",frontMatter:{id:"$orderby",title:"$orderby"},sidebar:"API",previous:{title:"$method",permalink:"/docs/api/$method"},next:{title:"$queryplan",permalink:"/docs/api/$queryplan"}},s={},d=[{value:"Functionality",id:"functionality",level:2},{value:"Definition",id:"definition",level:3},{value:"Syntax",id:"syntax",level:3},{value:"Detailed Behavior",id:"detailed-behavior",level:2},{value:"Default Sorting",id:"default-sorting",level:3},{value:"Using the <code>$orderby</code> Parameter",id:"using-the-orderby-parameter",level:3},{value:"Using Specific Formats",id:"using-specific-formats",level:3},{value:"Example Usage",id:"example-usage",level:3}],p={toc:d};function c(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"functionality"},"Functionality"),(0,a.kt)("h3",{id:"definition"},"Definition"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"$orderby")," endpoint sorts the data returned by the attribute and sorting order defined. It allows specifying the order of sorting, either in ascending or descending order, for one or more attributes."),(0,a.kt)("h3",{id:"syntax"},"Syntax"),(0,a.kt)("p",null,"To sort entities returned by a REST request, use the following format:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'GET /rest/{{dataClass}}/?$filter="{{filterExpression}}"&$orderby="{{orderByExpression}}"\n')),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"The ",(0,a.kt)("inlineCode",{parentName:"p"},"$orderby")," endpoint accepts one or more attributes for sorting in ascending or descending order. For example, ",(0,a.kt)("inlineCode",{parentName:"p"},'$orderby="lastName desc, salary asc"')," sorts entities by last name in descending order and salary in ascending order.")),(0,a.kt)("h2",{id:"detailed-behavior"},"Detailed Behavior"),(0,a.kt)("h3",{id:"default-sorting"},"Default Sorting"),(0,a.kt)("p",null,"By default, data is sorted in ascending order."),(0,a.kt)("h3",{id:"using-the-orderby-parameter"},"Using the ",(0,a.kt)("inlineCode",{parentName:"h3"},"$orderby")," Parameter"),(0,a.kt)("p",null,"When ",(0,a.kt)("inlineCode",{parentName:"p"},"$orderby")," is specified, the following occurs:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The entities returned by the REST request are sorted based on the attributes and sorting order provided.")),(0,a.kt)("h3",{id:"using-specific-formats"},"Using Specific Formats"),(0,a.kt)("p",null,"To sort entities by multiple attributes, delimit them with a comma and specify the sorting order for each attribute."),(0,a.kt)("h3",{id:"example-usage"},"Example Usage"),(0,a.kt)("p",null,"In this example, entities are retrieved and sorted simultaneously:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'GET /rest/Employee/?$filter="salary!=0"&$orderby="salary DESC,lastName ASC,firstName ASC"\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Response:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "__entityModel": "Users",\n  "__COUNT": 10,\n  "__SENT": 10,\n  "__FIRST": 0,\n  "__ENTITIES": [\n    {\n      "__KEY": "1",\n      "__STAMP": 1,\n      "firstName": "Alice",\n      "lastName": "Adams",\n      "salary": 90000\n    },\n    {\n      "__KEY": "2",\n      "__STAMP": 2,\n      "firstName": "Bob",\n      "lastName": "Brown",\n      "salary": 80000\n    },\n    {\n      "__KEY": "3",\n      "__STAMP": 3,\n      "firstName": "Carol",\n      "lastName": "Clark",\n      "salary": 55000\n    }\n  ]\n}\n')),(0,a.kt)("p",null,"The example below sorts the entity defined by the lastName attribute in ascending order:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'GET /rest/Employee/$entityset/CB1BCC603DB0416D939B4ED379277F02?$orderby="lastName"\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Response:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "__entityModel": "Users",\n  "__COUNT": 10,\n  "__SENT": 10,\n  "__FIRST": 0,\n  "__ENTITIES": [\n    {\n      "__KEY": "1",\n      "__STAMP": 1,\n      "firstName": "John",\n      "lastName": "Smith",\n      "salary": 90000\n    },\n    {\n      "__KEY": "2",\n      "__STAMP": 2,\n      "firstName": "Susan",\n      "lastName": "O\'Leary",\n      "salary": 80000\n    }\n    // more entities\n  ]\n}\n')))}c.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([[4373],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>y});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),d=r,y=c["".concat(s,".").concat(d)]||c[d]||m[d]||i;return n?a.createElement(y,o(o({ref:t},u),{},{components:n})):a.createElement(y,o({ref:t},u))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},12574:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const i={id:"classFunctionsParameters",title:"Function Parameters"},o=void 0,l={unversionedId:"api/classFunctionsParameters",id:"api/classFunctionsParameters",title:"Function Parameters",description:"Overview",source:"@site/docs/api/classFunctionsParameters.md",sourceDirName:"api",slug:"/api/classFunctionsParameters",permalink:"/docs/api/classFunctionsParameters",draft:!1,editUrl:"https://github.com/docQodly/docs/edit/main/docs/api/classFunctionsParameters.md",tags:[],version:"current",frontMatter:{id:"classFunctionsParameters",title:"Function Parameters"},sidebar:"API",previous:{title:"Overview",permalink:"/docs/api/classFunctionsOverview"},next:{title:"Function Calls",permalink:"/docs/api/classfunctionsFunctionCalls"}},s={},p=[{value:"Overview",id:"overview",level:2},{value:"Example",id:"example",level:3},{value:"Entity Parameter",id:"entity-parameter",level:2}],u={toc:p};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"Function parameters within ORDA user classes offer flexible customization options for data retrieval and manipulation. These parameters are integral for tailoring requests, enabling various data types and operations."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Usage Syntax")),(0,r.kt)("p",null,"When making a POST request to an ORDA user class function, adhere to this syntax:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"POST /rest/{{dataClass}}/{{functionName}}\n")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Parameters should be enclosed within a JSON collection in the request body.","*")),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Scalar Value Parameter")),(0,r.kt)("p",null,"For scalar value parameters, encapsulate them within a collection in the request body. For instance, when invoking the ",(0,r.kt)("inlineCode",{parentName:"p"},"getCities()")," function with text parameters, utilize this structure:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"POST /rest/City/getCities\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Body Parameters:")),(0,r.kt)("p",null,'["Aguada","Paris"]'),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},'All JSON data types are supported, including JSON pointers. Dates can be conveyed as strings adhering to ISO 8601 format (e.g., "2020-08-22T22:00:000Z").')),(0,r.kt)("h2",{id:"entity-parameter"},"Entity Parameter"),(0,r.kt)("p",null,"Entities conveyed as parameters are referenced by their key (","_","_","KEY property) on the server. Omitting the key parameter loads a new entity into server memory. Additionally, attribute values for the entity can be passed, automatically utilized for the entity on the server."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Modified attribute values for an existing entity prompt automatic execution of the called ORDA data model function on the server. This enables result examination post-business rule application from the client application, facilitating informed decisions regarding entity saving on the server.","*")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Fallback Behavior"),": If the parameters are not provided or invalid, the function will handle the request with a default behavior, ensuring smooth operation even in unexpected scenarios."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameter Specifications")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Requirement"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Attributes of the entity"),(0,r.kt)("td",{parentName:"tr",align:null},"mixed"),(0,r.kt)("td",{parentName:"tr",align:null},"Mandatory"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional - Values to modify.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","_","DATACLASS"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Mandatory"),(0,r.kt)("td",{parentName:"tr",align:null},"Indicates the Dataclass of the entity.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","_","ENTITY"),(0,r.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"Mandatory"),(0,r.kt)("td",{parentName:"tr",align:null},"True to indicate that the parameter is an entity.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","_","KEY"),(0,r.kt)("td",{parentName:"tr",align:null},"Mixed"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional"),(0,r.kt)("td",{parentName:"tr",align:null},"Primary key of the entity. If not provided, a new entity is created on the server with the given attributes. If provided, the entity corresponding to the key is loaded on the server with the given attributes.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "__DATACLASS": "Employee",\n  "__ENTITY": true,\n  "__KEY": 1,\n  "firstName": "John",\n  "lastName": "Doe",\n  "salary": 75000\n}\n')))}c.isMDXComponent=!0}}]);
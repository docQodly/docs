"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([["6982"],{44369:function(e,t,n){n.r(t),n.d(t,{metadata:()=>r,contentTitle:()=>o,default:()=>u,assets:()=>d,toc:()=>l,frontMatter:()=>s});var r=JSON.parse('{"id":"language/commands/convertPicture","title":"convertPicture","description":"convertPicture ( aPicture string )convertPicture ( aPicture string , compression : number )","source":"@site/docs/language/commands/convertPicture.md","sourceDirName":"language/commands","slug":"/language/commands/convertPicture","permalink":"/docs/language/commands/convertPicture","draft":false,"unlisted":false,"editUrl":"https://github.com/docQodly/docs/edit/main/docs/language/commands/convertPicture.md","tags":[],"version":"current","frontMatter":{"id":"convertPicture","title":"convertPicture"},"sidebar":"Develop","previous":{"title":"convertFromString","permalink":"/docs/language/commands/convertFromString"},"next":{"title":"convertToString","permalink":"/docs/language/commands/convertToString"}}'),c=n("85893"),i=n("50065");let s={id:"convertPicture",title:"convertPicture"},o=void 0,d={},l=[{value:"Description",id:"description",level:4}];function a(e){let t={a:"a",code:"code",em:"em",h4:"h4",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(t.p,{children:[(0,c.jsx)(t.strong,{children:"convertPicture"})," ( ",(0,c.jsx)(t.em,{children:"aPicture"})," : picture , ",(0,c.jsx)(t.em,{children:"codec"})," : string )",(0,c.jsx)("br",{}),(0,c.jsx)(t.strong,{children:"convertPicture"})," ( ",(0,c.jsx)(t.em,{children:"aPicture"})," : picture , ",(0,c.jsx)(t.em,{children:"codec"})," : string , ",(0,c.jsx)(t.em,{children:"compression"})," : number )"]}),"\n",(0,c.jsxs)(t.table,{children:[(0,c.jsx)(t.thead,{children:(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.th,{children:"Parameter"}),(0,c.jsx)(t.th,{children:"Type"}),(0,c.jsx)(t.th,{style:{textAlign:"center"}}),(0,c.jsx)(t.th,{children:"Description"})]})}),(0,c.jsxs)(t.tbody,{children:[(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"aPicture"}),(0,c.jsx)(t.td,{children:"picture"}),(0,c.jsx)(t.td,{style:{textAlign:"center"},children:"\u2190"}),(0,c.jsx)(t.td,{children:"Picture to be converted"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{style:{textAlign:"center"},children:"\u2192"}),(0,c.jsx)(t.td,{children:"Converted picture"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"codec"}),(0,c.jsx)(t.td,{children:"string"}),(0,c.jsx)(t.td,{style:{textAlign:"center"},children:"\u2192"}),(0,c.jsx)(t.td,{children:"Picture Codec ID"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"compression"}),(0,c.jsx)(t.td,{children:"number"}),(0,c.jsx)(t.td,{style:{textAlign:"center"},children:"\u2192"}),(0,c.jsx)(t.td,{children:"Quality of compression"})]})]})]}),"\n",(0,c.jsx)(t.h4,{id:"description",children:"Description"}),"\n",(0,c.jsxs)(t.p,{children:["The ",(0,c.jsx)(t.code,{children:"convertPicture"})," command converts ",(0,c.jsx)(t.em,{children:"aPicture"})," into a new type."]}),"\n",(0,c.jsxs)(t.p,{children:["The ",(0,c.jsx)(t.em,{children:"codec"}),' parameter indicates the type of picture to be generated. A Codec can be an extension (for example, ".gif") or a Mime type (for example, "image/jpeg"). You can get a list of Codecs that are available in the ',(0,c.jsx)(t.a,{href:"/docs/language/basics/lang-picture#picture-codec-ids",children:"Picture Codec IDs"})," section."]})]})}function u(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,c.jsx)(t,{...e,children:(0,c.jsx)(a,{...e})}):a(e)}},50065:function(e,t,n){n.d(t,{Z:function(){return o},a:function(){return s}});var r=n(67294);let c={},i=r.createContext(c);function s(e){let t=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:s(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);
"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([[9062],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>h});var n=a(67294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var o=n.createContext({}),p=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,o=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(a),m=l,h=d["".concat(o,".").concat(m)]||d[m]||u[m]||r;return a?n.createElement(h,s(s({ref:t},c),{},{components:a})):n.createElement(h,s({ref:t},c))}));function h(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,s=new Array(r);s[0]=m;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[d]="string"==typeof e?e:l,s[1]=i;for(var p=2;p<r;p++)s[p]=a[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},86777:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var n=a(87462),l=(a(67294),a(3905));const r={id:"lang-classes",title:"Classes"},s=void 0,i={unversionedId:"language/basics/lang-classes",id:"language/basics/lang-classes",title:"Classes",description:"Overview",source:"@site/docs/language/basics/lang-classes.md",sourceDirName:"language/basics",slug:"/language/basics/lang-classes",permalink:"/docs/language/basics/lang-classes",draft:!1,editUrl:"https://github.com/docQodly/docs/edit/main/docs/language/basics/lang-classes.md",tags:[],version:"current",frontMatter:{id:"lang-classes",title:"Classes"},sidebar:"Programming",previous:{title:"Methods",permalink:"/docs/language/basics/lang-methods"},next:{title:"Parameters",permalink:"/docs/language/basics/lang-parameters"}},o={},p=[{value:"Overview",id:"overview",level:2},{value:"Class definition",id:"class-definition",level:2},{value:"Class stores",id:"class-stores",level:2},{value:"<code>cs</code>",id:"cs",level:3},{value:"cs -&gt; classStore",id:"cs---classstore",level:4},{value:"Example",id:"example",level:4},{value:"<code>4D</code>",id:"4d",level:3},{value:"4D -&gt; classStore",id:"4d---classstore",level:4},{value:"Example",id:"example-1",level:4},{value:"Class object",id:"class-object",level:2},{value:"Inheritance",id:"inheritance",level:3},{value:"<code>objectClass</code>",id:"objectclass",level:3},{value:"<code>objectClass ( object ) -&gt; object | null</code>",id:"objectclass--object----object--null",level:4},{value:"<code>instanceOf</code>",id:"instanceof",level:3},{value:"<code>instanceOf ( object , class ) -&gt; boolean</code>",id:"instanceof--object--class----boolean",level:4},{value:"Class keywords",id:"class-keywords",level:2},{value:"<code>function</code>",id:"function",level:3},{value:"Syntax",id:"syntax",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Return value",id:"return-value",level:4},{value:"Example 1",id:"example-1-1",level:4},{value:"Example 2",id:"example-2",level:4},{value:"<code>function get</code> and <code>function set</code>",id:"function-get-and-function-set",level:3},{value:"Syntax",id:"syntax-1",level:4},{value:"Example 1",id:"example-1-2",level:4},{value:"Example 2",id:"example-2-1",level:4},{value:"<code>constructor</code>",id:"constructor",level:3},{value:"Syntax",id:"syntax-2",level:4},{value:"Example",id:"example-3",level:4},{value:"<code>property</code>",id:"property",level:3},{value:"Syntax",id:"syntax-3",level:4},{value:"Example",id:"example-4",level:4},{value:"<code>extends &lt;ClassName&gt;</code>",id:"extends-classname",level:3},{value:"Syntax",id:"syntax-4",level:4},{value:"Example",id:"example-5",level:4},{value:"<code>super</code>",id:"super",level:3},{value:"Syntax",id:"syntax-5",level:4},{value:"Example 1",id:"example-1-3",level:4},{value:"Example 2",id:"example-2-2",level:4},{value:"<code>this</code>",id:"this",level:3},{value:"Syntax",id:"syntax-6",level:4}],c={toc:p};function d(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"overview"},"Overview"),(0,l.kt)("p",null,"The QodlyScript language supports the concept of ",(0,l.kt)("strong",{parentName:"p"},"classes"),". In a programming language, using a class allows you to define an object behaviour with associated properties and functions."),(0,l.kt)("p",null,"Once a user class is defined, you can ",(0,l.kt)("strong",{parentName:"p"},"instantiate")," objects of this class anywhere in your code. Each object is an instance of its class. A class can ",(0,l.kt)("a",{parentName:"p",href:"#class-extends-classname"},(0,l.kt)("inlineCode",{parentName:"a"},"extend"))," another class, and then inherits from its ",(0,l.kt)("a",{parentName:"p",href:"#function"},"functions")," and properties (",(0,l.kt)("a",{parentName:"p",href:"#property"},"declared")," and ",(0,l.kt)("a",{parentName:"p",href:"#function-get-and-function-set"},"computed"),")."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The class model in QodlyScript is similar to classes in JavaScript, and based on a chain of prototypes.")),(0,l.kt)("p",null,"For example, you could create a ",(0,l.kt)("inlineCode",{parentName:"p"},"Person")," class with the following definition:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},'//Class: Person.4qm\n constructor(firstname : string, lastname : string)\n this.firstName=firstname\n this.lastName=lastname\n\nfunction get fullName() -> fullName : string\n fullName=this.firstName+" "+this.lastName\n \nfunction sayHello() -> welcome : string\n welcome="Hello "+this.fullName\n')),(0,l.kt)("p",null,'In a method, creating a "Person":'),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'var person : cs.Person //object of Person class  \nvar hello : string\nperson=cs.Person.new("John","Doe")\n//person:{firstName: "John", lastName: "Doe", fullName: "John Doe"}\nhello=person.sayHello() //"Hello John Doe"\n')),(0,l.kt)("h2",{id:"class-definition"},"Class definition"),(0,l.kt)("p",null,"A user class in Qodly is defined by a specific ",(0,l.kt)("a",{parentName:"p",href:"/docs/studio/coding#methods-and-classes"},"method file")," (.4qm), stored in the ",(0,l.kt)("inlineCode",{parentName:"p"},"/Project/Sources/Classes/")," folder. The name of the file is the class name."),(0,l.kt)("p",null,"When naming classes, you should keep in mind the following rules:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"A ",(0,l.kt)("a",{parentName:"li",href:"/docs/language/basics/lang-identifiers#classes"},"class name")," must be compliant with ",(0,l.kt)("a",{parentName:"li",href:"/docs/language/basics/lang-identifiers#object-properties"},"property naming rules"),"."),(0,l.kt)("li",{parentName:"ul"},"Class names are case sensitive."),(0,l.kt)("li",{parentName:"ul"},"Giving the same name to a user class and a datastore's dataclass is not recommended, in order to prevent any conflict.")),(0,l.kt)("p",null,'For example, a class named "Polygon" will be based upon the following file:'),(0,l.kt)("p",null,"Project folder\nProject\nSources\nClasses\nPolygon.4qm"),(0,l.kt)("h2",{id:"class-stores"},"Class stores"),(0,l.kt)("p",null,"Available classes are accessible from their class stores. Two class stores are available:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"cs")," for user class store"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"4D")," for built-in class store")),(0,l.kt)("h3",{id:"cs"},(0,l.kt)("inlineCode",{parentName:"h3"},"cs")),(0,l.kt)("h4",{id:"cs---classstore"},"cs -> classStore"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"classStore"),(0,l.kt)("td",{parentName:"tr",align:null},"object"),(0,l.kt)("td",{parentName:"tr",align:null},"<-"),(0,l.kt)("td",{parentName:"tr",align:null},"User class store for the project")))),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"cs")," command returns the user class store for the current project. It returns all user classes ",(0,l.kt)("a",{parentName:"p",href:"#class-definition"},"defined")," in the opened project. By default, only project ",(0,l.kt)("a",{parentName:"p",href:"/docs/orda/data-model"},"ORDA classes")," are available."),(0,l.kt)("h4",{id:"example"},"Example"),(0,l.kt)("p",null,"You want to create a new instance of an object of ",(0,l.kt)("inlineCode",{parentName:"p"},"myClass"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},"instance=cs.myClass.new()\n")),(0,l.kt)("h3",{id:"4d"},(0,l.kt)("inlineCode",{parentName:"h3"},"4D")),(0,l.kt)("h4",{id:"4d---classstore"},"4D -> classStore"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"classStore"),(0,l.kt)("td",{parentName:"tr",align:null},"object"),(0,l.kt)("td",{parentName:"tr",align:null},"<-"),(0,l.kt)("td",{parentName:"tr",align:null},"4D class store")))),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"4D")," command returns the class store for available built-in QodlyScript classes. It provides access to specific classes such as ",(0,l.kt)("a",{parentName:"p",href:"/docs/language/CryptoKeyClass"},"CryptoKey"),"."),(0,l.kt)("h4",{id:"example-1"},"Example"),(0,l.kt)("p",null,"You want to create a new key in the ",(0,l.kt)("inlineCode",{parentName:"p"},"CryptoKey")," class:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},'key=4D.CryptoKey.new(newObject("type","ECDSA","curve","prime256v1"))\n')),(0,l.kt)("h2",{id:"class-object"},"Class object"),(0,l.kt)("p",null,"When a class is ",(0,l.kt)("a",{parentName:"p",href:"#class-definition"},"defined")," in the project, it is loaded in the QodlyScript language environment. A class is an object itself, of ",(0,l.kt)("a",{parentName:"p",href:"/docs/language/ClassClass"},'"Class" class'),". A class object has the following properties and function:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/language/ClassClass#name"},(0,l.kt)("inlineCode",{parentName:"a"},"name"))," string"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/language/ClassClass#superclass"},(0,l.kt)("inlineCode",{parentName:"a"},"superclass"))," object (null if none)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/language/ClassClass#new"},(0,l.kt)("inlineCode",{parentName:"a"},"new()"))," function, allowing to instantiate class objects.")),(0,l.kt)("p",null,"In addition, a class object can reference a ",(0,l.kt)("a",{parentName:"p",href:"#class-constructor"},(0,l.kt)("inlineCode",{parentName:"a"},"constructor"))," object (optional)."),(0,l.kt)("p",null,"A class object is a ",(0,l.kt)("a",{parentName:"p",href:"/docs/language/basics/lang-shared"},"shared object")," and can therefore be accessed from different processes simultaneously."),(0,l.kt)("h3",{id:"inheritance"},"Inheritance"),(0,l.kt)("p",null,"If a class inherits from another class (i.e. the ",(0,l.kt)("a",{parentName:"p",href:"#extends-classname"},"extends")," keyword is used in its definition), the parent class is its ",(0,l.kt)("a",{parentName:"p",href:"/docs/language/ClassClass#superclass"},(0,l.kt)("inlineCode",{parentName:"a"},"superclass")),"."),(0,l.kt)("p",null,"When QodlyScript does not find a function or a property in a class, it searches it in its ",(0,l.kt)("a",{parentName:"p",href:"/docs/language/ClassClass#superclass"},(0,l.kt)("inlineCode",{parentName:"a"},"superclass")),'; if not found, QodlyScript continues searching in the superclass of the superclass, and so on until there is no more superclass (all objects inherit from the "4D.Object" superclass).'),(0,l.kt)("h3",{id:"objectclass"},(0,l.kt)("inlineCode",{parentName:"h3"},"objectClass")),(0,l.kt)("h4",{id:"objectclass--object----object--null"},(0,l.kt)("inlineCode",{parentName:"h4"},"objectClass ( object ) -> object | null")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/language/object#objectclass"},(0,l.kt)("inlineCode",{parentName:"a"},"objectClass"))," returns the class of the object passed in parameter."),(0,l.kt)("h3",{id:"instanceof"},(0,l.kt)("inlineCode",{parentName:"h3"},"instanceOf")),(0,l.kt)("h4",{id:"instanceof--object--class----boolean"},(0,l.kt)("inlineCode",{parentName:"h4"},"instanceOf ( object , class ) -> boolean")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/language/object#instanceof"},(0,l.kt)("inlineCode",{parentName:"a"},"instanceOf"))," returns ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," if ",(0,l.kt)("inlineCode",{parentName:"p"},"object")," belongs to ",(0,l.kt)("inlineCode",{parentName:"p"},"class")," or to one of its inherited classes, and ",(0,l.kt)("inlineCode",{parentName:"p"},"false")," otherwise."),(0,l.kt)("h2",{id:"class-keywords"},"Class keywords"),(0,l.kt)("p",null,"Specific QodlyScript keywords can be used in class definitions:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"function <Name>")," to define class functions of the objects."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"function get <Name>")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"function set <Name>")," to define computed properties of the objects."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"constructor")," to define static properties of the objects."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"property")," to define static properties of the objects with a type."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"extends <ClassName>")," to define inheritance.")),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},(0,l.kt)("a",{parentName:"p",href:"/docs/orda/data-model"},"ORDA data model classes")," support additional keywords:"),(0,l.kt)("ul",{parentName:"admonition"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/orda/data-model#exposed-vs-non-exposed-functions"},(0,l.kt)("inlineCode",{parentName:"a"},"exposed"))," to allow external access to the function,"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/orda/data-model#function-query-attributename"},(0,l.kt)("inlineCode",{parentName:"a"},"function query <attributeName>"))," and ",(0,l.kt)("a",{parentName:"li",href:"/docs/orda/data-model#function-orderby-attributename"},(0,l.kt)("inlineCode",{parentName:"a"},"function orderBy <attributeName>"))," to define additional database functions for calculated attributes."))),(0,l.kt)("h3",{id:"function"},(0,l.kt)("inlineCode",{parentName:"h3"},"function")),(0,l.kt)("h4",{id:"syntax"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},"function <name>({parameterName : type, ...}){->parameterName : type}\n// code\n")),(0,l.kt)("p",null,"Class functions are specific properties of the class. They are objects of the ",(0,l.kt)("a",{parentName:"p",href:"/docs/language/FunctionClass"},"4D.Function")," class."),(0,l.kt)("p",null,"In the class definition file, function declarations use the ",(0,l.kt)("inlineCode",{parentName:"p"},"function")," keyword, and the name of the function. The function name must be compliant with ",(0,l.kt)("a",{parentName:"p",href:"/docs/language/basics/lang-identifiers#object-properties"},"property naming rules"),"."),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},'Starting a function name with an underscore character ("_") will exclude the function from the autocompletion features in the code editor. For example, if you declare ',(0,l.kt)("inlineCode",{parentName:"p"},"function _myPrivateFunction")," in ",(0,l.kt)("inlineCode",{parentName:"p"},"MyClass"),", it will not be proposed in the code editor when you type in ",(0,l.kt)("inlineCode",{parentName:"p"},'"cs.MyClass. "'),".")),(0,l.kt)("p",null,"Immediately following the function name, ",(0,l.kt)("a",{parentName:"p",href:"#parameters"},"parameters")," for the function can be declared with an assigned name and data type, including the return parameter (optional). For example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},"function computeArea(width : integer , height : integer)-> area : integer\n")),(0,l.kt)("p",null,"Within a class function, the ",(0,l.kt)("inlineCode",{parentName:"p"},"this")," command is used as the object instance. For example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},'function setFullname(firstname : string, lastname : string)\n this.firstName=firstname\n this.lastName=lastname\n\nfunction getFullname()->fullname : string\n fullname=this.firstName+" "+uppercase(this.lastName)\n')),(0,l.kt)("p",null,"For a class function, the ",(0,l.kt)("inlineCode",{parentName:"p"},"currentMethodName")," command returns ",(0,l.kt)("inlineCode",{parentName:"p"},"<ClassName>.<FunctionName>"),', for example "MyClass.myFunction".'),(0,l.kt)("p",null,"In the application code, class functions are called as member methods of the object instance and can receive ",(0,l.kt)("a",{parentName:"p",href:"#parameters"},"parameters")," if any. The following syntaxes are supported:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"use of the ",(0,l.kt)("inlineCode",{parentName:"li"},"()")," operator. For example, ",(0,l.kt)("inlineCode",{parentName:"li"},'myObject.methodName("hello")')),(0,l.kt)("li",{parentName:"ul"},'use of a "4D.Function" class member method:',(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/language/FunctionClass#apply"},(0,l.kt)("inlineCode",{parentName:"a"},"apply()"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/language/FunctionClass#call"},(0,l.kt)("inlineCode",{parentName:"a"},"call()")))))),(0,l.kt)("h4",{id:"parameters"},"Parameters"),(0,l.kt)("p",null,"Function parameters are declared using the parameter name and the parameter type, separated by a colon (:). The parameter name must be compliant with ",(0,l.kt)("a",{parentName:"p",href:"/docs/language/basics/lang-identifiers#object-properties"},"property naming rules"),". Multiple parameters (and types) are separated by commas (,)."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},"function add(x, y : variant, z : integer, xy : object)\n")),(0,l.kt)("p",null,"If the type is not stated, the parameter will be defined as ",(0,l.kt)("inlineCode",{parentName:"p"},"variant"),"."),(0,l.kt)("h4",{id:"return-value"},"Return value"),(0,l.kt)("p",null,"You declare the return parameter (optional) by adding an arrow (",(0,l.kt)("inlineCode",{parentName:"p"},"->"),") and the return parameter definition after the input parameter(s) list, or a colon (",(0,l.kt)("inlineCode",{parentName:"p"},":"),") and the return parameter type only. For example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},"function add(x : variant, y : integer)->result : integer\n result=x+y\n")),(0,l.kt)("p",null,"You can also declare the return parameter by adding only ",(0,l.kt)("inlineCode",{parentName:"p"},": type")," and use the ",(0,l.kt)("a",{parentName:"p",href:"/docs/language/basics/lang-parameters#return-expression"},(0,l.kt)("inlineCode",{parentName:"a"},"return expression"))," (it will also end the function execution). For example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},"function add(x : variant, y : integer): integer\n // some code\n return x+y\n")),(0,l.kt)("h4",{id:"example-1-1"},"Example 1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},'// Class: Rectangle\nconstructor(width : integer, height : integer)\n this.name="Rectangle"\n this.height=height\n this.width=width\n\n// Function definition\nfunction getArea()->result : integer\n result=(this.height)*(this.width)\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},"// In a project method\n\nvar rect : cs.Rectangle\nvar area : number\n\nrect=cs.Rectangle.new(50,100)  \narea=rect.getArea() //5000\n")),(0,l.kt)("h4",{id:"example-2"},"Example 2"),(0,l.kt)("p",null,"This example uses the ",(0,l.kt)("a",{parentName:"p",href:"/docs/language/basics/lang-parameters#return-expression"},(0,l.kt)("inlineCode",{parentName:"a"},"return expression")),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},"function getRectArea(width : integer, height : integer) : integer\n if (width > 0 && height > 0)\n  return width * height\n else\n  return 0\n end\n")),(0,l.kt)("h3",{id:"function-get-and-function-set"},(0,l.kt)("inlineCode",{parentName:"h3"},"function get")," and ",(0,l.kt)("inlineCode",{parentName:"h3"},"function set")),(0,l.kt)("h4",{id:"syntax-1"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},"function get <name>()->result : type\n// code\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},"function set <name>(parameterName : type)\n// code\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"function get")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"function set")," are accessors defining ",(0,l.kt)("strong",{parentName:"p"},"computed properties")," in the class. A computed property is a named property with a data type that masks a calculation. When a computed property value is accessed, QodlyScript substitutes the corresponding accessor's code:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"when the property is read, the ",(0,l.kt)("inlineCode",{parentName:"li"},"function get")," is executed,"),(0,l.kt)("li",{parentName:"ul"},"when the property is written, the ",(0,l.kt)("inlineCode",{parentName:"li"},"function set")," is executed.")),(0,l.kt)("p",null,"If the property is not accessed, the code never executes."),(0,l.kt)("p",null,"Computed properties are designed to handle data that do not necessary need to be kept in memory. They are usually based upon persistent properties. For example, if a class object contains as persistent property the ",(0,l.kt)("em",{parentName:"p"},"gross price")," and the ",(0,l.kt)("em",{parentName:"p"},"VAT rate"),", the ",(0,l.kt)("em",{parentName:"p"},"net price")," could be handled by a computed property."),(0,l.kt)("p",null,"In the class definition file, computed property declarations use the ",(0,l.kt)("inlineCode",{parentName:"p"},"function get")," (the ",(0,l.kt)("em",{parentName:"p"},"getter"),") and ",(0,l.kt)("inlineCode",{parentName:"p"},"function set")," (the ",(0,l.kt)("em",{parentName:"p"},"setter"),") keywords, followed by the name of the property. The name must be compliant with ",(0,l.kt)("a",{parentName:"p",href:"/docs/language/basics/lang-identifiers#object-properties"},"property naming rules"),"."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"function get")," returns a value of the property type and ",(0,l.kt)("inlineCode",{parentName:"p"},"function set")," takes a parameter of the property type. Both arguments must comply with standard ",(0,l.kt)("a",{parentName:"p",href:"#parameters"},"function parameters"),"."),(0,l.kt)("p",null,"When both functions are defined, the computed property is ",(0,l.kt)("strong",{parentName:"p"},"read-write"),". If only a ",(0,l.kt)("inlineCode",{parentName:"p"},"function get")," is defined, the computed property is ",(0,l.kt)("strong",{parentName:"p"},"read-only"),". In this case, an error is returned if the code tries to modify the property. If only a ",(0,l.kt)("inlineCode",{parentName:"p"},"function set")," is defined, QodlyScript returns ",(0,l.kt)("em",{parentName:"p"},"undefined")," when the property is read."),(0,l.kt)("p",null,"The type of the computed property is defined by the ",(0,l.kt)("inlineCode",{parentName:"p"},"return")," type declaration of the ",(0,l.kt)("em",{parentName:"p"},"getter"),". It can be of any ",(0,l.kt)("a",{parentName:"p",href:"/docs/language/basics/lang-object"},"valid property type"),"."),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Assigning ",(0,l.kt)("em",{parentName:"p"},"undefined")," to an object property clears its value while preserving its type. In order to do that, the ",(0,l.kt)("inlineCode",{parentName:"p"},"function get")," is first called to retrieve the value type, then the ",(0,l.kt)("inlineCode",{parentName:"p"},"function set")," is called with an empty value of that type.")),(0,l.kt)("h4",{id:"example-1-2"},"Example 1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},'//Class: Person.4qm\n\nproperty firstName, lastName : string\n\nconstructor(firstname : string, lastname : string)\n this.firstName=firstname\n this.lastName=lastname\n\nfunction get fullName() -> fullName : string\n fullName=this.firstName+" "+this.lastName\n\nfunction set fullName( fullName : string )\n p=position(" ", fullName)\n this.firstName=substring(fullName, 1; p-1)\n this.lastName=substring(fullName, p+1)\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},'//in a method\nfullName=person.fullName // Function get fullName() is called\nperson.fullName="John Smith" // Function set fullName() is called\n')),(0,l.kt)("h4",{id:"example-2-1"},"Example 2"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},"function get fullAddress()->result : object\n \n result=newObject\n \n result.fullName=this.fullName\n result.address=this.address\n result.zipCode=this.zipCode\n result.city=this.city\n result.state=this.state\n result.country=this.country \n")),(0,l.kt)("h3",{id:"constructor"},(0,l.kt)("inlineCode",{parentName:"h3"},"constructor")),(0,l.kt)("h4",{id:"syntax-2"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},"// Class: MyClass\nconstructor({parameterName : type, ...})\n// code\n")),(0,l.kt)("p",null,"A class constructor function, which accepts optional ",(0,l.kt)("a",{parentName:"p",href:"#parameters"},"parameters"),", can be used to create and initialize objects of the user class."),(0,l.kt)("p",null,"When you call the ",(0,l.kt)("a",{parentName:"p",href:"/docs/language/ClassClass#new"},(0,l.kt)("inlineCode",{parentName:"a"},"new()"))," function, the class constructor is called with the parameters optionally passed to the ",(0,l.kt)("inlineCode",{parentName:"p"},"new()")," function."),(0,l.kt)("p",null,"There can only be one constructor function in a class (otherwise an error is returned). A constructor can use the ",(0,l.kt)("a",{parentName:"p",href:"#super"},(0,l.kt)("inlineCode",{parentName:"a"},"super"))," keyword to call the constructor of the super class."),(0,l.kt)("p",null,"You can create and type instance properties inside the constructor (see example). Alternatively, if your instance properties' values do not depend on parameters passed to the constructor, you can define them using the ",(0,l.kt)("a",{parentName:"p",href:"#property"},(0,l.kt)("inlineCode",{parentName:"a"},"property"))," keyword."),(0,l.kt)("h4",{id:"example-3"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},"// Class: MyClass\n// Class constructor of MyClass\nconstructor (name : string)\n this.name=name\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},'// in a method\n// you can instantiate an object\nvar o : cs.MyClass\no=cs.MyClass.new("HelloWorld")  \n// o == {"name":"HelloWorld"}\n')),(0,l.kt)("h3",{id:"property"},(0,l.kt)("inlineCode",{parentName:"h3"},"property")),(0,l.kt)("h4",{id:"syntax-3"},"Syntax"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"property <propertyName>{, <propertyName2>,...}{ : <propertyType>}")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"property")," keyword can be used to declare a property inside a user class. A class property has a name and a type."),(0,l.kt)("p",null,"Declaring class properties enhances code editor suggestions, type-ahead features and error detection."),(0,l.kt)("p",null,"Properties are declared for new objects when you call the ",(0,l.kt)("a",{parentName:"p",href:"/docs/language/ClassClass#new"},(0,l.kt)("inlineCode",{parentName:"a"},"new()"))," function, however they are not automatically added to objects (they are only added when they are assigned a value)."),(0,l.kt)("p",null,"Property names must be compliant with ",(0,l.kt)("a",{parentName:"p",href:"/docs/language/basics/lang-identifiers#object-properties"},"property naming rules"),"."),(0,l.kt)("p",null,"The property type can be one of the following supported types:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"propertyType"),(0,l.kt)("th",{parentName:"tr",align:null},"Contents"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"text")),(0,l.kt)("td",{parentName:"tr",align:null},"Text value")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"date")),(0,l.kt)("td",{parentName:"tr",align:null},"Date value")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"time")),(0,l.kt)("td",{parentName:"tr",align:null},"Time value")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"Boolean value")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"integer")),(0,l.kt)("td",{parentName:"tr",align:null},"Long integer value")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"number")),(0,l.kt)("td",{parentName:"tr",align:null},"number value")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"picture")),(0,l.kt)("td",{parentName:"tr",align:null},"Picture value")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"blob")),(0,l.kt)("td",{parentName:"tr",align:null},"Scalar Blob value")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"collection")),(0,l.kt)("td",{parentName:"tr",align:null},"Collection value")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"variant")),(0,l.kt)("td",{parentName:"tr",align:null},"Variant value")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"Object with default class (4D.Object)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"4D.<className>")),(0,l.kt)("td",{parentName:"tr",align:null},"Object of the 4D class name")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"cs.<className>")),(0,l.kt)("td",{parentName:"tr",align:null},"Object of the user class name")))),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"The ",(0,l.kt)("inlineCode",{parentName:"p"},"property")," keyword can only be used in class methods and outside any ",(0,l.kt)("inlineCode",{parentName:"p"},"function")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"constructor")," block.")),(0,l.kt)("h4",{id:"example-4"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},"// Class: MyClass\n\nproperty name : string\nproperty age : integer\n")),(0,l.kt)("p",null,"In a method:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},'var o : cs.MyClass\no=cs.MyClass.new() //o:{}\no.name="John" //o:{"name":"John"}\no.age="Smith"  //error with check syntax\n')),(0,l.kt)("h3",{id:"extends-classname"},(0,l.kt)("inlineCode",{parentName:"h3"},"extends <ClassName>")),(0,l.kt)("h4",{id:"syntax-4"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},"// Class: ChildClass\nextends <ParentClass>\n")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"extends")," keyword is used in class declaration to create a user class which is a child of another user class. The child class inherits all functions of the parent class."),(0,l.kt)("p",null,"Class extension must respect the following rules:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"A user class cannot extend a built-in class (except 4D.Object and ",(0,l.kt)("a",{parentName:"li",href:"/docs/orda/data-model"},"ORDA classes")," which are extended by default for user classes)."),(0,l.kt)("li",{parentName:"ul"},"A user class cannot extend a user class from another project."),(0,l.kt)("li",{parentName:"ul"},"A user class cannot extend itself."),(0,l.kt)("li",{parentName:"ul"},'It is not possible to extend classes in a circular way (i.e. "a" extends "b" that extends "a").')),(0,l.kt)("p",null,"Breaking such a rule is not detected by the code editor or the interpreter, only the ",(0,l.kt)("inlineCode",{parentName:"p"},"check syntax")," will throw an error in this case."),(0,l.kt)("p",null,"An extended class can call the constructor of its parent class using the ",(0,l.kt)("a",{parentName:"p",href:"#super"},(0,l.kt)("inlineCode",{parentName:"a"},"super"))," command."),(0,l.kt)("h4",{id:"example-5"},"Example"),(0,l.kt)("p",null,"This example creates a class called ",(0,l.kt)("inlineCode",{parentName:"p"},"Square")," from a class called ",(0,l.kt)("inlineCode",{parentName:"p"},"Polygon"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},"//Class: Square\n\n//path: Classes/Square.4dm \n\nextends Polygon\n\nconstructor (side : integer)\n \n // It calls the parent class's constructor with lengths\n // provided for the Polygon's width and height\n super(side,side)\n // In derived classes, super must be called \n // before you can use 'this'\n this.name=\"Square\"\n\n\n\n function getArea() -> result : integer\n  result=this.height*this.width\n")),(0,l.kt)("h3",{id:"super"},(0,l.kt)("inlineCode",{parentName:"h3"},"super")),(0,l.kt)("h4",{id:"syntax-5"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},"super {( param{,...,paramN} )} {-> object}\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"param"),(0,l.kt)("td",{parentName:"tr",align:null},"Mixed"),(0,l.kt)("td",{parentName:"tr",align:null},"->"),(0,l.kt)("td",{parentName:"tr",align:null},"Parameter(s) to pass to the parent constructor")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Result"),(0,l.kt)("td",{parentName:"tr",align:null},"Object"),(0,l.kt)("td",{parentName:"tr",align:null},"<-"),(0,l.kt)("td",{parentName:"tr",align:null},"Object's parent")))),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"super")," keyword allows calls to the ",(0,l.kt)("inlineCode",{parentName:"p"},"superclass"),", i.e. the parent class."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"super")," serves two different purposes:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Inside a ",(0,l.kt)("a",{parentName:"li",href:"#constructor"},"constructor code"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"super")," is a command that allows to call the constructor of the superclass. When used in a constructor, the ",(0,l.kt)("inlineCode",{parentName:"li"},"super")," command appears alone and must be used before the ",(0,l.kt)("inlineCode",{parentName:"li"},"this")," keyword is used.")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"If all class constructors in the inheritance tree are not properly called, error -10748 is generated. It's up to the developer to make sure calls are valid."),(0,l.kt)("li",{parentName:"ul"},"If the ",(0,l.kt)("inlineCode",{parentName:"li"},"this")," command is called on an object whose superclasses have not been constructed, error -10743 is generated."),(0,l.kt)("li",{parentName:"ul"},"If ",(0,l.kt)("inlineCode",{parentName:"li"},"super")," is called out of an object scope, or on an object whose superclass constructor has already been called, error -10746 is generated.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},"// inside myClass constructor\nconstructor(text1 : string,  text2 : string)\nsuper(text1) //calls superclass constructor with a text param\nthis.param=text2 // use second param\n")),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"Inside a ",(0,l.kt)("a",{parentName:"li",href:"#class-function"},"class member function"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"super")," designates the prototype of the superclass and allows to call a function of the superclass hierarchy.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},'super.doSomething(42) //calls "doSomething" function  \n//declared in superclasses\n')),(0,l.kt)("h4",{id:"example-1-3"},"Example 1"),(0,l.kt)("p",null,"This example illustrates the use of ",(0,l.kt)("inlineCode",{parentName:"p"},"super")," in a class constructor. The command is called to avoid duplicating the constructor parts that are common between ",(0,l.kt)("inlineCode",{parentName:"p"},"Rectangle")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"Square")," classes."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},'// Class: Rectangle\nconstructor(width : integer, height : integer)\n this.name="Rectangle"\n this.height=height\n this.width=width\n\n \nfunction sayName()\n return "Hi, I am a "+this.name+"."\n \n\nfunction getArea() -> area : integer\n area=(this.height)*(this.width)\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},"//Class: Square\n \nextends Rectangle\n \nconstructor (side : integer)\n \n // It calls the parent class's constructor with lengths\n // provided for the Rectangle's width and height\n super(side;side)\n // In derived classes, super must be called before you\n // can use 'this'\n this.name=\"Square\"\n\nfunction getArea() -> area : integer\n area=this.height*this.width\n")),(0,l.kt)("h4",{id:"example-2-2"},"Example 2"),(0,l.kt)("p",null,"This example illustrates the use of ",(0,l.kt)("inlineCode",{parentName:"p"},"super")," in a class member method. You created the ",(0,l.kt)("inlineCode",{parentName:"p"},"Rectangle")," class with a function:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},'//Class: Rectangle\n \nfunction nbSides() -> sides : string\n sides="I have 4 sides"\n')),(0,l.kt)("p",null,"You also created the ",(0,l.kt)("inlineCode",{parentName:"p"},"Square")," class with a function calling the superclass function:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},'//Class: Square\n \nextends Rectangle\n \nfunction description() -> sides:string\n sides=super.nbSides()+" which are all equal"\n')),(0,l.kt)("p",null,"Then you can write in a method:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},"var square : object\nvar message : string\nsquare=cs.Square.new()\nmessage=square.description() //I have 4 sides which are all equal\n")),(0,l.kt)("h3",{id:"this"},(0,l.kt)("inlineCode",{parentName:"h3"},"this")),(0,l.kt)("h4",{id:"syntax-6"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},"this -> object\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Result"),(0,l.kt)("td",{parentName:"tr",align:null},"object"),(0,l.kt)("td",{parentName:"tr",align:null},"<-"),(0,l.kt)("td",{parentName:"tr",align:null},"Current object")))),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"this")," keyword returns a reference to the currently processed object. "),(0,l.kt)("p",null,"In most cases, the value of ",(0,l.kt)("inlineCode",{parentName:"p"},"this")," is determined by how a function is called. It can't be set by assignment during execution, and it may be different each time the function is called."),(0,l.kt)("p",null,"When a formula is called as a member method of an object, its ",(0,l.kt)("inlineCode",{parentName:"p"},"this")," is set to the object the method is called on. For example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},'o=newObject("prop",42,"f",formula(this.prop))\nval=o.f() //42\n')),(0,l.kt)("p",null,"When a ",(0,l.kt)("a",{parentName:"p",href:"#class-constructor"},"constructor")," function is used (with the ",(0,l.kt)("a",{parentName:"p",href:"/docs/language/ClassClass#new"},(0,l.kt)("inlineCode",{parentName:"a"},"new()"))," function), its ",(0,l.kt)("inlineCode",{parentName:"p"},"this")," is bound to the new object being constructed."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},"//Class: ob\n  \nconstructor  \n \n // Create properties on this as\n // desired by assigning to them\n this.a=42 \n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},"// in a method  \no=cs.ob.new()\nval=o.a //42\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"When calling the superclass constructor in a constructor using the ",(0,l.kt)("a",{parentName:"p",href:"#super"},"super")," keyword, keep in mind that ",(0,l.kt)("inlineCode",{parentName:"p"},"this")," must not be called before the superclass constructor, otherwise an error is generated. See ",(0,l.kt)("a",{parentName:"p",href:"#example-1"},"this example"),".")),(0,l.kt)("p",null,"In any cases, ",(0,l.kt)("inlineCode",{parentName:"p"},"this")," refers to the object the method was called on, as if the method were on the object."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},"//Class: ob\n  \nfunction f()\n return this.a+this.b\n")),(0,l.kt)("p",null,"Then you can write in a project method:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-qs"},"o=cs.ob.new()\no.a=5\no.b=3\nval=o.f() //8\n\n")),(0,l.kt)("p",null,"In this example, the object assigned to the variable o doesn't have its own ",(0,l.kt)("em",{parentName:"p"},"f")," property, it inherits it from its class. Since ",(0,l.kt)("em",{parentName:"p"},"f")," is called as a method of o, its ",(0,l.kt)("inlineCode",{parentName:"p"},"this")," refers to o."))}d.isMDXComponent=!0}}]);
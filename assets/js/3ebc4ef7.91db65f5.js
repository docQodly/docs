"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([["69832"],{10859:function(e,i,n){n.r(i),n.d(i,{metadata:()=>r,contentTitle:()=>a,default:()=>h,assets:()=>d,toc:()=>c,frontMatter:()=>l});var r=JSON.parse('{"id":"api/$filter","title":"$filter","description":"Functionality","source":"@site/versioned_docs/version-1.0.0/api/$filter.md","sourceDirName":"api","slug":"/api/$filter","permalink":"/docs/1.0.0/api/$filter","draft":false,"unlisted":false,"editUrl":"https://github.com/qodly/docs/issues/new?title=Comment%20on%20api%2F%24filter.md%20(1.0.0)&body=Share%20any%20feedback%20about%20this%20page%20%E2%80%94%20report%20issues%2C%20suggest%20improvements%2C%20or%20tell%20us%20what%E2%80%99s%20helpful.%0A%0AIf%20it%E2%80%99s%20an%20issue%3A%0A-%20What%E2%80%99s%20the%20issue%3F%20(e.g.%2C%20typo%2C%20incorrect%20information%2C%20unclear%20explanation)%0A-%20Where%20is%20it%3F%20(e.g.%2C%20section%20name%2C%20specific%20paragraph%2C%20or%20line)%0A%0AThank%20you%20for%20helping%20us%20improve!%20%F0%9F%9A%80%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20","tags":[],"version":"1.0.0","frontMatter":{"id":"$filter","title":"$filter"},"sidebar":"Integrations","previous":{"title":"$expand","permalink":"/docs/1.0.0/api/$expand"},"next":{"title":"$format","permalink":"/docs/1.0.0/api/$format"}}'),t=n("85893"),s=n("50065");let l={id:"$filter",title:"$filter"},a=void 0,d={},c=[{value:"Functionality",id:"functionality",level:2},{value:"Definition",id:"definition",level:3},{value:"Syntax",id:"syntax",level:3},{value:"Attribute",id:"attribute",level:3},{value:"Comparator",id:"comparator",level:3},{value:"Handling Special Characters",id:"handling-special-characters",level:3},{value:"Example",id:"example",level:4},{value:"Combining with Other Parameters",id:"combining-with-other-parameters",level:2},{value:"Use Cases",id:"use-cases",level:2},{value:"Using a Simple Filter",id:"using-a-simple-filter",level:3},{value:"Syntax",id:"syntax-1",level:4},{value:"Example",id:"example-1",level:4},{value:"Using a Complex Filter",id:"using-a-complex-filter",level:3},{value:"Syntax",id:"syntax-2",level:4},{value:"Example",id:"example-2",level:4},{value:"Using the Params Property",id:"using-the-params-property",level:3},{value:"Syntax",id:"syntax-3",level:4},{value:"Example",id:"example-3",level:4},{value:"Best Practices",id:"best-practices",level:2}];function o(e){let i={code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h2,{id:"functionality",children:"Functionality"}),"\n",(0,t.jsx)(i.h3,{id:"definition",children:"Definition"}),"\n",(0,t.jsxs)(i.p,{children:["The ",(0,t.jsx)(i.code,{children:"$filter"})," endpoint allows you to query data within a dataclass or method using various criteria. This endpoint is versatile, supporting both simple and complex filters, as well as filters using parameters."]}),"\n",(0,t.jsx)(i.h3,{id:"syntax",children:"Syntax"}),"\n",(0,t.jsxs)(i.p,{children:["To use the ",(0,t.jsx)(i.code,{children:"$filter"})," parameter, follow this format:"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:'GET /rest/{{dataClass}}?$filter="{{filterExpression}}"\n'})}),"\n",(0,t.jsx)(i.h3,{id:"attribute",children:"Attribute"}),"\n",(0,t.jsx)(i.p,{children:"Attributes can be directly specified if they belong to the same dataclass. For attributes from related dataclasses, you must include the relation path. The attribute names are case-sensitive."}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsx)(i.p,{children:"Filtering by a related dataclass attribute:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:'GET /rest/Employee?$filter="employer.name=Acme"\n'})}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsx)(i.p,{children:"Filtering by an object attribute using dot notation:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:'GET /rest/Person?$filter="objAttribute.prop2=9181"\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"comparator",children:"Comparator"}),"\n",(0,t.jsx)(i.p,{children:"The comparator in a filter specifies the type of comparison to be made. The following comparators are supported:"}),"\n",(0,t.jsxs)(i.table,{children:[(0,t.jsx)(i.thead,{children:(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.th,{children:"Comparator"}),(0,t.jsx)(i.th,{children:"Description"})]})}),(0,t.jsxs)(i.tbody,{children:[(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"="}),(0,t.jsx)(i.td,{children:"Equals to"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"!="}),(0,t.jsx)(i.td,{children:"Not equal to"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:">"}),(0,t.jsx)(i.td,{children:"Greater than"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:">;="}),(0,t.jsx)(i.td,{children:"Greater than or equal to"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"<"}),(0,t.jsx)(i.td,{children:"Less than"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"<="}),(0,t.jsx)(i.td,{children:"Less than or equal to"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"begin"}),(0,t.jsx)(i.td,{children:"Begins with"})]})]})]}),"\n",(0,t.jsx)(i.h3,{id:"handling-special-characters",children:"Handling Special Characters"}),"\n",(0,t.jsx)(i.p,{children:"When using quotes in filter values, you must escape them using their character codes:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["Single quotes ('): ",(0,t.jsx)(i.code,{children:"\\u0027"})]}),"\n",(0,t.jsxs)(i.li,{children:['Double quotes ("): ',(0,t.jsx)(i.code,{children:"\\u0022"})]}),"\n"]}),"\n",(0,t.jsx)(i.h4,{id:"example",children:"Example"}),"\n",(0,t.jsx)(i.p,{children:'To filter by last name "O\'Reilly":'}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsx)(i.p,{children:"Using the params property:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:'GET /rest/Person?$filter="lastName=:1"&$params=\'["O\\u0027Reilly"]\'\n'})}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsx)(i.p,{children:"Directly in the filter expression:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:'GET /rest/Person?$filter="lastName=O\'Reilly"\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"combining-with-other-parameters",children:"Combining with Other Parameters"}),"\n",(0,t.jsxs)(i.p,{children:["The ",(0,t.jsx)(i.code,{children:"$filter"})," parameter can be combined with other parameters to refine and manipulate data retrieval:"]}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"$orderby"}),": Sort the filtered results."]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"$top/$limit"})," and ",(0,t.jsx)(i.strong,{children:"$skip"}),": Limit the number of filtered records and skip a certain number of records."]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"$expand"}),": Include related data that matches the filter criteria."]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"$attributes"}),": Specify which attributes to include in the response for the filtered results."]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"$compute"}),": Perform calculations on the filtered data."]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"$distinct"}),": Retrieve distinct values from the filtered data set."]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"$method=entityset"}),": Create an entity set based on the filtered results and save it in the server's cache."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,t.jsx)(i.h3,{id:"using-a-simple-filter",children:"Using a Simple Filter"}),"\n",(0,t.jsx)(i.p,{children:"A simple filter consists of an attribute, a comparator, and a value."}),"\n",(0,t.jsx)(i.h4,{id:"syntax-1",children:"Syntax"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"{attribute} {comparator} {value}\n"})}),"\n",(0,t.jsx)(i.h4,{id:"example-1",children:"Example"}),"\n",(0,t.jsx)(i.p,{children:'To filter employees with the first name "John":'}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:'GET /rest/Employee?$filter="firstName=john"\n'})}),"\n",(0,t.jsx)(i.h3,{id:"using-a-complex-filter",children:"Using a Complex Filter"}),"\n",(0,t.jsx)(i.p,{children:"A complex filter joins two or more conditions using logical operators (AND, OR, EXCEPT)."}),"\n",(0,t.jsx)(i.h4,{id:"syntax-2",children:"Syntax"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"{attribute} {comparator} {value} {AND/OR/EXCEPT} {attribute} {comparator} {value}\n"})}),"\n",(0,t.jsx)(i.h4,{id:"example-2",children:"Example"}),"\n",(0,t.jsx)(i.p,{children:"To filter employees named John with a salary greater than 20,000:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:'GET /rest/Employee?$filter="firstName=john AND salary>20000"\n'})}),"\n",(0,t.jsx)(i.h3,{id:"using-the-params-property",children:"Using the Params Property"}),"\n",(0,t.jsxs)(i.p,{children:["You can use placeholders in your filter expressions and provide their values using the ",(0,t.jsx)(i.code,{children:"$params"})," property. This method is useful for dynamic queries where values are provided at runtime."]}),"\n",(0,t.jsx)(i.h4,{id:"syntax-3",children:"Syntax"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:'{attribute} {comparator} {placeholder} {AND/OR/EXCEPT} {attribute} {comparator} {placeholder}&$params=\'["{value1}","{value2}"]\'\n'})}),"\n",(0,t.jsx)(i.h4,{id:"example-3",children:"Example"}),"\n",(0,t.jsx)(i.p,{children:"To filter employees named John with a salary greater than 20,000 using placeholders:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:'GET /rest/Employee?$filter="firstName=:1 AND salary>:2"&$params=\'["john",20000]\'\n'})}),"\n",(0,t.jsx)(i.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"Combine Filters:"})," Use logical operators to combine multiple conditions and refine your queries."]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"Use Placeholders:"})," Utilize the ",(0,t.jsx)(i.code,{children:"$params"})," property for dynamic queries to improve readability and maintainability."]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"Escape Special Characters:"})," Ensure proper escaping of quotes in filter values to avoid syntax errors."]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"Specify Relation Paths:"})," When querying related dataclass attributes, always include the correct relation path."]}),"\n"]}),"\n"]})]})}function h(e={}){let{wrapper:i}={...(0,s.a)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},50065:function(e,i,n){n.d(i,{Z:function(){return a},a:function(){return l}});var r=n(67294);let t={},s=r.createContext(t);function l(e){let i=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),r.createElement(s.Provider,{value:i},e.children)}}}]);
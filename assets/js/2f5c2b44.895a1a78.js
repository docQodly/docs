"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([[7453],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>k});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),i=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=i(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=i(a),d=n,k=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return a?r.createElement(k,l(l({ref:t},c),{},{components:a})):r.createElement(k,l({ref:t},c))}));function k(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,l=new Array(o);l[0]=d;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[m]="string"==typeof e?e:n,l[1]=p;for(var i=2;i<o;i++)l[i]=a[i];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},45513:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>p,toc:()=>i});var r=a(87462),n=(a(67294),a(3905));const o={id:"callWorker",title:"callWorker"},l=void 0,p={unversionedId:"language/commands/callWorker",id:"language/commands/callWorker",title:"callWorker",description:"callWorker( process 4D.Function {, param {, ...paramN } string , formula integer } )callWorker ( process 4D.Function {, param {, ...paramN } integer , formula integer } )",source:"@site/docs/language/commands/callWorker.md",sourceDirName:"language/commands",slug:"/language/commands/callWorker",permalink:"/docs/language/commands/callWorker",draft:!1,editUrl:"https://github.com/docQodly/docs/edit/main/docs/language/commands/callWorker.md",tags:[],version:"current",frontMatter:{id:"callWorker",title:"callWorker"},sidebar:"Develop",previous:{title:"callChain",permalink:"/docs/language/commands/callChain"},next:{title:"changeString",permalink:"/docs/language/commands/changeString"}},s={},i=[{value:"Description",id:"description",level:4},{value:"Example",id:"example",level:4},{value:"See also",id:"see-also",level:4}],c={toc:i};function m(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"callWorker"),"( ",(0,n.kt)("em",{parentName:"p"},"process")," : string , ",(0,n.kt)("em",{parentName:"p"},"formula")," : 4D.Function {, ",(0,n.kt)("em",{parentName:"p"},"param {, ...paramN }")," : integer } )",(0,n.kt)("br",null),(0,n.kt)("strong",{parentName:"p"},"callWorker")," ( ",(0,n.kt)("em",{parentName:"p"},"process")," : string , ",(0,n.kt)("em",{parentName:"p"},"formula")," : string {, ",(0,n.kt)("em",{parentName:"p"},"param {, ...paramN }")," : integer } )",(0,n.kt)("br",null),(0,n.kt)("strong",{parentName:"p"},"callWorker")," ( ",(0,n.kt)("em",{parentName:"p"},"process")," : integer , ",(0,n.kt)("em",{parentName:"p"},"formula")," : 4D.Function {, ",(0,n.kt)("em",{parentName:"p"},"param {, ...paramN }")," : integer } )",(0,n.kt)("br",null),(0,n.kt)("strong",{parentName:"p"},"callWorker")," ( ",(0,n.kt)("em",{parentName:"p"},"process")," : integer , ",(0,n.kt)("em",{parentName:"p"},"formula")," : string {, ",(0,n.kt)("em",{parentName:"p"},"param {, ...paramN }")," : integer } )"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:"center"}),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"process"),(0,n.kt)("td",{parentName:"tr",align:null},"string ","|"," integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"->"),(0,n.kt)("td",{parentName:"tr",align:null},"Name or number of worker process")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"formula"),(0,n.kt)("td",{parentName:"tr",align:null},"4D.Function ","|"," string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"->"),(0,n.kt)("td",{parentName:"tr",align:null},"Formula object or Name of project method")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"param"),(0,n.kt)("td",{parentName:"tr",align:null},"any"),(0,n.kt)("td",{parentName:"tr",align:"center"},"->"),(0,n.kt)("td",{parentName:"tr",align:null},"Parameter(s) passed to ",(0,n.kt)("em",{parentName:"td"},"formula"),"/",(0,n.kt)("em",{parentName:"td"},"methodName"))))),(0,n.kt)("h4",{id:"description"},"Description"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"callWorker")," command creates or calls the worker process whose name or ID you passed in ",(0,n.kt)("em",{parentName:"p"},"process")," and requests the execution of the code designated by ",(0,n.kt)("em",{parentName:"p"},"formula")," in its context with the optional ",(0,n.kt)("em",{parentName:"p"},"param")," parameter(s)."),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"callWorker")," command encapsulates the ",(0,n.kt)("em",{parentName:"p"},"param")," parameters into a message and posts it in the worker's message box."),(0,n.kt)("p",null,"In the ",(0,n.kt)("em",{parentName:"p"},"process")," parameter, you can specify the worker using its process name or its process number:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"If you pass the number of a process that does not exist, or if the process specified was not created by ",(0,n.kt)("inlineCode",{parentName:"li"},"callWorker"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"callWorker")," does nothing."),(0,n.kt)("li",{parentName:"ul"},"If you pass the name of a process that does not exist, a new worker process is created.")),(0,n.kt)("p",null,"The worker process is returned by the ",(0,n.kt)("a",{parentName:"p",href:"/docs/language/commands/processInfo"},(0,n.kt)("inlineCode",{parentName:"a"},"processInfo"))," command when applied to this process."),(0,n.kt)("p",null,"In ",(0,n.kt)("em",{parentName:"p"},"formula"),", you designate the code to execute in the context of the worker process. You can pass either:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"a ",(0,n.kt)("a",{parentName:"li",href:"/docs/language/FunctionClass"},"formula object"),". Formula objects can encapsulate any executable expressions, including functions and project methods;"),(0,n.kt)("li",{parentName:"ul"},"a string containing the name of a project method. You can pass an empty string; in this case, the worker executes the method that was originally used to start its process, if any (i.e., the startup method of the worker).")),(0,n.kt)("p",null,"You can also pass parameters to ",(0,n.kt)("em",{parentName:"p"},"formula")," using one or more optional ",(0,n.kt)("em",{parentName:"p"},"param")," parameters. If the ",(0,n.kt)("em",{parentName:"p"},"formula")," is a string formula, you must use sequential parameters ($1, $2...). Upon starting execution in the context of the process, the process ",(0,n.kt)("em",{parentName:"p"},"formula")," receives the parameter values either in the parameters, or in $1, $2, and so on. In the context of the ",(0,n.kt)("inlineCode",{parentName:"p"},"callWorker")," command, the following considerations need to be taken into account:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Standard object or collection type parameters are passed by copy, i.e. Qodly will create a copy of the object or the collection in the destination process if the worker is in a process different from the one calling the ",(0,n.kt)("inlineCode",{parentName:"li"},"callWorker")," command. In this context, if you want to pass an object or collection parameter by reference, you must use a ",(0,n.kt)("a",{parentName:"li",href:"/docs/language/basics/lang-shared"},"shared object or collection"),".")),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"A worker process remains alive until the application is closed or the ",(0,n.kt)("inlineCode",{parentName:"p"},"killWorker")," command is explicitly called for it. To free up memory, do not forget to call this command once a worker process is no longer needed.")),(0,n.kt)("h4",{id:"example"},"Example"),(0,n.kt)("p",null,"In a Page, a button starts a computation: for example, statistics for the selected year. The button creates or calls a worker process that computes the data while the user can continue to work in the form."),(0,n.kt)("p",null,"The code called from the button:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-qs"},'var vYear: integer\nvYear = 2015 // could have been selected by the user in the form\ncallWorker("myWorker",formula(workerMethod),vYear)\n\n')),(0,n.kt)("p",null,"The code of ",(0,n.kt)("inlineCode",{parentName:"p"},"workerMethod")," is:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-qs"}," declare(vYearInteger) //year reference\n var vStatResults : object //to store statistical results\n ... //compute statistics\n")),(0,n.kt)("h4",{id:"see-also"},"See also"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/docs/language/commands/killWorker"},(0,n.kt)("inlineCode",{parentName:"a"},"killWorker")),(0,n.kt)("br",null),"\n",(0,n.kt)("a",{parentName:"p",href:"/docs/language/SignalClass"},(0,n.kt)("inlineCode",{parentName:"a"},"Signal")," class")))}m.isMDXComponent=!0}}]);
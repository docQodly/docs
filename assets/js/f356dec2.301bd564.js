"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([[5189],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=i.createContext({}),s=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},u=function(e){var t=s(e.components);return i.createElement(l.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},k=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=s(n),k=r,d=m["".concat(l,".").concat(k)]||m[k]||c[k]||a;return n?i.createElement(d,p(p({ref:t},u),{},{components:n})):i.createElement(d,p({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,p=new Array(a);p[0]=k;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[m]="string"==typeof e?e:r,p[1]=o;for(var s=2;s<a;s++)p[s]=n[s];return i.createElement.apply(null,p)}return i.createElement.apply(null,n)}k.displayName="MDXCreateElement"},61005:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>m,frontMatter:()=>a,metadata:()=>o,toc:()=>s});var i=n(87462),r=(n(67294),n(3905));const a={id:"$skip",title:"$skip"},p=void 0,o={unversionedId:"api/$skip",id:"api/$skip",title:"$skip",description:"Functionality",source:"@site/docs/api/$skip.md",sourceDirName:"api",slug:"/api/$skip",permalink:"/docs/api/$skip",draft:!1,editUrl:"https://github.com/docQodly/docs/edit/main/docs/api/$skip.md",tags:[],version:"current",frontMatter:{id:"$skip",title:"$skip"},sidebar:"API",previous:{title:"$savedorderby",permalink:"/docs/api/$savedorderby"},next:{title:"$timeout",permalink:"/docs/api/$timeout"}},l={},s=[{value:"Functionality",id:"functionality",level:2},{value:"Definition",id:"definition",level:3},{value:"Syntax",id:"syntax",level:3},{value:"Detailed Behavior",id:"detailed-behavior",level:2},{value:"Starting Point",id:"starting-point",level:3},{value:"Combining with Other Parameters",id:"combining-with-other-parameters",level:2},{value:"Use Cases",id:"use-cases",level:2},{value:"Skipping Entities",id:"skipping-entities",level:3},{value:"Skipping and Limiting Results",id:"skipping-and-limiting-results",level:3},{value:"Best Practices",id:"best-practices",level:2}],u={toc:s};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"functionality"},"Functionality"),(0,r.kt)("h3",{id:"definition"},"Definition"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"$skip")," parameter defines the starting point within a collection of entities. By default, the collection starts with the first entity. To start with a different entity, you specify the number of entities to skip."),(0,r.kt)("h3",{id:"syntax"},"Syntax"),(0,r.kt)("p",null,"To use ",(0,r.kt)("inlineCode",{parentName:"p"},"$skip"),", include it in your GET request with the number of entities you wish to skip:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"GET /rest/{{dataClass}}/$entityset/{{entitySetID}}?$skip={{number}}\n")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Integer value indicating the number of entities to skip.")),(0,r.kt)("h2",{id:"detailed-behavior"},"Detailed Behavior"),(0,r.kt)("h3",{id:"starting-point"},"Starting Point"),(0,r.kt)("p",null,"By default, entity collections start from the first entity. By using ",(0,r.kt)("inlineCode",{parentName:"p"},"$skip"),", you can define a different starting point. For instance, ",(0,r.kt)("inlineCode",{parentName:"p"},"$skip=10")," will start the collection from the 11th entity."),(0,r.kt)("h2",{id:"combining-with-other-parameters"},"Combining with Other Parameters"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"$skip")," parameter can be combined with other parameters to navigate through a collection of entities efficiently:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"$top/$limit"),": Use in conjunction with ",(0,r.kt)("inlineCode",{parentName:"p"},"$skip")," to control the number of entities returned after skipping a certain number.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"$filter"),": Narrow down the dataset before skipping a specified number of entities.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"$orderby"),": Sort the dataset before applying the skip operation to ensure consistent results.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"$expand"),": Include related data in the results while skipping a certain number of entities.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"$attributes"),": Specify which attributes to include in the results after skipping entities.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"$method=entityset"),": Create an entity set and navigate through it by skipping entities.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"$savedfilter"),": Apply a saved filter to the dataset before skipping entities.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"$savedorderby"),": Apply a saved sorting order to the dataset before skipping entities.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"$compute"),": Perform computations on a dataset after skipping a specified number of entities.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"$lock"),": Skip entities when locking or unlocking entities to ensure the operation starts from a specific point in the dataset.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"$distinct"),": Skip a number of entities when retrieving distinct values from a dataset."))),(0,r.kt)("h2",{id:"use-cases"},"Use Cases"),(0,r.kt)("h3",{id:"skipping-entities"},"Skipping Entities"),(0,r.kt)("p",null,"To skip the first 20 entities and start the collection from the 21st entity:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Request:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"GET /rest/Employee/$entityset/CB1BCC603DB0416D939B4ED379277F02?$skip=20\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response:")),(0,r.kt)("p",null,"This request would return entities starting from the 21st entity in the collection."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "__DATACLASS": "Employee",\n    "__entityModel": "Employee",\n    "__GlobalStamp": 0,\n    "__COUNT": 50,\n    "__FIRST": 20,\n    "__ENTITIES": [...]\n}\n')),(0,r.kt)("h3",{id:"skipping-and-limiting-results"},"Skipping and Limiting Results"),(0,r.kt)("p",null,"To skip the first 10 entities and retrieve the next 2 entities:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Request:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"GET /rest/Employee/$entityset/CB1BCC603DB0416D939B4ED379277F02?$skip=10&$top=5\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response:")),(0,r.kt)("p",null,"This request would return the 11th through 15th entities in the collection."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "__DATACLASS": "Employee",\n    "__entityModel": "Employee",\n    "__GlobalStamp": 0,\n    "__COUNT": 50,\n    "__FIRST": 10,\n    "__ENTITIES": [...],\n    "__SENT": 5\n}\n')),(0,r.kt)("h2",{id:"best-practices"},"Best Practices"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Combine with $top/$limit"),": Use ",(0,r.kt)("inlineCode",{parentName:"p"},"$skip")," in combination with ",(0,r.kt)("inlineCode",{parentName:"p"},"$top")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"$limit")," for efficient pagination.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Optimize Queries"),": Ensure your queries are optimized for performance, especially when working with large datasets.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Error Handling"),": Implement error handling for cases where the skip value exceeds the number of entities in the collection."))))}m.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([[699],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>d});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},g="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),g=p(t),u=r,d=g["".concat(s,".").concat(u)]||g[u]||m[u]||l;return t?a.createElement(d,i(i({ref:n},c),{},{components:t})):a.createElement(d,i({ref:n},c))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=u;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[g]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=t[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},76287:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>g,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var a=t(87462),r=(t(67294),t(3905));const l={id:"newSignal",title:"newSignal"},i=void 0,o={unversionedId:"language/commands/newSignal",id:"language/commands/newSignal",title:"newSignal",description:"newSignal { ( description 4D.Signal",source:"@site/docs/language/commands/newSignal.md",sourceDirName:"language/commands",slug:"/language/commands/newSignal",permalink:"/docs/language/commands/newSignal",draft:!1,editUrl:"https://github.com/docQodly/docs/edit/main/docs/language/commands/newSignal.md",tags:[],version:"current",frontMatter:{id:"newSignal",title:"newSignal"},sidebar:"Develop",previous:{title:"newSharedObject",permalink:"/docs/language/commands/newSharedObject"},next:{title:"not",permalink:"/docs/language/commands/not"}},s={},p=[{value:"Description",id:"description",level:4},{value:"Example",id:"example",level:4}],c={toc:p};function g(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"newSignal")," { ( ",(0,r.kt)("em",{parentName:"p"},"description")," : string ) } : 4D.Signal"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"description"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:"center"},"->"),(0,r.kt)("td",{parentName:"tr",align:null},"Description for the signal")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Result"),(0,r.kt)("td",{parentName:"tr",align:null},"4D.Signal"),(0,r.kt)("td",{parentName:"tr",align:"center"},"<-"),(0,r.kt)("td",{parentName:"tr",align:null},"Native object encapsulating the signal")))),(0,r.kt)("h4",{id:"description"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"newSignal")," command creates a ",(0,r.kt)("inlineCode",{parentName:"p"},"4D.Signal")," object."),(0,r.kt)("p",null,"A signal is a shared object which can be passed as parameter from a worker process to another worker process, so that:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"the called worker can update the signal object after specific processing has completed"),(0,r.kt)("li",{parentName:"ul"},"the calling worker can stop its execution and wait until the signal is updated, without consuming any CPU resources.")),(0,r.kt)("p",null,"Optionally, in the ",(0,r.kt)("em",{parentName:"p"},"description")," parameter you can pass a custom text describing the signal. This text can also be defined after signal creation."),(0,r.kt)("p",null,"Since the signal object is a shared object, it can also be used to maintain user properties, including the ",(0,r.kt)("a",{parentName:"p",href:"../SignalClass/#description-1"},(0,r.kt)("inlineCode",{parentName:"a"},".description"))," property, by calling the ",(0,r.kt)("inlineCode",{parentName:"p"},"use...end")," structure."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returned value")),(0,r.kt)("p",null,"A new ",(0,r.kt)("a",{parentName:"p",href:"../SignalClass/#signal-object"},(0,r.kt)("inlineCode",{parentName:"a"},"4D.Signal")," object"),"."),(0,r.kt)("h4",{id:"example"},"Example"),(0,r.kt)("p",null,"Here is a typical example of a worker that sets a signal:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-4d"},' var signal : 4D.Signal\n var info : string\n signal = newSignal("This is my first signal")\n\n callWorker("myworker","doSomething",signal)\n signaled = signal.wait(1) //wait for 1 second max\n\n if(signaled)\n    info = "myworker finished the work. Result: "+signal.myresult\n else\n    info = "myworker has not finished in less than 1s"\n end\n')),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"doSomething"))," method could be like:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-4d"}," declare (signal : 4D.Signal)\n  //any processing\n  //...\n use(signal)\n    signal.myresult = processingResult  //return the result\n end\n signal.trigger() // The work is finished\n")))}g.isMDXComponent=!0}}]);
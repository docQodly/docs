"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([["88584"],{98517:function(e,t,s){s.r(t),s.d(t,{metadata:()=>n,contentTitle:()=>l,default:()=>h,assets:()=>d,toc:()=>o,frontMatter:()=>a});var n=JSON.parse('{"id":"language/commands/generateDigest","title":"generateDigest","description":"generateDigest ( param integer \\\\{, \\\\*\\\\}) : string","source":"@site/versioned_docs/version-1.1.0/language/commands/generateDigest.md","sourceDirName":"language/commands","slug":"/language/commands/generateDigest","permalink":"/docs/language/commands/generateDigest","draft":false,"unlisted":false,"editUrl":"https://github.com/qodly/docs/issues/new?title=Comment%20on%20language%2Fcommands%2FgenerateDigest.md%20(1.1.0)&body=Share%20any%20feedback%20about%20this%20page%20%E2%80%94%20report%20issues%2C%20suggest%20improvements%2C%20or%20tell%20us%20what%E2%80%99s%20helpful.%0A%0AIf%20it%E2%80%99s%20an%20issue%3A%0A-%20What%E2%80%99s%20the%20issue%3F%20(e.g.%2C%20typo%2C%20incorrect%20information%2C%20unclear%20explanation)%0A-%20Where%20is%20it%3F%20(e.g.%2C%20section%20name%2C%20specific%20paragraph%2C%20or%20line)%0A%0AThank%20you%20for%20helping%20us%20improve!%20%F0%9F%9A%80%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20","tags":[],"version":"1.1.0","frontMatter":{"id":"generateDigest","title":"generateDigest"},"sidebar":"Develop","previous":{"title":"formulaFromString","permalink":"/docs/language/commands/formulaFromString"},"next":{"title":"generatePasswordHash","permalink":"/docs/language/commands/generatePasswordHash"}}'),r=s("85893"),i=s("50065");let a={id:"generateDigest",title:"generateDigest"},l=void 0,d={},o=[{value:"Description",id:"description",level:4},{value:"Example",id:"example",level:4},{value:"See also",id:"see-also",level:4}];function c(e){let t={a:"a",admonition:"admonition",code:"code",em:"em",h4:"h4",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"generateDigest"})," ( ",(0,r.jsx)(t.em,{children:"param"})," : any , ",(0,r.jsx)(t.em,{children:"algorithm"})," : integer {, *}) : string"]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Parameter"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{style:{textAlign:"center"}}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"param"}),(0,r.jsx)(t.td,{children:"any"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"\u2192"}),(0,r.jsx)(t.td,{children:"blob or string for which to get digest key"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"algorithm"}),(0,r.jsx)(t.td,{children:"integer"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"\u2192"}),(0,r.jsx)(t.td,{children:"Algorithm used to return key: 0 = kMD5Digest, 1 = kSHA1Digest, 3 = kSHA256Digest, 4 = kSHA512Digest"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"*"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"\u2192"}),(0,r.jsx)(t.td,{children:"Encode digest in Base64URL"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Result"}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"\u2190"}),(0,r.jsx)(t.td,{children:"Value of digest key"})]})]})]}),"\n",(0,r.jsx)(t.h4,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"generateDigest"})," command returns the digest key of a blob or string after application of an encryption algorithm."]}),"\n",(0,r.jsxs)(t.p,{children:["Pass a string or blob variable in the ",(0,r.jsx)(t.em,{children:"param"})," parameter. The ",(0,r.jsx)(t.code,{children:"generateDigest"})," function returns the digest key as a string."]}),"\n",(0,r.jsxs)(t.p,{children:["In the ",(0,r.jsx)(t.em,{children:"algorithm"})," parameter, pass a value designating which hash function to use. Use one of the following constants, found in the Digest Type theme:"]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Constant"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Value"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Comment"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"k4DRESTDigest"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"2"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Internal algorithm of Qodly."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"kMD5Digest"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"0"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Message Digest 5 algorithm. A series of 128 bits returned as a string of 32 hexadecimal characters."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"kSHA1Digest"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"1"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Secure Hash 1 algorithm. A series of 160 bits returned as a string of 40 hexadecimal characters."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"kSHA256Digest"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"3"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"(SHA-2 family) SHA-256 is a series of 256 bits returned as a string of 64 hexadecimal characters."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"kSHA512Digest"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"4"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"(SHA-2 family) SHA-512 is a series of 512 bits returned as a string of 128 hexadecimal characters."})]})]})]}),"\n",(0,r.jsx)(t.admonition,{type:"note",children:(0,r.jsxs)(t.p,{children:["It is not recommended to use MD5 and SHA algorithms to handle passwords; if you need to check passwords, you are advised to use ",(0,r.jsx)(t.a,{href:"/docs/language/commands/generatePasswordHash",children:(0,r.jsx)(t.code,{children:"generatePasswordHash"})}),"\nand ",(0,r.jsx)(t.a,{href:"/docs/language/commands/verifyPasswordHash",children:(0,r.jsx)(t.code,{children:"verifyPasswordHash"})})," commands."]})}),"\n",(0,r.jsx)(t.p,{children:"By default if the * parameter is omitted, the returned digest is encoded in hexadecimal. Pass the * parameter if you want it to be encoded in Base64URL."}),"\n",(0,r.jsx)(t.p,{children:"The value returned for the same object is the same on all the platforms (macOS/Windows). The calculation is performed based on the representation in UTF-8 of the string passed in the parameter."}),"\n",(0,r.jsx)(t.admonition,{type:"note",children:(0,r.jsx)(t.p,{children:'If you use the command with an empty string/blob, it does not return void but a string value (for example "d41d8cd98f00b204e9800998ecf8427e" for MD5).'})}),"\n",(0,r.jsx)(t.h4,{id:"example",children:"Example"}),"\n",(0,r.jsx)(t.p,{children:"These examples illustrate how to retrieve the digest key of a string:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-qs",children:' var key1, key2 : string\n key1 = generateDigest("The quick brown fox jumps over the lazy dog.",kMD5Digest)\n  // key1 is "e4d909c290d0fb1ca068ffaddf22cbd0"\n key2 = generateDigest("The quick brown fox jumps over the lazy dog.",kSHA1Digest)\n  // key2 is "408d94384216f890ff7a0c3528e8bed1e0b01621"\n\n'})}),"\n",(0,r.jsx)(t.h4,{id:"see-also",children:"See also"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.a,{href:"/docs/language/commands/base64Decode",children:(0,r.jsx)(t.code,{children:"base64Decode"})}),(0,r.jsx)("br",{}),"\n",(0,r.jsx)(t.a,{href:"/docs/language/commands/base64Encode",children:(0,r.jsx)(t.code,{children:"base64Encode"})}),(0,r.jsx)("br",{}),"\n",(0,r.jsx)(t.a,{href:"/docs/language/commands/generatePasswordHash",children:(0,r.jsx)(t.code,{children:"generatePasswordHash"})})]})]})}function h(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},50065:function(e,t,s){s.d(t,{Z:function(){return l},a:function(){return a}});var n=s(67294);let r={},i=n.createContext(r);function a(e){let t=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);
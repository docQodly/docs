"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([[6329],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>k});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=s(a),c=i,k=m["".concat(p,".").concat(c)]||m[c]||u[c]||r;return a?n.createElement(k,o(o({ref:t},d),{},{components:a})):n.createElement(k,o({ref:t},d))}));function k(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[m]="string"==typeof e?e:i,o[1]=l;for(var s=2;s<r;s++)o[s]=a[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},75092:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var n=a(87462),i=(a(67294),a(3905));const r={id:"$expand",title:"$expand"},o=void 0,l={unversionedId:"api/$expand",id:"api/$expand",title:"$expand",description:"Functionality",source:"@site/docs/api/$expand.md",sourceDirName:"api",slug:"/api/$expand",permalink:"/docs/api/$expand",draft:!1,editUrl:"https://github.com/docQodly/docs/edit/main/docs/api/$expand.md",tags:[],version:"current",frontMatter:{id:"$expand",title:"$expand"},sidebar:"API",previous:{title:"$entityset",permalink:"/docs/api/$entityset"},next:{title:"$filter",permalink:"/docs/api/$filter"}},p={},s=[{value:"Functionality",id:"functionality",level:2},{value:"Definition",id:"definition",level:3},{value:"Syntax",id:"syntax",level:3},{value:"Additional Parameters",id:"additional-parameters",level:3},{value:"$binary",id:"binary",level:4},{value:"$imageformat",id:"imageformat",level:4},{value:"$version",id:"version",level:4},{value:"Use Cases",id:"use-cases",level:2},{value:"Viewing an Image Attribute",id:"viewing-an-image-attribute",level:3},{value:"Syntax",id:"syntax-1",level:4},{value:"Example",id:"example",level:4},{value:"Saving a BLOB Attribute to Disk",id:"saving-a-blob-attribute-to-disk",level:3},{value:"Syntax",id:"syntax-2",level:4},{value:"Example",id:"example-1",level:4},{value:"Expanding Relational Attributes",id:"expanding-relational-attributes",level:3},{value:"Syntax",id:"syntax-3",level:4},{value:"Example",id:"example-2",level:4},{value:"Best Practices",id:"best-practices",level:2}],d={toc:s};function m(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"functionality"},"Functionality"),(0,i.kt)("h3",{id:"definition"},"Definition"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"$expand")," endpoint allows you to expand attributes within a dataclass, such as images or BLOBs, to retrieve their full content. This feature is particularly useful for viewing image attributes or saving BLOB attributes to disk. "),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("inlineCode",{parentName:"p"},"$expand")," can be used for expanding relational attributes, although using ",(0,i.kt)("inlineCode",{parentName:"p"},"$attributes")," is recommended for this purpose.")),(0,i.kt)("h3",{id:"syntax"},"Syntax"),(0,i.kt)("p",null,"To expand an attribute, use the following format:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"GET /rest/{{dataClass}}(id)/{{attribute}}?$expand={{attribute}}&additionalParameters\n")),(0,i.kt)("h3",{id:"additional-parameters"},"Additional Parameters"),(0,i.kt)("h4",{id:"binary"},"$binary"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"$binary=true")," parameter is used when expanding BLOB attributes. It specifies that the BLOB should be treated as binary data and is typically used when saving BLOBs to disk."),(0,i.kt)("h4",{id:"imageformat"},"$imageformat"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"$imageformat")," parameter is used to specify the desired format for an image attribute. Common values include ",(0,i.kt)("inlineCode",{parentName:"p"},"best"),", which retrieves the image in the highest quality available."),(0,i.kt)("h4",{id:"version"},"$version"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"$version")," parameter is used to specify the version of the attribute to retrieve. This is often used with image attributes to get a specific version of the image."),(0,i.kt)("h2",{id:"use-cases"},"Use Cases"),(0,i.kt)("h3",{id:"viewing-an-image-attribute"},"Viewing an Image Attribute"),(0,i.kt)("p",null,"To view an image attribute in its entirety, you can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"$expand")," parameter along with optional parameters such as ",(0,i.kt)("inlineCode",{parentName:"p"},"$imageformat")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"$version"),"."),(0,i.kt)("h4",{id:"syntax-1"},"Syntax"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"GET /rest/{{dataClass}}(id)/{{imageAttribute}}?$imageformat=best&$version=1&$expand={{imageAttribute}}\n")),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"imageAttribute"),": The name of the image attribute."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$imageformat"),": Specifies the desired image format (e.g., best)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$version"),": Specifies the version of the image attribute."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$expand"),": The attribute to expand (same as ",(0,i.kt)("inlineCode",{parentName:"li"},"imageAttribute"),")."))),(0,i.kt)("h4",{id:"example"},"Example"),(0,i.kt)("p",null,"To view an employee's photo in the best format:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"GET /rest/Employee(1)/photo?$imageformat=best&$version=1&$expand=photo\n")),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Refer to the ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/$imageformat"},(0,i.kt)("inlineCode",{parentName:"a"},"$imageformat"))," and ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/$version"},(0,i.kt)("inlineCode",{parentName:"a"},"$version"))," documentation for more details on these parameters.")),(0,i.kt)("h3",{id:"saving-a-blob-attribute-to-disk"},"Saving a BLOB Attribute to Disk"),(0,i.kt)("p",null,"To save a BLOB stored in your dataclass, use the ",(0,i.kt)("inlineCode",{parentName:"p"},"$expand")," parameter along with ",(0,i.kt)("inlineCode",{parentName:"p"},"$binary=true")," to retrieve the BLOB content and prompt for saving it to disk."),(0,i.kt)("h4",{id:"syntax-2"},"Syntax"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"GET /rest/{{dataClass}}(id)/{{blobAttribute}}?$binary=true&$expand={{blobAttribute}}\n")),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"blobAttribute"),": The name of the BLOB attribute."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$binary"),": Set to ",(0,i.kt)("inlineCode",{parentName:"li"},"true")," to indicate the BLOB should be treated as binary data."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$expand"),": The attribute to expand (same as ",(0,i.kt)("inlineCode",{parentName:"li"},"blobAttribute"),")."))),(0,i.kt)("h4",{id:"example-1"},"Example"),(0,i.kt)("p",null,"To save a company's BLOB attribute to disk:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"GET /rest/Company(11)/blobAtt?$binary=true&$expand=blobAtt\n")),(0,i.kt)("h3",{id:"expanding-relational-attributes"},"Expanding Relational Attributes"),(0,i.kt)("p",null,"For compatibility reasons, ",(0,i.kt)("inlineCode",{parentName:"p"},"$expand")," can also be used to expand relational attributes, although using ",(0,i.kt)("inlineCode",{parentName:"p"},"$attributes")," is recommended for this purpose. This allows you to retrieve related entities in your data."),(0,i.kt)("h4",{id:"syntax-3"},"Syntax"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"GET /rest/{{dataClass}}(id)?$expand={{relationalAttribute}}\n")),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"relationalAttribute"),": The name of the relational attribute."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$expand"),": The relational attribute to expand."))),(0,i.kt)("h4",{id:"example-2"},"Example"),(0,i.kt)("p",null,"To expand a company's staff attribute:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"GET /rest/Company(1)?$expand=staff\n")),(0,i.kt)("p",null,"To expand an employee's employer attribute with a filter:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'GET /rest/Employee?$filter="firstName BEGIN a"&$expand=employer\n')),(0,i.kt)("h2",{id:"best-practices"},"Best Practices"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Use ",(0,i.kt)("inlineCode",{parentName:"strong"},"$attributes")," for Relational Attributes:")," Although ",(0,i.kt)("inlineCode",{parentName:"p"},"$expand")," can expand relational attributes, it is recommended to use the ",(0,i.kt)("inlineCode",{parentName:"p"},"$attributes")," parameter for better clarity and functionality.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Specify Image and Version Parameters:")," When expanding image attributes, use ",(0,i.kt)("inlineCode",{parentName:"p"},"$imageformat")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"$version")," to ensure you retrieve the desired format and version.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Combine with ",(0,i.kt)("inlineCode",{parentName:"strong"},"$binary")," for BLOBs:")," When dealing with BLOB attributes, always combine ",(0,i.kt)("inlineCode",{parentName:"p"},"$expand")," with ",(0,i.kt)("inlineCode",{parentName:"p"},"$binary=true")," to handle binary data properly."))))}m.isMDXComponent=!0}}]);